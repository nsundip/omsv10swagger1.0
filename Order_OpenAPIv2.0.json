{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "OMS V10 Order Swagger Definition"
  },
  "host": "old-rattlesnake-93.loca.lt",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/smcfs/restapi/order": {
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "_loginid",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "admin"
          },
          {
            "name": "_token",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "tGwksqDCZFPqUSGKsD1DItJphsXi9oRyiRd2A7ej6pguzklx5HB7uG3naTjSZGIt21"
          },
		  {
            "description": "The identifier of the scheduling rule to be used while checking inventory availability.  If not passed, the allocation rule with the ID 'SYSTEM' for the enterprise is used. If the allocation rule with the ID 'SYSTEM' is not found, the allocation rule with the ID 'SYSTEM' for the enterprise 'DEFAULT' is used.",
            "in": "query",
            "name": "AllocationRuleID",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ApproverUserID",
            "required": false,
            "type": "string"
          },
          {
            "description": "The smallest expiration date of currently valid expirations. This field is used by the system payment processing agents. Any transaction having a financial implication will set this date to current system date. This field is used as a trigger by payment processing agents to create charge and authorization reqeusts.",
            "in": "query",
            "name": "AuthorizationExpirationDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The owner channel of the order.",
            "in": "query",
            "name": "AuthorizedClient",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "AutoCancelDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The identifier of the bill to customer.  If a customer definition representing the buyer organization exists within the system, the BillToID can represent the CustomerID of the customer.  Otherwise, the BillToID can represent the PersonID of the bill to address or the BuyerOrganizationCode of the buyer organization.",
            "in": "query",
            "name": "BillToID",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "BillToIDQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "Mark For Node as identified by the buyer for eg: it could be a person,store,DC.",
            "in": "query",
            "name": "BuyerMarkForNodeId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The buyer organization that is associated with this order. This must be a valid organization defined in the system.",
            "in": "query",
            "name": "BuyerOrganizationCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "BuyerOrganizationCodeQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "Receiving node as identified by the buyer for eg:Store,DC Number.",
            "in": "query",
            "name": "BuyerReceivingNodeId",
            "required": false,
            "type": "string"
          },
          {
            "description": "This is the User Id of the customer for which order is created. This field maps to User_Id field of YFS_Customer_Contact.",
            "in": "query",
            "name": "BuyerUserId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "BuyerUserIdQryType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "CallingOrganizationCode",
            "required": false,
            "type": "string"
          },
          {
            "description": "The account number of the customer with the carrier.",
            "in": "query",
            "name": "CarrierAccountNo",
            "required": false,
            "type": "string"
          },
          {
            "description": "The carrier service code for this order.",
            "in": "query",
            "name": "CarrierServiceCode",
            "required": false,
            "type": "string"
          },
          {
            "description": "The PO number of the customer's customer. In some situations, this may need to be printed on the actual packaging.",
            "in": "query",
            "name": "CustCustPONo",
            "required": false,
            "type": "string"
          },
          {
            "description": "This is the customer contact ID for the order. This field maps to contact ID field of YFS_Customer_Contact.",
            "in": "query",
            "name": "CustomerContactID",
            "required": false,
            "type": "string"
          },
          {
            "description": "The E-mail ID of the customer.",
            "in": "query",
            "name": "CustomerEMailID",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "CustomerEMailIDQryType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "CustomerFirstName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "CustomerLastName",
            "required": false,
            "type": "string"
          },
          {
            "description": "The PO number of the customer. For purchase orders, this can be used for storing the purchase order number of the purchasing system if that number is not already stored as part of the order number.",
            "in": "query",
            "name": "CustomerPONo",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "CustomerPhoneNo",
            "required": false,
            "type": "string"
          },
          {
            "description": "The identifier of the customer's rewards number",
            "in": "query",
            "name": "CustomerRewardsNo",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "CustomerZipCode",
            "required": false,
            "type": "string"
          },
          {
            "description": "This flag indicates whether this order is to be used as the default template. For this order to be used as a default template, the document type of the order being created should be configured to set the template document type as this orders document type.",
            "in": "query",
            "name": "DefaultTemplate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The organization that pays the freight charges. For example, SUPPLIER, ENTERPRISE, and MARKETPLACE. However, you could pass any other value which is a valid shipment charge type as understood by the carrier by which the shipment is transported. See YFS_SHIPMENT_CONTAINER.carrier_payment_type for additional information.",
            "in": "query",
            "name": "DeliveryCode",
            "required": false,
            "type": "string"
          },
          {
            "description": "This field can be used for order classification and reporting purposes.",
            "in": "query",
            "name": "DepartmentCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "DisplayLocalizedFieldInLocale",
            "required": false,
            "type": "string"
          },
          {
            "description": "The order classification attribute. This field can be used for reporting purposes. Sterling Selling And Fulfillment Suite system has no logic based on this field.",
            "in": "query",
            "name": "Division",
            "required": false,
            "type": "string"
          },
          {
            "description": "The document type that is associated with this order. For example, Sales Order document (0001), Planned Order document (0002), Return Order document (0003) , and Purchase Order document (0005). This field determines the order's fulfillment cycle and controls the inventory and payment updates performed on the order.",
            "in": "query",
            "name": "DocumentType",
            "required": false,
            "type": "string"
          },
          {
            "description": "This flag indicates whether the order is yet to be confirmed. Order lines can only be deleted from the system in draft stage. This flag is not applicable for Quotes.",
            "in": "query",
            "name": "DraftOrderFlag",
            "required": false,
            "type": "string"
          },
          {
            "description": "The system or sales person who created the order.",
            "in": "query",
            "name": "EnteredBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "The enterprise that is associated with this order.",
            "in": "query",
            "name": "EnterpriseCode",
            "required": false,
            "type": "string"
          },
          {
            "description": "The channel through which this order was created.",
            "in": "query",
            "name": "EntryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "The date by which the quote has to be accepted by customer. This only applies to Quotes. The expiration date is computed by the expiration policy before presenting a quote to the customer. The expiration date is computed by adding EXPIRATION_PERIOD rule to the current date. The expiration date can also be updated before presenting to the customer. If the date is overridden, further computations of the date are ignored and the overridden expiration date is published on the quote for the customer.",
            "in": "query",
            "name": "ExpirationDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Indicates Freight Terms for the order.",
            "in": "query",
            "name": "FreightTerms",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromBillToID",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromBuyerOrganizationCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromBuyerUserId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromCustomerEMailID",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromHoldReasonCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromOrderDate",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromOrderHeaderKey",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromOrderName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromOrderNo",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromPaymentStatus",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromPriceProgramKey",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromReceivingNode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromReqDeliveryDate",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromReqShipDate",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromSearchCriteria1",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromSearchCriteria2",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromSellerOrganizationCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromShipNode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromShipToID",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FromStatus",
            "required": false,
            "type": "string"
          },
          {
            "description": "This flag indicates whether the order has any derived children.",
            "in": "query",
            "name": "HasDerivedChild",
            "required": false,
            "type": "string"
          },
          {
            "description": "This flag indicates whether the order has any derived parent.",
            "in": "query",
            "name": "HasDerivedParent",
            "required": false,
            "type": "string"
          },
          {
            "description": "This flag indicates whether the order or any order line is on hold. If the order is on hold, default configuration will stop the scheduling and release process for the order.",
            "in": "query",
            "name": "HoldFlag",
            "required": false,
            "type": "string"
          },
          {
            "description": "The reason code for putting the order on hold.",
            "in": "query",
            "name": "HoldReasonCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "HoldReasonCodeQryType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "IgnoreOrdering",
            "required": false,
            "type": "string"
          },
          {
            "description": "This flag indicates whether invoicing is done for the entire order.",
            "in": "query",
            "name": "InvoiceComplete",
            "required": false,
            "type": "string"
          },
          {
            "description": "This flag indicates whether the expiration date is overridden or whether it is computed by the default expiration policy. The value is Y if expiration date is overridden. This flag only applies to Quotes.",
            "in": "query",
            "name": "IsExpirationDateOverridden",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "LatestFirst",
            "required": false,
            "type": "string"
          },
          {
            "description": "Indicates the level of service required for this order.  Default is Null.",
            "in": "query",
            "name": "LevelOfService",
            "required": false,
            "type": "string"
          },
          {
            "description": "This field is used to link an order of a different document classification to this order record. e.g. Order header key of the quote is stored in this column.",
            "in": "query",
            "name": "LinkedSourceKey",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies the Maximum Number of records to be returned. Default is 500.",
            "in": "query",
            "name": "MaximumRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "This field provides details on notifications based on the notification type. For example, for notification type 'e-mail' this would be the e-mail address. This field is not used within the application.",
            "in": "query",
            "name": "NotificationReference",
            "required": false,
            "type": "string"
          },
          {
            "description": "This field is not used within the application. It is published with events so that external decisions can be made based on it.",
            "in": "query",
            "name": "NotificationType",
            "required": false,
            "type": "string"
          },
          {
            "description": "This field is not currently used.",
            "in": "query",
            "name": "NotifyAfterShipmentFlag",
            "required": false,
            "type": "string"
          },
          {
            "description": "The opportunity that is associated with this order. It is the primary key of the YFS_OPPORTUNITY table.",
            "in": "query",
            "name": "OpportunityKey",
            "required": false,
            "type": "string"
          },
          {
            "description": "This flag indicates whether the order has reached the end of its processing lifecycle.",
            "in": "query",
            "name": "OrderComplete",
            "required": false,
            "type": "string"
          },
          {
            "description": "The date on which the order was taken. If not passed during order creation, it is defaulted to current system date.",
            "in": "query",
            "name": "OrderDate",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "OrderDateQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "The primary key for the YFS_ORDER_HEADER table.",
            "in": "query",
            "name": "OrderHeaderKey",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "OrderHeaderKeyQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "The name given to the order.",
            "in": "query",
            "name": "OrderName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "OrderNameQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "The number of the order, which can be passed during order creation or generated based on a system rule setting.",
            "in": "query",
            "name": "OrderNo",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "OrderNoQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "The order classification attribute. This field can be used for reporting purposes or to build conditions for modeling your business process. Sterling Selling And Fulfillment Suite system has no default logic based on this field.",
            "in": "query",
            "name": "OrderType",
            "required": false,
            "type": "string"
          },
          {
            "description": "This field is used by Sterling Multi-Channel Selling Solution.",
            "in": "query",
            "name": "OriginalContainerKey",
            "required": false,
            "type": "string"
          },
          {
            "description": "The payment rule that is associated with this order. All decisions on payment handling are controlled by this rule.",
            "in": "query",
            "name": "PaymentRuleId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The information about the payment status of the order.",
            "in": "query",
            "name": "PaymentStatus",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "PaymentStatusQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "The code that describes the personalization required for the order.",
            "in": "query",
            "name": "PersonalizeCode",
            "required": false,
            "type": "string"
          },
          {
            "description": "The price program that is associated with this order.",
            "in": "query",
            "name": "PriceProgramKey",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "PriceProgramKeyQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "This field is used by Sterling Multi-Channel Selling Solution.",
            "in": "query",
            "name": "PricingClassificationCode",
            "required": false,
            "type": "string"
          },
          {
            "description": "The priority code of the order. External logic can be built for prioritizing orders.",
            "in": "query",
            "name": "PriorityCode",
            "required": false,
            "type": "string"
          },
          {
            "description": "The numeric priority code as opposed to alphanumeric field PRIORITY_CODE.",
            "in": "query",
            "name": "PriorityNumber",
            "required": false,
            "type": "string"
          },
          {
            "description": "The date that this order should be purged from the history table. If set, this date will override the date determined based on the History Purge Lead Days.",
            "in": "query",
            "name": "PurgeHistoryDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "This field is passed out in the tax calculation user exits.",
            "in": "query",
            "name": "Purpose",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ReadFromHistory",
            "required": false,
            "type": "string"
          },
          {
            "description": "The node an order is to be shipped to.",
            "in": "query",
            "name": "ReceivingNode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ReceivingNodeQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "The requested cancel date. If this date is in the future, the order will be scheduled only up to this date. If this date is in the past, the order can be scheduled for shipping today as long as it has not been cancelled already. The order line level cancel date overrides this attribute.",
            "in": "query",
            "name": "ReqCancelDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The requested delivery date. This date is stamped on order lines (as requested delivery date) during order creation if no requested delivery date was passed at the order line level.",
            "in": "query",
            "name": "ReqDeliveryDate",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ReqDeliveryDateQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "The date the customer has requested the order to be shipped on. Based on the 'Driver Date' parameter of the document type, the ship date or delivery date will be calculated based on transit time calculations (if not passed at order creation).",
            "in": "query",
            "name": "ReqShipDate",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ReqShipDateQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "The carrier assigned to the order.",
            "in": "query",
            "name": "SCAC",
            "required": false,
            "type": "string"
          },
          {
            "description": "This field is provided for allowing custom searches. You can decide at implementation time what should be stored in this field.",
            "in": "query",
            "name": "SearchCriteria1",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "SearchCriteria1QryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "This field is provided for allowing custom searches. You can decide at implementation time what should be stored in this field.",
            "in": "query",
            "name": "SearchCriteria2",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "SearchCriteria2QryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "The seller organization that is associated with this order. This must be a valid organization defined in the system.",
            "in": "query",
            "name": "SellerOrganizationCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "SellerOrganizationCodeQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "The ship node at which this order will be fulfilled.",
            "in": "query",
            "name": "ShipNode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ShipNodeQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "The identifier of the ship to customer.  If a customer definition representing the buyer organization exists within the system, the ShipToID can represent the CustomerID of the customer.  Otherwise, the ShipToID can represent the PersonID of the ship to address or the receiving node of the order.",
            "in": "query",
            "name": "ShipToID",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ShipToIDQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "This field is used by Sterling Multi-Channel Selling Solution.",
            "in": "query",
            "name": "SoldToKey",
            "required": false,
            "type": "string"
          },
          {
            "description": "This field is deprecated.",
            "in": "query",
            "name": "SourceKey",
            "required": false,
            "type": "string"
          },
          {
            "description": "This field is internal. Validate value is 'Quote'.",
            "in": "query",
            "name": "SourceType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "Status",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "StatusQryType",
            "required": false,
            "type": "string"
          },
          {
            "description": "This flag indicates whether the buyer is extempt from paying taxes.",
            "in": "query",
            "name": "TaxExemptFlag",
            "required": false,
            "type": "string"
          },
          {
            "description": "The buyer's tax exemption certificate.",
            "in": "query",
            "name": "TaxExemptionCertificate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The tax jurisdiction of the buyer.",
            "in": "query",
            "name": "TaxJurisdiction",
            "required": false,
            "type": "string"
          },
          {
            "description": "The identifier of the buyer.",
            "in": "query",
            "name": "TaxPayerId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The terms code of the order. This is passed on to the invoice and published with the invoice.",
            "in": "query",
            "name": "TermsCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToBillToID",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToBuyerOrganizationCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToBuyerUserId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToCustomerEMailID",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToHoldReasonCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToOrderDate",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToOrderHeaderKey",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToOrderName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToOrderNo",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToPaymentStatus",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToPriceProgramKey",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToReceivingNode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToReqDeliveryDate",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToReqShipDate",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToSearchCriteria1",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToSearchCriteria2",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToSellerOrganizationCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToShipNode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToShipToID",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ToStatus",
            "required": false,
            "type": "string"
          },
          {
            "description": "the sum of all the credit and debit memos issued against this order.",
            "in": "query",
            "name": "TotalAdjustmentAmount",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "TransactionId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Request a specific range of records. Sample value: 'items=20-39'",
            "in": "header",
            "name": "Range",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderList"
            }
          }
        },
        "description": "",
        "operationId": "get_order_order",
        "summary": "Invokes the getOrderList API"
      },
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "_loginid",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "admin"
          },
          {
            "name": "_token",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "tGwksqDCZFPqUSGKsD1DItJphsXi9oRyiRd2A7ej6pguzklx5HB7uG3naTjSZGIt21"
          },
		  {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Order"
            }
          }
        },
        "description": "",
        "operationId": "post_order_order",
        "summary": "Invokes the createOrder API"
      }
    },
    "/smcfs/restapi/order/{id}": {
      "delete": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "_loginid",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "admin"
          },
          {
            "name": "_token",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "tGwksqDCZFPqUSGKsD1DItJphsXi9oRyiRd2A7ej6pguzklx5HB7uG3naTjSZGIt21"
          },
		  {
            "description": "Unique identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          }
        },
        "description": "",
        "operationId": "delete_order_order_x",
        "summary": "Invokes the deleteOrder API"
      },
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "Unique identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Order"
            }
          }
        },
        "description": "",
        "operationId": "get_order_order_x",
        "summary": "Invokes the getOrderDetails API"
      },
      "patch": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "Unique identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Order"
            }
          }
        },
        "description": "",
        "operationId": "patch_order_order_x",
        "summary": "Invokes the changeOrder API"
      }
    }
  },
  "definitions": {
    "com.ibm.sterling.smcfs.order.AddedAwards": {
      "properties": {
        "Award": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Award"
        },
        "TotalNumberOfRecords": {
          "description": "Number of Added Awards on the Order.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.AdditionalAddress": {
      "properties": {
        "AddressType": {
          "description": "Identifies the type of address. Part of unique key",
          "type": "string"
        },
        "EntityAddressKey": {
          "description": "Primary key attribute of YFS_ENTITY_ADDRESS.",
          "type": "string"
        },
        "EntityKey": {
          "description": "Link to the entity table",
          "type": "string"
        },
        "EntityParentKey": {
          "description": "Link to the entity's parent table. Denormalized data to allow faster access of records for all addresses attached with the parent. In case of an order line address, this would store order header key",
          "type": "string"
        },
        "EntityType": {
          "description": "Identifies the entity to  which this address is attached to",
          "type": "string"
        },
        "PersonInfo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PersonInfo"
        },
        "PersonInfoKey": {
          "description": "Link to YFS_PERSON_INFO table that stores the actual address",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.AdditionalAddresses": {
      "properties": {
        "AdditionalAddress": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AdditionalAddress"
          },
          "type": "array"
        },
        "NumberOfAdditionalAddresses": {
          "description": "The number of additional addresses associated with the\n\t\t\t\t\t\torder.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.AdditionalAttribute": {
      "properties": {
        "AdditionalAttributeKey": {
          "description": "Primary key attribute of YFS_ADDITIONAL_ATTRIBUTE.",
          "type": "string"
        },
        "AttributeDomainID": {
          "description": "The unique identification of the attribute domain.",
          "type": "string"
        },
        "AttributeGroupID": {
          "description": "The unique identification of the attribute group.",
          "type": "string"
        },
        "DoubleValue": {
          "description": "The value of the assigned attribute whose data type is 'DECIMAL'.",
          "type": "string"
        },
        "IntegerValue": {
          "description": "The value of the assigned attribute whose data type is 'INTEGER'.",
          "type": "string"
        },
        "IsInherited": {
          "description": "This field indicates whether the assignment of attribute value as additional attribute was based on inheritance. For ParentTable='YFS_CATEGORY', a value of 'Y' indicates that the assignment is based on inheritance of the value assigned to the upper level category. For ParentTable='YFS_ITEM', a value of 'Y' indicates that the assignment is based on inheritance of the value assigned to the category to which the item belongs.",
          "type": "string"
        },
        "Name": {
          "description": "Name of the dynamic attribute.",
          "type": "string"
        },
        "Value": {
          "description": "Value of the attribute.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.AdditionalAttributeList": {
      "properties": {
        "AdditionalAttribute": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AdditionalAttribute"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.AdditionalLinePrice": {
      "properties": {
        "AdditionalLinePriceKey": {
          "description": "Primary key attribute of the YFS_ADDNL_LINE_PRICE table.",
          "type": "string"
        },
        "Awards": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Awards"
        },
        "ExtendedPrice": {
          "description": "ExtendedPrice of the AdditionalLinePrice for this OrderLine. Equal to the Price of the additional line times ActualPricingQuantity.",
          "type": "string"
        },
        "IsPriceLocked": {
          "description": "Indicates that the Price for this Price Type is locked and is specified in the input.",
          "type": "string"
        },
        "IsPriceTypeForInformationOnly": {
          "description": "Flag to indicate that his Price Type is for informational use only.",
          "type": "string"
        },
        "Operation": {
          "type": "string"
        },
        "OrderLineKey": {
          "description": "Primary key attribute of the YFS_ORDER_LINE table.",
          "type": "string"
        },
        "Price": {
          "description": "Price value of the corresponding Price Type.",
          "type": "string"
        },
        "PriceTypeName": {
          "description": "Price Type associated with this record.",
          "type": "string"
        },
        "Promotions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Promotions"
        },
        "RecurringType": {
          "description": "Recurring Interval for Price Type; if null, then Price Type is non-recurring.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.AdditionalLinePriceSummary": {
      "properties": {
        "LinePriceFrequencyList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LinePriceFrequencyList"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.AdditionalLinePrices": {
      "properties": {
        "AdditionalLinePrice": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AdditionalLinePrice"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.AllowedModifications": {
      "properties": {
        "Modification": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Modification"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.AllowedTransactions": {
      "properties": {
        "Transaction": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Transaction"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.AlternateUOM": {
      "properties": {
        "Height": {
          "description": "Height of an item with this alternate UOM.",
          "type": "string"
        },
        "HeightUOM": {
          "description": "Unit of measure in which item height is measured.",
          "type": "string"
        },
        "IsOrderingUOM": {
          "description": "Indicates if UOM can be used as ordering unit of measure.",
          "type": "string"
        },
        "ItemKey": {
          "description": "Item for which alternate UOM is being maintained.",
          "type": "string"
        },
        "ItemUOMKey": {
          "description": "Primary key attribute of YFS_ITEM_UOM.",
          "type": "string"
        },
        "Length": {
          "description": "Length of an item for with alternate UOM.",
          "type": "string"
        },
        "LengthUOM": {
          "description": "Unit of measure in which an item length is measured.",
          "type": "string"
        },
        "Quantity": {
          "description": "Conversion quantity to the inventory UOM.",
          "type": "string"
        },
        "UnitOfMeasure": {
          "description": "Alternate UOM applicable for the Item.",
          "type": "string"
        },
        "Weight": {
          "description": "Weight of an item with this alternate UOM.",
          "type": "string"
        },
        "WeightUOM": {
          "description": "Unit of measure in which a package's weight is measured.",
          "type": "string"
        },
        "Width": {
          "description": "Width of an item for with alternate UOM.",
          "type": "string"
        },
        "WidthUOM": {
          "description": "Unit of measure in which an item's width is measured.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.AlternateUOMList": {
      "properties": {
        "AlternateUOM": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AlternateUOM"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Answer": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "AnswerSetTranKey": {
          "description": "The answer set for this answer.",
          "type": "string"
        },
        "AnswerTranKey": {
          "description": "Primary key of answer tran.",
          "type": "string"
        },
        "AnswerValue": {
          "description": "The answer for the question.",
          "type": "string"
        },
        "QuestionID": {
          "description": "Identifier for the question that this answer is for.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.AnswerSet": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "AnswerSetTranKey": {
          "description": "Primary key of answer set tran.",
          "type": "string"
        },
        "Answers": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Answers"
        },
        "PersonInfoKey": {
          "description": "The person info record this answer set is stored for.",
          "type": "string"
        },
        "PrimaryTableName": {
          "description": "The name of the table which stores the record of the primary owner of this answer set.",
          "type": "string"
        },
        "PrimaryTableRefKey": {
          "description": "The key for the primary owner of this answer set.",
          "type": "string"
        },
        "QuestionType": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.AnswerSets": {
      "properties": {
        "AnswerSet": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AnswerSet"
          },
          "type": "array"
        },
        "TotalNumberOfRecords": {
          "description": "Number of answer sets in the Order.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Answers": {
      "properties": {
        "Answer": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Answer"
          },
          "type": "array"
        },
        "Reset": {
          "description": "Indicates if all existing child node definition in the database need to be scrapped and have only these definitions supplied in the XML.",
          "type": "string"
        },
        "TotalNumberOfRecords": {
          "description": "Number of answer sets in the Order.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Attribute": {
      "properties": {
        "Extended": {
          "description": "Determines whether the attribute is an extended field. If this attribute\n\t\t\t\t\t\t\t\tis not available, then it means the attribute is not extended.",
          "type": "string"
        },
        "ModificationType": {
          "description": "Modification Type used for changing the attribute",
          "type": "string"
        },
        "Name": {
          "description": "Name of the Attribute Changed",
          "type": "string"
        },
        "NewValue": {
          "description": "New Value of the attribute modified",
          "type": "string"
        },
        "OldValue": {
          "description": "Old Value of the attribute modified",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Attributes": {
      "properties": {
        "Attribute": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Attribute"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Award": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "AdditionalLinePriceKey": {
          "description": "Primary key attribute of the YFS_ADDNL_LINE_PRICE table.",
          "type": "string"
        },
        "AwardAmount": {
          "description": "The amount of discount or charge that was applied as a part of this award.",
          "type": "string"
        },
        "AwardApplied": {
          "description": "A flag indicating if the award is applied. When ValidateReferences=Y the value can be 'P' meaning the award was partially applied",
          "type": "string"
        },
        "AwardId": {
          "description": "A unique identifier for the award. If pricing is maintained within the system, this will be the PricingRuleName of the pricing rule that created this award.",
          "type": "string"
        },
        "AwardKey": {
          "description": "The primary key of the YFS_PROMOTION_AWARD table.",
          "type": "string"
        },
        "AwardQuantity": {
          "description": "Indicates the remaining free gift quantity available for the promotion.",
          "type": "string"
        },
        "AwardType": {
          "description": "The type of award. If pricing is maintained within the system, this will be the RuleCategory of the pricing rule that created this award.",
          "type": "string"
        },
        "ChargeCategory": {
          "description": "The charge category of the LineCharge or HeaderCharge for which this award was created.",
          "type": "string"
        },
        "ChargeName": {
          "description": "The charge name of the LineCharge or HeaderCharge for which this award was created.",
          "type": "string"
        },
        "DenialReason": {
          "description": "If the award is denied, the reason for the denial.",
          "type": "string"
        },
        "Description": {
          "description": "A description for the award. If pricing is maintained within the system, this will be the Description of the pricing rule that created this award.",
          "type": "string"
        },
        "IsFreeGiftAward": {
          "description": "Indicates that the award is associated with a free gift rule.",
          "type": "string"
        },
        "IsManual": {
          "description": "Indicates that the award is associated to a Manual Line or Rule modification.",
          "type": "string"
        },
        "IsPromotionOnOrder": {
          "description": "Determines whether the Award was created for a\n\t\t\t\t\t\t\tPromotion\n\t\t\t\t\t\t\ton the order.",
          "type": "string"
        },
        "IsPromotionOnOrderLine": {
          "description": "Determines whether the Award was created for a\n\t\t\t\t\t\t\t\t\tPromotion\n\t\t\t\t\t\t\t\t\ton the order line.",
          "type": "string"
        },
        "PosReasonCode": {
          "description": "Reason this promotion was applied.",
          "type": "string"
        },
        "PricingRule": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRule"
        },
        "PromotionId": {
          "description": "This identifies the promotion that is added to this order.",
          "type": "string"
        },
        "PromotionKey": {
          "description": "The promotion this award belongs to.",
          "type": "string"
        },
        "PromotionReferences": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PromotionReferences"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Awards": {
      "properties": {
        "Award": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Award"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.BundleComponent": {
      "properties": {
        "Item": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Item"
        },
        "PrimeLineNo": {
          "description": "The order line number.",
          "type": "string"
        },
        "SubLineNo": {
          "description": "The sub line number.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.BundleComponents": {
      "properties": {
        "BundleComponent": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.BundleComponent"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.BundleOverallTotals": {
      "properties": {
        "GrandCharges": {
          "type": "string"
        },
        "GrandDiscounts": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.BundleParentLine": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "OrderLineKey": {
          "description": "The primary key for the YFS_ORDER_LINE table.",
          "type": "string"
        },
        "PrimeLineNo": {
          "description": "The order line number.",
          "type": "string"
        },
        "SubLineNo": {
          "description": "The sub line number.",
          "type": "string"
        },
        "TransactionalLineId": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.BuyerContactAddress": {
      "properties": {
        "AddressID": {
          "description": "A user specified label for an address.",
          "type": "string"
        },
        "AddressLine1": {
          "description": "The address line 1 field.",
          "type": "string"
        },
        "AddressLine2": {
          "description": "The address line 2 field.",
          "type": "string"
        },
        "AddressLine3": {
          "description": "The address line 3 field.",
          "type": "string"
        },
        "AddressLine4": {
          "description": "The address line 4 field.",
          "type": "string"
        },
        "AddressLine5": {
          "description": "The address line 5 field.",
          "type": "string"
        },
        "AddressLine6": {
          "description": "The address line 6 field.",
          "type": "string"
        },
        "AlternateEmailID": {
          "description": "The alternate email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "Beeper": {
          "description": "The beeper number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "City": {
          "description": "The city in the address.",
          "type": "string"
        },
        "Company": {
          "description": "The company this person is associated with.",
          "type": "string"
        },
        "Country": {
          "description": "The country in the address.",
          "type": "string"
        },
        "DayFaxNo": {
          "description": "The day time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "DayPhone": {
          "description": "The day time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "Department": {
          "description": "The primary department in charge of procurement.",
          "type": "string"
        },
        "EMailID": {
          "description": "The email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "EveningFaxNo": {
          "description": "The evening time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "EveningPhone": {
          "description": "The evening time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "FirstName": {
          "description": "The first name of the person.",
          "type": "string"
        },
        "IsAddressVerified": {
          "description": "This flag indicates whether or not the address in this record has been verified by an address verification program. Intended for future use.",
          "type": "string"
        },
        "IsCommercialAddress": {
          "description": "Indicates whether the address is commercial, residential or none. Values of this field can be Y -Commercial address.N - Residential address. undefined for Null.",
          "type": "string"
        },
        "JobTitle": {
          "description": "The job title of the person.",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the person.",
          "type": "string"
        },
        "Latitude": {
          "description": "The latitude of this location.",
          "type": "string"
        },
        "Longitude": {
          "description": "The longitude of this location.",
          "type": "string"
        },
        "MiddleName": {
          "description": "The middle name of the person.",
          "type": "string"
        },
        "MobilePhone": {
          "description": "The mobile phone at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "OtherPhone": {
          "description": "The alternate phone number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "PersonID": {
          "description": "The unique identifier for a person.",
          "type": "string"
        },
        "PersonInfoKey": {
          "description": "The primary key for the YFS_PERSON_INFO table.",
          "type": "string"
        },
        "State": {
          "description": "The state in the address.",
          "type": "string"
        },
        "Suffix": {
          "description": "The suffix for a person, such as Jr., or Sr.",
          "type": "string"
        },
        "TaxGeoCode": {
          "description": "The tax geo code for this location. Intended for future use.",
          "type": "string"
        },
        "Title": {
          "description": "The title for the person such as Ms., Mr., or Dr..",
          "type": "string"
        },
        "ZipCode": {
          "description": "The zip code in the address.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.CapacityAllocation": {
      "properties": {
        "AllocatedCapacity": {
          "description": "Allocation capacity",
          "type": "string"
        },
        "CapacityReference": {
          "description": "Capacity reference",
          "type": "string"
        },
        "PromisedApptEndDate": {
          "description": "Promised appointment end date",
          "type": "string"
        },
        "PromisedApptStartDate": {
          "description": "Promised appointment start date",
          "type": "string"
        },
        "ResourcePoolKey": {
          "description": "Link to YFS_RES_POOL table.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.CapacityAllocations": {
      "properties": {
        "CapacityAllocation": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CapacityAllocation"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Category": {
      "properties": {
        "CategoryID": {
          "description": "The unique identifier for this category.",
          "type": "string"
        },
        "CategoryKey": {
          "description": "The primary key for the YFS_CATEGORY table.",
          "type": "string"
        },
        "CategoryPath": {
          "description": "The path for the category.",
          "type": "string"
        },
        "OrganizationCode": {
          "description": "The code for the organization this category is associated with.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.CategoryList": {
      "properties": {
        "Category": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Category"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChainedFrom": {
      "properties": {
        "DocumentType": {
          "description": "The document type that is associated with this order. For example, Sales Order document (0001), Planned Order document (0002), Return Order document (0003) , and Purchase Order document (0005). This field determines the order's fulfillment cycle and controls the inventory and payment updates performed on the order.",
          "type": "string"
        },
        "EnterpriseCode": {
          "description": "The enterprise that is associated with this order.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The order header that this order line is associated with.",
          "type": "string"
        },
        "OrderLineKey": {
          "description": "The primary key for the YFS_ORDER_LINE table.",
          "type": "string"
        },
        "OrderNo": {
          "description": "The order number that this order line is chained from.",
          "type": "string"
        },
        "PrimeLineNo": {
          "description": "The order line number.",
          "type": "string"
        },
        "SubLineNo": {
          "description": "The sub line number.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChainedFromOrderLine": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "AdditionalAddresses": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AdditionalAddresses"
        },
        "AdditionalLinePrices": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AdditionalLinePrices"
        },
        "AllocationDate": {
          "description": "The date when this line will be allocated. This is calculated at order creation time, based on the node processing time. This field is not used from version 50 onwards. The  field is used instead.",
          "type": "string"
        },
        "AllocationLeadTime": {
          "description": "The number of days it will take any node to ship the item after a ship advice is sent. It is defaulted from the Rule Set Field Name (). The release process will this value, or the scheduled node's lead time (setup at ship node level), whichever is greater.",
          "type": "string"
        },
        "ApptStatus": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "ApptWarning": {
          "description": "Displays a warning message if\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tor\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfields have a Non-Null value.",
          "type": "string"
        },
        "AvailableQtyForStopDelivery": {
          "description": "The quantity available through modification rules for\n\t\t\t\t\t\t\tmaking a stop delivery request for this line.",
          "type": "string"
        },
        "AwaitingDeliveryRequest": {
          "description": "A flag to indicate if the order line is awaiting for\n\t\t\t\t\t\t\ta Delivery service association.",
          "type": "string"
        },
        "Awards": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Awards"
        },
        "BackorderNotificationQty": {
          "description": "The backordered quantity for which the last customer notification was sent.",
          "type": "string"
        },
        "BundleComponents": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.BundleComponents"
        },
        "BundleOverallTotals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.BundleOverallTotals"
        },
        "BundleParentLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.BundleParentLine"
        },
        "BuyerMarkForNodeId": {
          "description": "Mark For Node as identified by the buyer for eg: it could be a person,store,DC.",
          "type": "string"
        },
        "BuyerReceivingNodeId": {
          "description": "Receiving node as identified by the buyer for eg:Store,DC Number.",
          "type": "string"
        },
        "CanAddServiceLines": {
          "description": "this flag indicates whether the product line can be associated with service lines.",
          "type": "string"
        },
        "CapacityAllocations": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CapacityAllocations"
        },
        "CarrierAccountNo": {
          "description": "The customers carrier account number.",
          "type": "string"
        },
        "CarrierServiceCode": {
          "description": "The carrier service code for this order line.",
          "type": "string"
        },
        "ChainedFromOrderHeaderKey": {
          "description": "The order header that is associated with this chained order line. If this line is chained from another order line, this key will point to the parent order line's header record.",
          "type": "string"
        },
        "ChainedFromOrderLineKey": {
          "description": "The order line that is associated with this chained order line. If this line is chained from another order line, this key will point to the parent order line.",
          "type": "string"
        },
        "ChildOrderLineRelationships": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChildOrderLineRelationships"
        },
        "CommittedQuantity": {
          "description": "It is a data attribute to store the quantity that is committed by supplier.",
          "type": "string"
        },
        "ComputedPrice": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ComputedPrice"
        },
        "ConditionVariable1": {
          "description": "A user defined variable that can be used for condition building in process modeling.",
          "type": "string"
        },
        "ConditionVariable2": {
          "description": "A user defined variable that can be used for condition building in process modeling.",
          "type": "string"
        },
        "ConfigurationKey": {
          "description": "This field is used by Sterling Multi-Channel Selling Solution so that Visual Modeler can be opened with existing options.",
          "type": "string"
        },
        "CustomAttributes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CustomAttributes"
        },
        "CustomerLinePONo": {
          "description": "The buyer PO line number.",
          "type": "string"
        },
        "CustomerPONo": {
          "description": "The buyer's PO number.",
          "type": "string"
        },
        "DeliveryAssociations": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.DeliveryAssociations"
        },
        "DeliveryCode": {
          "description": "This field indicates who will pay the freight. Application understands values such as SUPPLIER, ENTERPRISE and MARKETPLACE to mean that each of these organizations will pay for the freight. You could however pass any other value which is a valid shipment charge type as understood by the carrier by which the shipment is transported. See YFS_SHIPMENT_CONTAINER.carrier_payment_type for additional information.",
          "type": "string"
        },
        "DeliveryMethod": {
          "description": "The delivery method for the product line.",
          "type": "string"
        },
        "DepartmentCode": {
          "description": "This field can be used for line classification and reporting purposes.",
          "type": "string"
        },
        "DependencyShippingRule": {
          "description": "This field indicates whether any order lines are dependant on the parent order line. This field can only be specified for the parent line. If this field is specified, it is defaulted on all of the dependant lines. This field is ignored if it is specified on a dependant line.",
          "type": "string"
        },
        "DependentOnLineKey": {
          "description": "The order line key that this order line is associated with. This field will indicate which order line is the parent of the the order line for line dependencies.",
          "type": "string"
        },
        "DerivedFromOrder": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.DerivedFromOrder"
        },
        "DerivedFromOrderHeaderKey": {
          "description": "The order header that is associated with this derived order line. If this line was derived from another order line, this key will point to the parent order line's header record.",
          "type": "string"
        },
        "DerivedFromOrderLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.DerivedFromOrderLine"
        },
        "DerivedFromOrderLineKey": {
          "description": "The order line that is associated with this derived order line. If this line was derived from another order line, this key will point to the parent order line.",
          "type": "string"
        },
        "DerivedFromOrderReleaseKey": {
          "description": "The order release that this derived order line is associated with. If this line was derived from another order line, this key will point to the parent order release record.",
          "type": "string"
        },
        "DispositionCode": {
          "description": "The disposition code for the return line.",
          "type": "string"
        },
        "DistributionRuleId": {
          "description": "the identifier of the distribution group that is used to determine the ship node(s) that will ship the order line. If not proviFded, the seller organization's default distribution rule ID is used. If provided, it must be a valid ID for the Seller organization.",
          "type": "string"
        },
        "FillQuantity": {
          "description": "The minimum order line quantity that must be fulfilled in an order release before it is shipped.",
          "type": "string"
        },
        "FirstIterationSeqNo": {
          "description": "The first iteration sequence for which this line is applicable. If Null, it is assumed that the line applies to all sequences before LastIterationSeqNo. Default is Null.",
          "type": "string"
        },
        "FreightTerms": {
          "description": "Indicates Freight Terms for the line.",
          "type": "string"
        },
        "FulfillmentType": {
          "description": "The method of fulfilling the order line during scheduling. This field can be matched with the corresponding field in the YFS_SOURCING_RULE_HDR table and the appropriate sourcing rule can be selected.",
          "type": "string"
        },
        "FutureAvailabilityDate": {
          "description": "Thie field indicates when inventory for the product line will be available.",
          "type": "string"
        },
        "GiftFlag": {
          "description": "This flag indicates whether the order line is a gift item.",
          "type": "string"
        },
        "GiftWrap": {
          "description": "This field indicates if the order line has to be gift wrapped.",
          "type": "string"
        },
        "GroupSequenceNumber": {
          "description": "This field is used to assign a decimal value to each line for the purpose of sorting them in a specific sequence.",
          "type": "string"
        },
        "HasChainedLines": {
          "type": "string"
        },
        "HasDeliveryLines": {
          "description": "Indicates if the line has associated delivery lines.\n\t\t\t\t\t\t\tValid only for product lines.",
          "type": "string"
        },
        "HasDerivedChild": {
          "type": "string"
        },
        "HasServiceLines": {
          "description": "Indicates if the line has associated service lines.\n\t\t\t\t\t\t\tValid only for product lines.",
          "type": "string"
        },
        "HoldFlag": {
          "description": "This flag determines whether a hold has been placed on the order when certain hold type criteria are met. If order is on hold, default configuration will stop the shceduling and release process for the order. The flag is reset to 'N' when all the hold types have been resolved on the order and all of its order lines. Based on hold type configuration, certain transactions may not be allowed to process. Note that there is no validation made on the hold applied but this flag can be reset by the application based on hold types existed on the order. Default: N Valid Values: Y or N",
          "type": "string"
        },
        "HoldReasonCode": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "ImportLicenseExpDate": {
          "description": "The expiration date of the import license number.",
          "type": "string"
        },
        "ImportLicenseNo": {
          "description": "The import license number to be used.",
          "type": "string"
        },
        "InStorePaymentRequired": {
          "description": "This flag indicates if this order line will have its payment processed later. When set, the line's total will be added to the postponed amount. This will override tha value on the order header.",
          "type": "string"
        },
        "Instructions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Instructions"
        },
        "IntentionalBackorder": {
          "description": "A flag to indicate if the order line should be\n\t\t\t\t\t\t\tbackordered upon creation. If passed as 'Y', the line will be\n\t\t\t\t\t\t\tbackordered even if inventory is available. This flag is ignored\n\t\t\t\t\t\t\tif reservation is mandatory.",
          "type": "string"
        },
        "InvoicedExtendedPrice": {
          "description": "The total extended price which has already been invoiced.",
          "type": "string"
        },
        "InvoicedQty": {
          "description": ".\n\t\t\t\t\t\tInvoiced quantity on the order line.",
          "type": "string"
        },
        "InvoicedQuantity": {
          "description": "Invoiced quantity on the order line.",
          "type": "string"
        },
        "IsBlindLine": {
          "description": "Indicates if the line is blind line or not.",
          "type": "string"
        },
        "IsBundleParent": {
          "description": "Indicates if Order line is bundle parent line or not.",
          "type": "string"
        },
        "IsFirmPredefinedNode": {
          "description": "This flag indicates whether the pre-defined node on the line is firm.  If IsFirmPredefinedNode is marked as N, then the node on the line is ignored during scheduling. If not passed, the value defaults to Y.",
          "type": "string"
        },
        "IsPickUpNow": {
          "description": "This flag determines whether the item is picked up now.",
          "type": "string"
        },
        "IsPriceMatched": {
          "description": "This flag determines whether price match was performed for the item.",
          "type": "string"
        },
        "Item": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Item"
        },
        "ItemDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemDetails"
        },
        "ItemGroupCode": {
          "description": "This field indicates what kind of item is on the order line.",
          "type": "string"
        },
        "ItemIsInHand": {
          "description": "This flag determines whether the item was in hand when the return order was created.",
          "type": "string"
        },
        "ItemNotExist": {
          "description": "This field defines approval condition when item not in file is found.",
          "type": "string"
        },
        "KitCode": {
          "description": "The collection of items that form a unit. For example, a home theatre system is a unit consisting of kit components, such as a DVD player, TV, CD player, etc.",
          "type": "string"
        },
        "KitLines": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.KitLines"
        },
        "KitQty": {
          "description": "The quantity that is used to compute ordered quantity for bundle component line. It can be specified only for bundle components. If specified ordered quantity will be set to KitQty*OrderedQty of the bundle parent.",
          "type": "string"
        },
        "LastIterationSeqNo": {
          "description": "The last iteration sequence for which this line is applicable. If Null, it is assumed to go on indefinitely. Default is Null.",
          "type": "string"
        },
        "LevelOfService": {
          "description": "Indicates the level of service required for this order line.  Default is Null.",
          "type": "string"
        },
        "LineCharges": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineCharges"
        },
        "LineInvoicedTotals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineInvoicedTotals"
        },
        "LineOverallTotals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineOverallTotals"
        },
        "LineOverallTotalsInEnterpriseCurrency": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineOverallTotalsInEnterpriseCurrency"
        },
        "LinePriceInfo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LinePriceInfo"
        },
        "LineRemainingTotals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineRemainingTotals"
        },
        "LineRemainingTotalsInEnterpriseCurrency": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineRemainingTotalsInEnterpriseCurrency"
        },
        "LineSeqNo": {
          "description": "The order line sequence number.",
          "type": "string"
        },
        "LineTaxes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineTaxes"
        },
        "LineType": {
          "description": "The line type. This field can be used in process modeling for pipeline determination, or for doing conditional processing for this line.",
          "type": "string"
        },
        "MaxLineStatus": {
          "description": "Maximum order line status among all records that\n\t\t\t\t\t\t\tbelong to an order.",
          "type": "string"
        },
        "MaxLineStatusDesc": {
          "description": "Description of maximum order line status among all\n\t\t\t\t\t\t\trecords that belong to an order.",
          "type": "string"
        },
        "MergeNode": {
          "description": "The node where two or more order lines that are to be delivered together should be merged before the final delivery. This field is required when the DependancyShippingRule is set to '02'.  Additionally this field will indicate forwarding location for zone skipping.",
          "type": "string"
        },
        "MinLineStatus": {
          "description": "Minimum order line status among all records that\n\t\t\t\t\t\t\tbelong to an order.",
          "type": "string"
        },
        "MinLineStatusDesc": {
          "description": "Description of minimum order line status among all\n\t\t\t\t\t\t\trecords that belong to an order.",
          "type": "string"
        },
        "MinShipByDate": {
          "description": "The preferred minimum ship by date of the available supply that order line can allocate against.  This only applies to the order line or kit line with time-sensitive item.",
          "type": "string"
        },
        "MultipleStatusesExist": {
          "description": "If order line is in more than one status then this\n\t\t\t\t\t\t\tflag will be returned as \"Y\".",
          "type": "string"
        },
        "Notes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Notes"
        },
        "OpenQty": {
          "description": "Total quantity that can be cancelled from the line.",
          "type": "string"
        },
        "Order": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Order"
        },
        "OrderApprovalDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderApprovalDetails"
        },
        "OrderDates": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderDates"
        },
        "OrderHeaderKey": {
          "description": "The order header that this order line is associated with.",
          "type": "string"
        },
        "OrderHoldTypes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderHoldTypes"
        },
        "OrderLineInvAttRequest": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineInvAttRequest"
        },
        "OrderLineKey": {
          "description": "The primary key for the YFS_ORDER_LINE table.",
          "type": "string"
        },
        "OrderLineOptions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineOptions"
        },
        "OrderLineReservations": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineReservations"
        },
        "OrderLineSourcingControls": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineSourcingControls"
        },
        "OrderLineTranQuantity": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineTranQuantity"
        },
        "OrderOverride": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderOverride"
        },
        "OrderStatuses": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderStatuses"
        },
        "OrderedQty": {
          "description": "The quantity of the line item that has been ordered. If part of the line is cancelled, this number is reduced appropriately. If an order line is returned, this number is not reduced.",
          "type": "string"
        },
        "OrigOrderLineKey": {
          "description": "The line from which this line was created (split process).",
          "type": "string"
        },
        "OriginalOrderedQty": {
          "description": "The quantity which was ordered at order creation. This is not modified after order confirmation.",
          "type": "string"
        },
        "OtherCharges": {
          "description": "The sum of all the line level charges.",
          "type": "string"
        },
        "OverallStatus": {
          "description": "A description of the order line's overall status determined by the .",
          "type": "string"
        },
        "PackListType": {
          "description": "The code indicating the type of packlist to be used for the line. Lines requiring different pack lists are not mixed in a single order release.",
          "type": "string"
        },
        "ParentOfDependentGroup": {
          "description": "This flag indicates whether this line is a parent of a dependency group.",
          "type": "string"
        },
        "ParentOrderLineRelationships": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ParentOrderLineRelationships"
        },
        "PersonInfoMarkFor": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PersonInfoMarkFor"
        },
        "PersonInfoShipTo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PersonInfoShipTo"
        },
        "PersonalizeCode": {
          "description": "The code for personalization.",
          "type": "string"
        },
        "PersonalizeFlag": {
          "description": "This flag indicates whether this line needs personalization.",
          "type": "string"
        },
        "PickableFlag": {
          "description": "This field is used internally.",
          "type": "string"
        },
        "PipelineKey": {
          "description": "The pipeline that this order line belongs to.",
          "type": "string"
        },
        "PrimeLineNo": {
          "description": "The order line number.",
          "type": "string"
        },
        "ProcureFromNode": {
          "description": "The procurement node that is associated with this order line. The order line should be procured from that node if the products or services cannot be sourced from the shipnode specified on the order line.",
          "type": "string"
        },
        "ProductAssociations": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ProductAssociations"
        },
        "ProductItems": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ProductItems"
        },
        "PromisedApptEndDate": {
          "description": "The promised end date of the appointment.",
          "type": "string"
        },
        "PromisedApptStartDate": {
          "description": "The promised start date of the appointment.",
          "type": "string"
        },
        "Promotions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Promotions"
        },
        "Purpose": {
          "description": "This field is passed out in the Tax calculation user exits.",
          "type": "string"
        },
        "ReceivingNode": {
          "description": "The receiving node that is associated with this order line.",
          "type": "string"
        },
        "References": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.References"
        },
        "RemainingQty": {
          "description": "Remaining quantity.",
          "type": "string"
        },
        "ReqCancelDate": {
          "description": "The requested cancel date. If not provided, this field is defaulted from the order header during order creation. Refer to the YFS_ORDER_HEADER table for more details.",
          "type": "string"
        },
        "ReqDeliveryDate": {
          "description": "The requested delivery date. If not provided, this field is defaulted from the order header during order creation. Refer to the YFS_ORDER_HEADER table for more details.",
          "type": "string"
        },
        "ReqShipDate": {
          "description": "The requested ship date. If not provided, this field is defaulted from the order header during order creation. Refer to the YFS_ORDER_HEADER table for more details.",
          "type": "string"
        },
        "ReservationID": {
          "description": "The reservation ID. If this item was reserved before order creation, pass an ID to associate the line with the reservation.",
          "type": "string"
        },
        "ReservationMandatory": {
          "description": "This flag indicates whether this line can be created without a reservation. If set to Y, creation of this line or any quantity addition to this line will be allowed only if the quantity can be reserved. If a ProcureFromNode is also present on the line, then the reservation will be carried out on the procure from node.",
          "type": "string"
        },
        "ReservationPool": {
          "description": "The reservation identifier. If this item was reserved before order creation, pass an ID to associate the line with the reservation.",
          "type": "string"
        },
        "ReshipParentLineKey": {
          "description": "The order line key of the parent line that this line was created as a reshipment of.",
          "type": "string"
        },
        "ReturnPolicyViolations": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ReturnPolicyViolations"
        },
        "ReturnReason": {
          "description": "The reason for returning the order line.",
          "type": "string"
        },
        "ReturnReasonLongDesc": {
          "description": "Long description of the return reason code.",
          "type": "string"
        },
        "ReturnReasonShortDesc": {
          "description": "Short description of the return reason code.",
          "type": "string"
        },
        "ReturnableQty": {
          "description": "Quantity of item that could be returned from this line at its current status.",
          "type": "string"
        },
        "SCAC": {
          "description": "The carrier to be used for this line.",
          "type": "string"
        },
        "ScacAndService": {
          "description": "Value of SCAC and Service code.",
          "type": "string"
        },
        "ScacAndServiceKey": {
          "description": "Link to YFS_SCAC_AND_SERVICE table.",
          "type": "string"
        },
        "SchedFailureReasonCode": {
          "description": "The reason for which schedule has failed on this order line.",
          "type": "string"
        },
        "Schedules": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Schedules"
        },
        "Segment": {
          "description": "The segment of the inventory.",
          "type": "string"
        },
        "SegmentType": {
          "description": "The segment type of the inventory.",
          "type": "string"
        },
        "SerialNo": {
          "description": "The serial number of the item.",
          "type": "string"
        },
        "ServiceAssociations": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ServiceAssociations"
        },
        "ShipNode": {
          "description": "The ship node that is associated with this order line. If provided, all releases will be made against this node.",
          "type": "string"
        },
        "ShipToID": {
          "description": "The ship to identifier.  If a customer definition representing the buyer organization exists within the system, the ShipToID can represent the CustomerID of the customer.  Otherwise, the ShipToID can represent the PersonID of the ship to address or the receiving node of the order.",
          "type": "string"
        },
        "ShipToKey": {
          "description": "The ship to address that is associated with this order line. If not provided, it is defaulted from order header.",
          "type": "string"
        },
        "ShipTogetherNo": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "ShipmentConsolidationGroupId": {
          "description": "It is a consolidation group id  that is used as a standard do not mix constraint.Releases belonging to same shipment consolidation group may consolidate to same shipment.",
          "type": "string"
        },
        "Shipnode": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Shipnode"
        },
        "SourceFromOrganization": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "SplitQty": {
          "description": "The quantity which has been split from this line due to substitutions, price negotiations etc.",
          "type": "string"
        },
        "Status": {
          "description": "Status description of the order line.",
          "type": "string"
        },
        "StatusQuantity": {
          "description": "Quantity on the order line in the current status.",
          "type": "string"
        },
        "SubLineNo": {
          "description": "The sub line number.",
          "type": "string"
        },
        "SubstituteItemID": {
          "description": "Substituted ItemID. This field is only populated if\n\t\t\t\t\t\t\tthe item on the Order line is substituted. This field is\n\t\t\t\t\t\t\tdeprecated, see OverrideItemID on the OrderStatus/Details\n\t\t\t\t\t\t\telement.",
          "type": "string"
        },
        "SubstituteItemUOM": {
          "description": "Substituted Item UOM. This field is only populated if\n\t\t\t\t\t\t\tthe item on the Order line is substituted. This field is\n\t\t\t\t\t\t\tdeprecated, see OverrideItemID on the OrderStatus/Details\n\t\t\t\t\t\t\telement.",
          "type": "string"
        },
        "Timezone": {
          "description": "The timezone in which the promised appointment has been recorded.",
          "type": "string"
        },
        "TranDiscrepancyQty": {
          "description": "The transaction discrepancy quantity.",
          "type": "string"
        },
        "WorkOrders": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.WorkOrders"
        },
        "isHistory": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChargeBreakup": {
      "properties": {
        "AwardId": {
          "description": "A unique identifier for the award. If pricing is maintained within the system, this will be the PricingRuleName of the pricing rule that created this award.",
          "type": "string"
        },
        "AwardType": {
          "description": "The type of award. If pricing is maintained within the system, this will be the RuleCategory of the pricing rule that created this award.",
          "type": "string"
        },
        "ChargeAmount": {
          "description": "The amount of the charge.",
          "type": "string"
        },
        "ChargeBreakupKey": {
          "description": "Primary key of charge breakup.",
          "type": "string"
        },
        "DerivedFromOrderHeaderKey": {
          "description": "The key of the order header from which this charge is derived.",
          "type": "string"
        },
        "DerivedFromOrderLineKey": {
          "description": "The key of the order line from which this charge is derived.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "Key of the order header to which this charge breakup belongs.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChargeBreakups": {
      "properties": {
        "ChargeBreakup": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChargeBreakup"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChargeCategoryDetails": {
      "properties": {
        "ChargeCategoryKey": {
          "description": "Primary key of charge category.",
          "type": "string"
        },
        "ConsiderForProfitMargin": {
          "description": "Indicates if a charge is included in the profit margin calculation.",
          "type": "string"
        },
        "Description": {
          "description": "Description of charge. Used for display purposes during configuration.",
          "type": "string"
        },
        "IsBillable": {
          "description": "Indicates if a charge is billable to the customer.",
          "type": "string"
        },
        "IsDiscount": {
          "description": "Indicates if a charge category is a discount category.",
          "type": "string"
        },
        "IsRefundable": {
          "description": "Indicates if a charge is refundable during returns.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChargeNameDetails": {
      "properties": {
        "Description": {
          "description": "Description of a charge name.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChargeTranDistribution": {
      "properties": {
        "ChargeTranDistKey": {
          "description": "The primary key for the YFS_CHARGE_TRAN_DIST table.",
          "type": "string"
        },
        "DistributedAmount": {
          "description": "The amount that was distributed to the charge transaction record, DistributedToChargeTranKey, from the charge transaction record, DistributedFromChargeTranKey.",
          "type": "string"
        },
        "DistributedFromChargeTranKey": {
          "description": "The charge transaction that is associated with this charge transaction distribution.  This is the charge transaction that distributed funds.",
          "type": "string"
        },
        "DistributedFromChargeTransaction": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.DistributedFromChargeTransaction"
        },
        "DistributedToChargeTranKey": {
          "description": "The charge transaction that is associated with this charge transaction distribution. This is the charge transaction that funds were distributed to.",
          "type": "string"
        },
        "DistributedToChargeTransaction": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.DistributedToChargeTransaction"
        },
        "OrderHeaderKey": {
          "description": "The order that is associated with this charge transaction distribution.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChargeTranDistributions": {
      "properties": {
        "ChargeTranDistribution": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChargeTranDistribution"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChargeTransactionDetail": {
      "properties": {
        "AsyncRequestIdentifier": {
          "description": "This field is applicable for only Asynchronous charge requests. This field uniquely identifies the charge transaction marked as asynchronous. By default the identifier is same as primary key i.e Charge Transaction Key will be set as Async Request Identifier. This identifier can be used for recording the response to the asynchronous request.",
          "type": "string"
        },
        "AuditTransactionID": {
          "description": "The identifier of the order modification audit that caused this record.",
          "type": "string"
        },
        "AuthorizationExpirationDate": {
          "description": "The date and time until which the authorization specified by the authorization ID is applicable.",
          "type": "string"
        },
        "AuthorizationID": {
          "description": "For authorization requests, this field holds the identifier of the authorization that was made. For charge requests, this field holds the authroization ID to be used for charging the amount.",
          "type": "string"
        },
        "BookAmount": {
          "description": "The amount that could be charged to the buyer if the order was fulfilled. At the time of fulfillment, a negative entry is made in this column and positive entry in the DEBIT_AMOUNT column.",
          "type": "string"
        },
        "CallForAuthorizationStatus": {
          "description": "This column indicates the transaction is valid for a call for authorization and whether or not the authorization code was acquired.",
          "type": "string"
        },
        "CashBackAmount": {
          "description": "The amount of cashback that has been charged using this transaction. Only valid for transactions of ChargeType CHARGE.",
          "type": "string"
        },
        "ChargeTransactionKey": {
          "description": "The primary key for the YFS_CHARGE_TRANSACTION table.",
          "type": "string"
        },
        "ChargeType": {
          "description": "The type of charge that is being applied to the order.",
          "type": "string"
        },
        "CollectionDate": {
          "description": "The date and time when the charge was realized.",
          "type": "string"
        },
        "CreditAmount": {
          "description": "The amount that was actually charged or refunded to the buyer.",
          "type": "string"
        },
        "CreditCardTransactions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CreditCardTransactions"
        },
        "DebitAmount": {
          "description": "The amount that should be charged or refunded to the buyer.",
          "type": "string"
        },
        "DistributedAmount": {
          "description": "This field is used internally by the application to keep track of the amount which has been posted in the invoices as \"collected\".",
          "type": "string"
        },
        "ExecutionDate": {
          "description": "The date and time when the charge request was processed.",
          "type": "string"
        },
        "ForAsyncRequestIdentifier": {
          "description": "Reference to AsyncRequestIdentifier, This field is applicable only for charge transactions that are recorded as response to an Asynchronous Charge request. This field should refer to the Async Request Identifier field of the original Charge Request that was marked as asynchronous. This field enables tracking recorded responses for asynchronous charge requests.",
          "type": "string"
        },
        "HoldAgainstBook": {
          "description": "This flag indicates whether the request was created for a precharge or a payment method whose payment type has the ChargeInsteadOfAuth flag turned on.",
          "type": "string"
        },
        "InPerson": {
          "description": "This flag indicates that the transaction represents an in person, or card in hand, transaction.",
          "type": "string"
        },
        "InvoiceCollectionDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.InvoiceCollectionDetails"
        },
        "MappedProcessedAmount": {
          "description": "The amount processed on this YFS_CHARGE_TRANSACTION by this YFS_CHARGE_TRAN_REQUEST.",
          "type": "string"
        },
        "MappedRequestAmount": {
          "description": "The amount requested on this YFS_CHARGE_TRANSACTION by this YFS_CHARGE_TRAN_REQUEST.",
          "type": "string"
        },
        "OfflineStatus": {
          "description": "This flag indicates the transaction attempted to reach the payment gateway within a UserExit, but the UserExit was unable to contact the gateway.  This may be updated to N by the user exit, and will be reset to null when the record moves to CLOSED status.",
          "type": "string"
        },
        "OpenAuthorizedAmount": {
          "description": "The amount that is authorized for the order.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The order header that is associated with this charge transaction.",
          "type": "string"
        },
        "OrderInvoiceKey": {
          "description": "The key to the invoice that was created for this record, if applicable. Invoices are created for shipments, returns, or debit and credit memos.",
          "type": "string"
        },
        "PaymentEntryType": {
          "description": "Entry Type used to enter payment information into the system.",
          "type": "string"
        },
        "PaymentKey": {
          "description": "The payment method that is associated with this charge transaction.",
          "type": "string"
        },
        "PaymentMethod": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PaymentMethod"
        },
        "PaymentTransactionErrorList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PaymentTransactionErrorList"
        },
        "PostponedAmount": {
          "description": "The total amount that does not require authorization or payment capture on the order.",
          "type": "string"
        },
        "RequestAmount": {
          "description": "The amount that is requested for the charge or authorization of record of types \"REQUEST_CHARGE\" and \"REQUEST_AUTHORIZATION\". Once the request is processed, the actual amount will be shown as \"CreditAmount\" or \"OpenAuthorizedAmount\", for charge and authorization requests respectively.",
          "type": "string"
        },
        "SettledAmount": {
          "description": "This field holds the amount for which a pre-settlement (settlement before invoice) is requested. Charge requests will be created for this amount.",
          "type": "string"
        },
        "Status": {
          "description": "This field indicates the status of this record.",
          "type": "string"
        },
        "TransactionDate": {
          "description": "Transaction Date.",
          "type": "string"
        },
        "TransferFromOhKey": {
          "description": "The Order Header Key of the order that funds are being transferred from.",
          "type": "string"
        },
        "TransferFromOrder": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TransferFromOrder"
        },
        "TransferToOhKey": {
          "description": "The Order Header Key of the order that funds are being transferred to.",
          "type": "string"
        },
        "TransferToOrder": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TransferToOrder"
        },
        "UserExitStatus": {
          "description": "The user exit call status of this record. The status will be \"INVOKED\" if the transaction fails during or after the user exit call, otherwise the value will be blank.",
          "type": "string"
        },
        "VoidTransaction": {
          "description": "This flag indicates that the Charge Transaction is either a Void request or submitted for a Void operation.  Valid values for a Void Charge Transaction are V (is a void request), R (is a forced refund request), C (closed error record, already recreated) and null. Valid value for a Charge Transaction that has been requested for Void operation is S (void submitted for this transaction).",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChargeTransactionDetails": {
      "properties": {
        "AdditionalExpectedAuthorizations": {
          "description": "Total authorizations postponed until the order nears\n\t\t\t\t\t\t\trelease to node.",
          "type": "string"
        },
        "ChargeTransactionDetail": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChargeTransactionDetail"
          },
          "type": "array"
        },
        "FundsRequiredOnOrder": {
          "description": "The FundsRequiredOnOrder represents the amount not yet authorized on\n\t\t\t\t\t\t\tthe order minus the authorization possible on each\n\t\t\t\t\t\t\t.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ts marked\n\t\t\t\t\t\t\t will be counted as having an authorization limit of 0.\n\t\t\t\t\t\t\t marked as Charge upto Available  with\n\t\t\t\t\t\t\t will also be counted as 0 and not as the complete funds from YFSGetFundsAvailableUE user exit on the \n\t\t\t\t\t\t\t as we do for .\n\t\t\t\t\t\t\tThis attribute value will be Zero if there are sufficient funds or excess funds on the order.\n\t\t\t\t\t\t\tFundsRequiredOnOrder gives a picture on  to be adjusted on the orders",
          "type": "string"
        },
        "RemainingAmountToAuth": {
          "description": "The remaining amount of authorization planning needed for the\n\t\t\t\t\t\t\torder. This attribute represents the amount not yet authorized on\n\t\t\t\t\t\t\tthe order minus the authorization possible on each\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ts marked\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twill be counted as having a limit of 0. This attribute may be\n\t\t\t\t\t\t\tnegative if there are extra credits or authorizations on the\n\t\t\t\t\t\t\torder.",
          "type": "string"
        },
        "TotalCredits": {
          "description": "Total Credits",
          "type": "string"
        },
        "TotalDebits": {
          "description": "Total Debits",
          "type": "string"
        },
        "TotalOpenAuthorizations": {
          "description": "Total Open Authorizations",
          "type": "string"
        },
        "TotalOpenBookings": {
          "description": "Total Open Bookings",
          "type": "string"
        },
        "TotalTransferredIn": {
          "description": "Total amount of funds transferred in from other\n\t\t\t\t\t\t\torders.",
          "type": "string"
        },
        "TotalTransferredOut": {
          "description": "Total amount of funds transferred out to other\n\t\t\t\t\t\t\torders.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChargeTransactionRequest": {
      "properties": {
        "ChargeTransactionDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChargeTransactionDetails"
        },
        "ChargeTransactionRequestId": {
          "description": "The unique identifier of the request in combination with the ORDER_HEADER_KEY.",
          "type": "string"
        },
        "ChargeTransactionRequestKey": {
          "description": "The primary key for the YFS_CHARGE_TRAN_REQUEST table.",
          "type": "string"
        },
        "ChargeTransactionRequestSequence": {
          "description": "The order in which the Groups should be authorized.  Records with REQUEST_SEQUENCE NOT NULL will be processed first; NULL Sequences will be ordered by CHARGE_TRAN_REQUEST_ID, ascending.",
          "type": "string"
        },
        "MaxRequestAmount": {
          "description": "The maximum amount this unique identifier represents before distribution to another group begins to become Authorized.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The OrderHeaderKey that is associated with this charge tran request.",
          "type": "string"
        },
        "PaymentStatus": {
          "description": "The Payment Status of the request.  This is computed in the same manner as the Order's Payment Status.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChargeTransactionRequestList": {
      "properties": {
        "ChargeTransactionRequest": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChargeTransactionRequest"
          },
          "type": "array"
        },
        "DocumentType": {
          "description": "The DocumentType of the Order. Must be passed with\n\t\t\t\t\tEnterpriseCode and OrderNo to find the order if OrderHeaderKey is\n\t\t\t\t\tnot passed.",
          "type": "string"
        },
        "EnterpriseCode": {
          "description": "The EnterpriseCode of the Order. Must be passed with\n\t\t\t\t\tDocumentType and OrderNo to find the order if OrderHeaderKey is not\n\t\t\t\t\tpassed.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The OrderHeaderKey that is associated with this charge tran request.",
          "type": "string"
        },
        "OrderNo": {
          "description": "The OrderNo of the Order. Must be passed with\n\t\t\t\t\tEnterpriseCode and DocumentType to find the order if OrderHeaderKey\n\t\t\t\t\tis not passed.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChildItem": {
      "properties": {
        "ItemGroupCode": {
          "description": "The item group code. Used to identify if the item is a Product, Provided Service, Provided Service Option, Delivery Service or Delivery Service Option.",
          "type": "string"
        },
        "ItemID": {
          "description": "The unique identifier for the item.",
          "type": "string"
        },
        "ItemKey": {
          "description": "The primary key for the YFS_ITEM table.",
          "type": "string"
        },
        "OrganizationCode": {
          "description": "The organization code whose product information is being stored.",
          "type": "string"
        },
        "UnitOfMeasure": {
          "description": "The unit of measure for item quantity.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChildItemList": {
      "properties": {
        "ChildItem": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChildItem"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChildLine": {
      "properties": {
        "OrderLineKey": {
          "description": "Order line key of the associated service line.",
          "type": "string"
        },
        "PrimeLineNo": {
          "description": "Prime line number of the associated service line.",
          "type": "string"
        },
        "SubLineNo": {
          "description": "Sub line number of the associated service line.",
          "type": "string"
        },
        "TransactionalLineId": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChildOrderLineRelationships": {
      "properties": {
        "OrderLineRelationship": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineRelationship"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ChildOrderList": {
      "properties": {
        "Order": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Order"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ClassificationCodes": {
      "properties": {
        "CommodityCode": {
          "description": "The commodity code of an item.",
          "type": "string"
        },
        "ECCNNo": {
          "description": "The ECCN number of an item.",
          "type": "string"
        },
        "HarmonizedCode": {
          "description": "The harmonized code of an item.",
          "type": "string"
        },
        "HazmatClass": {
          "description": "The hazardous material classification code of an item.",
          "type": "string"
        },
        "Model": {
          "description": "This field describes the identifier of the item with variations to which this item belongs.",
          "type": "string"
        },
        "NAICSCode": {
          "description": "The NAICS code of an item.",
          "type": "string"
        },
        "NMFCClass": {
          "description": "The NMFC class of an item.",
          "type": "string"
        },
        "NMFCCode": {
          "description": "The NMFC code for an item.",
          "type": "string"
        },
        "OperationalConfigurationComplete": {
          "description": "This flag indicates whether the operational configuration is complete.",
          "type": "string"
        },
        "PickingType": {
          "description": "The picking type code of an item.",
          "type": "string"
        },
        "PostingClassification": {
          "description": "The posting classification. This will have the item grouping value for the Financial Ledger groups.",
          "type": "string"
        },
        "Schedule_B_Code": {
          "description": "The schedule B code of an item.",
          "type": "string"
        },
        "StorageType": {
          "description": "The storage type code of an item.",
          "type": "string"
        },
        "TaxProductCode": {
          "description": "The tax product code of an item.",
          "type": "string"
        },
        "UNSPSC": {
          "description": "The UNSPSC code of an item.",
          "type": "string"
        },
        "VelocityCode": {
          "description": "The velocity code.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.CoOwnerUser": {
      "properties": {
        "Activateflag": {
          "description": "This flag indicates whether a user is active.",
          "type": "string"
        },
        "BillingaddressKey": {
          "description": "The billing address.",
          "type": "string"
        },
        "BusinessKey": {
          "description": "The business associated with this user. Identifies a ship node when filled.",
          "type": "string"
        },
        "ContactPersonInfo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ContactPersonInfo"
        },
        "ContactaddressKey": {
          "description": "The contact address.",
          "type": "string"
        },
        "CreatorOrganizationKey": {
          "description": "The organization that created the user.",
          "type": "string"
        },
        "DataSecurityGroupId": {
          "description": "Data Security Group Id.",
          "type": "string"
        },
        "DepartmentCode": {
          "type": "string"
        },
        "DisplayUserID": {
          "description": "Indicates Display User's ID which is used for login in to the system.",
          "type": "string"
        },
        "EnterpriseCode": {
          "description": "The Customer Master Organization Code of the User's Organization.",
          "type": "string"
        },
        "Imagefile": {
          "description": "The image associated with a user.",
          "type": "string"
        },
        "IsCustomer": {
          "description": "Flag to indicate if the user is a valid customer.",
          "type": "string"
        },
        "Localecode": {
          "description": "The locale of a user.",
          "type": "string"
        },
        "LoginStatus": {
          "type": "string"
        },
        "Loginid": {
          "description": "The login ID for the user.",
          "type": "string"
        },
        "Longdesc": {
          "description": "The long description for the user.",
          "type": "string"
        },
        "MenuId": {
          "description": "The menu ID associated with the user. This is used to display the menus in various applications to which this user has access.",
          "type": "string"
        },
        "NoteKey": {
          "description": "A generic note for the user.",
          "type": "string"
        },
        "OrganizationKey": {
          "description": "The organization to which a user belongs.",
          "type": "string"
        },
        "ParentUserKey": {
          "description": "The parent user associated with this user. May be used to capture reporting hierarchy. A user has only one parent but may have many children.",
          "type": "string"
        },
        "PasswordPolicyId": {
          "description": "The Id of the Password Policy a user has been assigned to.",
          "type": "string"
        },
        "PreferenceKey": {
          "description": "Not used.",
          "type": "string"
        },
        "Pwdlastchangedon": {
          "description": "The last date on which the user's password was changed.",
          "type": "string"
        },
        "Salt": {
          "description": "Random characters used for password encryption. Regenerated when the password changes.",
          "type": "string"
        },
        "UserKey": {
          "description": "The primary key for the YFS_USER table.",
          "type": "string"
        },
        "UsergroupKey": {
          "description": "The user group associated with this user.",
          "type": "string"
        },
        "Username": {
          "description": "The name of the user.",
          "type": "string"
        },
        "Usertype": {
          "description": "This field indicates the user type.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Component": {
      "properties": {
        "ComponentDescription": {
          "description": "Description of the Component Item",
          "type": "string"
        },
        "ComponentItemGroupCode": {
          "description": "Item Group Code for the Component Item",
          "type": "string"
        },
        "ComponentItemID": {
          "description": "Along with ComponentOrganizationCode and ComponentUnitOfMeasure, it identifies a component item.",
          "type": "string"
        },
        "ComponentItemKey": {
          "description": "Component item's primary key",
          "type": "string"
        },
        "ComponentKitCode": {
          "description": "Item Kit Code for the Component Item",
          "type": "string"
        },
        "ComponentOrganizationCode": {
          "description": "Organization that maintains catalog",
          "type": "string"
        },
        "ComponentUnitOfMeasure": {
          "description": "Unit of measure for the Component Item",
          "type": "string"
        },
        "Item": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Item"
        },
        "ItemKey": {
          "description": "An item for which components are defined.",
          "type": "string"
        },
        "KitQuantity": {
          "description": "Amount of a component item that is contained in a parent item.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Components": {
      "properties": {
        "Component": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Component"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ComputedPrice": {
      "properties": {
        "AdditionalLinePriceTotal": {
          "description": "Total Price for all non-informational Additional\n\t\t\t\t\t\t\t\tLine Prices for the Component Lines of a Bundle Parent. List Price times ActualPricingQuantity.",
          "type": "string"
        },
        "Charges": {
          "type": "string"
        },
        "Discount": {
          "type": "string"
        },
        "ExtendedPrice": {
          "description": "The computed price for this line before taxes,\n\t\t\t\t\t\t\t\tcharges, and\n\t\t\t\t\t\t\t\tdiscounts are accounted for.",
          "type": "string"
        },
        "LineCost": {
          "description": "The total cost incurred on this order line. If this order line\n\t\t\t\t\t\t\t\tis part of a bundle,\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tis evaluated based on the bundle's' pricing strategy.",
          "type": "string"
        },
        "LineTotal": {
          "description": "The total amount for this line.",
          "type": "string"
        },
        "LineTotalWithoutTax": {
          "description": "The computed total amount for this line before taxes\n\t\t\t\t\t\t\t\tare accounted\n\t\t\t\t\t\t\t\tfor.",
          "type": "string"
        },
        "PercentProfitMargin": {
          "description": "The percentage of the profit margin for this line.\n\t\t\t\t\t\t\t\tDepending on the pricing strategy, all components or part of the\n\t\t\t\t\t\t\t\tcomponents are considered for the profit margin calculation. \n\t\t\t\t\t\t\t\tOrderLine Option OptionPrices and OrderLine AdditionalLinePriceTotals are\n\t\t\t\t\t\t\t\tnot considered for the Profit Margin.",
          "type": "string"
        },
        "Tax": {
          "description": "The computed amount of taxes for this line.",
          "type": "string"
        },
        "UnitPrice": {
          "description": "The price for one unit of this line.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ContactPersonInfo": {
      "properties": {
        "AddressLine1": {
          "description": "The address line 1 field.",
          "type": "string"
        },
        "AddressLine2": {
          "description": "The address line 2 field.",
          "type": "string"
        },
        "AddressLine3": {
          "description": "The address line 3 field.",
          "type": "string"
        },
        "AddressLine4": {
          "description": "The address line 4 field.",
          "type": "string"
        },
        "AddressLine5": {
          "description": "The address line 5 field.",
          "type": "string"
        },
        "AddressLine6": {
          "description": "The address line 6 field.",
          "type": "string"
        },
        "AlternateEmailID": {
          "description": "The alternate email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "Beeper": {
          "description": "The beeper number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "City": {
          "description": "The city in the address.",
          "type": "string"
        },
        "Company": {
          "description": "The company this person is associated with.",
          "type": "string"
        },
        "Country": {
          "description": "The country in the address.",
          "type": "string"
        },
        "DayFaxNo": {
          "description": "The day time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "DayPhone": {
          "description": "The day time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "Department": {
          "description": "The primary department in charge of procurement.",
          "type": "string"
        },
        "EMailID": {
          "description": "The email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "ErrorTxt": {
          "description": "This field is currently not used.",
          "type": "string"
        },
        "EveningFaxNo": {
          "description": "The evening time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "EveningPhone": {
          "description": "The evening time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "FirstName": {
          "description": "The first name of the person.",
          "type": "string"
        },
        "HttpUrl": {
          "description": "The URL of the person or organization referred to in this contact information.",
          "type": "string"
        },
        "IsCommercialAddress": {
          "description": "Indicates whether the address is commercial, residential or none. Values of this field can be Y -Commercial address.N - Residential address. undefined for Null.",
          "type": "string"
        },
        "JobTitle": {
          "description": "The job title of the person.",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the person.",
          "type": "string"
        },
        "MiddleName": {
          "description": "The middle name of the person.",
          "type": "string"
        },
        "MobilePhone": {
          "description": "The mobile phone at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "OtherPhone": {
          "description": "The alternate phone number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "PersonID": {
          "description": "The unique identifier for a person.",
          "type": "string"
        },
        "PersonInfoKey": {
          "description": "The primary key for the YFS_PERSON_INFO table.",
          "type": "string"
        },
        "PreferredShipAddress": {
          "description": "The preferred ship address over and above the address in this record. Pointer to another record of this type in this table.",
          "type": "string"
        },
        "State": {
          "description": "The state in the address.",
          "type": "string"
        },
        "Suffix": {
          "description": "The suffix for a person, such as Jr., or Sr.",
          "type": "string"
        },
        "TaxGeoCode": {
          "description": "The tax geo code for this location. Intended for future use.",
          "type": "string"
        },
        "Title": {
          "description": "The title for the person such as Ms., Mr., or Dr..",
          "type": "string"
        },
        "UseCount": {
          "description": "This field is currently not used.",
          "type": "string"
        },
        "VerificationStatus": {
          "description": "This field is currently not used.",
          "type": "string"
        },
        "ZipCode": {
          "description": "The zip code in the address.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Coupon": {
      "properties": {
        "AssignedUniqueCodes": {
          "description": "Indicates  associated unique codes are individual customer assignments.",
          "type": "string"
        },
        "CodeFormat": {
          "description": "Format of generated part of unique code.",
          "type": "string"
        },
        "CouponID": {
          "description": "Unique identifier of a coupon.",
          "type": "string"
        },
        "CouponKey": {
          "description": "Primary key attribute of YPM_COUPON table.",
          "type": "string"
        },
        "GenerateUniqueCodes": {
          "description": "Specifies whether coupon definition has generated unique codes",
          "type": "string"
        },
        "GenerationStatus": {
          "description": "Status of Unique Code generation",
          "type": "string"
        },
        "ImportUniqueCodes": {
          "description": "Indicates associated unique codes are imported from an external system.",
          "type": "string"
        },
        "IsExclusive": {
          "description": "Indicates whether the coupon is exclusive or not. Either a single exclusive coupon or multiple non-exclusive coupons can be applied on an order.",
          "type": "string"
        },
        "NumberOfCodesToGenerate": {
          "description": "Specifies the number of unique codes to generate",
          "type": "string"
        },
        "OrganizationCode": {
          "description": "Pricing organization to which the configuration belongs.",
          "type": "string"
        },
        "PricingRuleKey": {
          "description": "Pricing rule associated with the coupon.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.CreditCardTransaction": {
      "properties": {
        "AuthAmount": {
          "description": "The authorization amount.",
          "type": "string"
        },
        "AuthAvs": {
          "description": "AVS Authorization code.",
          "type": "string"
        },
        "AuthCode": {
          "description": "The authorization code.",
          "type": "string"
        },
        "AuthReturnCode": {
          "description": "The authorization return code.",
          "type": "string"
        },
        "AuthReturnFlag": {
          "description": "The authorization return flag.",
          "type": "string"
        },
        "AuthReturnMessage": {
          "description": "The authorization return message.",
          "type": "string"
        },
        "AuthTime": {
          "description": "The authorization time.",
          "type": "string"
        },
        "CVVAuthCode": {
          "description": "The CVV authorization code.",
          "type": "string"
        },
        "ChargeTransactionKey": {
          "description": "The charge transaction that is associated with this credit card transaction.",
          "type": "string"
        },
        "CreditCardTransactionKey": {
          "description": "The primary key for the CREDIT_CARD_TRANSACTION table.",
          "type": "string"
        },
        "InternalReturnCode": {
          "description": "The internal return code.",
          "type": "string"
        },
        "InternalReturnFlag": {
          "description": "The internal return flag.",
          "type": "string"
        },
        "InternalReturnMessage": {
          "description": "The internal return message.",
          "type": "string"
        },
        "ParentKey": {
          "description": "The parent key.",
          "type": "string"
        },
        "Reference1": {
          "description": "The reference 1.",
          "type": "string"
        },
        "Reference2": {
          "description": "The reference 2.",
          "type": "string"
        },
        "RequestId": {
          "description": "Authorization request Id.",
          "type": "string"
        },
        "TranAmount": {
          "description": "The amount of the transaction.",
          "type": "string"
        },
        "TranRequestTime": {
          "description": "The time at which the transaction request was made.",
          "type": "string"
        },
        "TranReturnCode": {
          "description": "The return code for the transaction.",
          "type": "string"
        },
        "TranReturnFlag": {
          "description": "The flag returned by the transaction.",
          "type": "string"
        },
        "TranReturnMessage": {
          "description": "The message returned by the transaction.",
          "type": "string"
        },
        "TranType": {
          "description": "The transaction type.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.CreditCardTransactions": {
      "properties": {
        "CreditCardTransaction": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CreditCardTransaction"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.CurrentOrderApprovalDetails": {
      "properties": {
        "OrderApprovalDetail": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderApprovalDetail"
        },
        "TotalNumberOfRecords": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.CurrentOrderApprovals": {
      "properties": {
        "OrderApproval": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderApproval"
        },
        "TotalNumberOfRecords": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.CurrentUserOrderApprovalDetails": {
      "properties": {
        "CurrentOrderApprovalDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CurrentOrderApprovalDetails"
        },
        "PredecessorOrderApprovalDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PredecessorOrderApprovalDetails"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.CustomAttributes": {},
    "com.ibm.sterling.smcfs.order.CustomAuditDetails": {
      "properties": {
        "OrderAuditDetail": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderAuditDetail"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.CustomerContact": {
      "properties": {
        "ApproverProxyUserId": {
          "description": "This is the user who can approve/reject hold when the user is unavailable. This user must be a valid customer contact.",
          "type": "string"
        },
        "ApproverUserId": {
          "description": "This is the user who can approve/reject hold when order is beyond the buyer user's spending limit. This user must be a valid customer contact.",
          "type": "string"
        },
        "Company": {
          "description": "The company of the contact person.",
          "type": "string"
        },
        "CustomerContactID": {
          "description": "The identifier for the contact person.",
          "type": "string"
        },
        "CustomerKey": {
          "description": "The primary key for the YFS_CUSTOMER table.",
          "type": "string"
        },
        "DateOfBirth": {
          "description": "The date of birth of the contact person.",
          "type": "string"
        },
        "DayFaxNo": {
          "description": "The day time fax of the contact person.",
          "type": "string"
        },
        "DayPhone": {
          "description": "The day time phone of the contact person.",
          "type": "string"
        },
        "Department": {
          "description": "Indicates a department which customer contact belongs to.",
          "type": "string"
        },
        "EmailID": {
          "description": "The email address of the contact person.",
          "type": "string"
        },
        "EveningFaxNo": {
          "description": "The evening fax of the contact person.",
          "type": "string"
        },
        "EveningPhone": {
          "description": "The evening phone of the contact person.",
          "type": "string"
        },
        "FirstName": {
          "description": "The first name of the contact person.",
          "type": "string"
        },
        "JobTitle": {
          "description": "Indicates a contact's job title.",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the contact person.",
          "type": "string"
        },
        "MiddleName": {
          "description": "The middle name of the contact person.",
          "type": "string"
        },
        "MobilePhone": {
          "description": "The mobile phone of the contact person.",
          "type": "string"
        },
        "SpendingLimit": {
          "description": "The maximum total order amount that can be placed by this customer contact in the role of a buyer.",
          "type": "string"
        },
        "SpendingLimitCurrency": {
          "description": "This is the currency for spending limit. If not passed, for a Business customer, it will be defaulted to the customer's Buyer Organization's Locale Currency.",
          "type": "string"
        },
        "SpouseDateOfBirth": {
          "description": "The date of birth of the contact person's spouse.",
          "type": "string"
        },
        "Status": {
          "description": "Indicates a status on a customer contact.",
          "type": "string"
        },
        "Title": {
          "description": "The title for the contact person.",
          "type": "string"
        },
        "UserID": {
          "description": "Indicates that this customer has a user contact.",
          "type": "string"
        },
        "WeddingAnniversaryDate": {
          "description": "The wedding anniversary date.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.DeletedOrderLines": {
      "properties": {
        "OrderLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLine"
        },
        "TotalNumberOfRecords": {
          "description": "The total number of deleted lines.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.DeliveryAssociation": {
      "properties": {
        "HoldSchedTillCompletion": {
          "description": "Flag to indicate whether to hold schedule till completion.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "header Key of the Order for which Association is defined.",
          "type": "string"
        },
        "OrderProdSerAssocKey": {
          "description": "Primary key for YFS_ORDER_PROD_SER_ASSOC table.",
          "type": "string"
        },
        "PricingProductQuantity": {
          "description": "Quantity used for using this option.",
          "type": "string"
        },
        "PricingServiceQuantity": {
          "description": "Quantity used for using this option.",
          "type": "string"
        },
        "ProductLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ProductLine"
        },
        "ProductQuantity": {
          "description": "Product quantity for which service quantity is stored in ServiceQuantity attribute.",
          "type": "string"
        },
        "ServiceLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ServiceLine"
        },
        "ServiceQuantity": {
          "description": "Service Capacity to be used for delivering (or servicing )product quantity mentioned.",
          "type": "string"
        },
        "ServiceTimeOffset": {
          "description": "Specifies the service time offset between services in Hours.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.DeliveryAssociations": {
      "properties": {
        "DeliveryAssociation": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.DeliveryAssociation"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Dependency": {
      "properties": {
        "DependentOnPrimeLineNo": {
          "type": "string"
        },
        "DependentOnSubLineNo": {
          "type": "string"
        },
        "DependentOnTransactionalLineId": {
          "type": "string"
        },
        "RemoveDependency": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.DerivedFrom": {
      "properties": {
        "DocumentType": {
          "description": "The document type that is associated with this order. For example, Sales Order document (0001), Planned Order document (0002), Return Order document (0003) , and Purchase Order document (0005). This field determines the order's fulfillment cycle and controls the inventory and payment updates performed on the order.",
          "type": "string"
        },
        "EnterpriseCode": {
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The order header that this order line is associated with.",
          "type": "string"
        },
        "OrderLineKey": {
          "description": "The primary key for the YFS_ORDER_LINE table.",
          "type": "string"
        },
        "OrderNo": {
          "type": "string"
        },
        "OrderReleaseKey": {
          "type": "string"
        },
        "PrimeLineNo": {
          "description": "The order line number.",
          "type": "string"
        },
        "ReleaseNo": {
          "type": "string"
        },
        "SubLineNo": {
          "description": "The sub line number.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.DerivedFromOrder": {
      "properties": {
        "DocumentType": {
          "description": "The document type that is associated with this order. For example, Sales Order document (0001), Planned Order document (0002), Return Order document (0003) , and Purchase Order document (0005). This field determines the order's fulfillment cycle and controls the inventory and payment updates performed on the order.",
          "type": "string"
        },
        "EnterpriseCode": {
          "description": "The enterprise that is associated with this order.",
          "type": "string"
        },
        "OrderNo": {
          "description": "The number of the order, which can be passed during order creation or generated based on a system rule setting.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.DerivedFromOrderLine": {
      "properties": {
        "Item": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Item"
        },
        "PrimeLineNo": {
          "description": "The order line number.",
          "type": "string"
        },
        "SubLineNo": {
          "description": "The sub line number.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Details": {
      "properties": {
        "ExpectedDeliveryDate": {
          "description": "The date the scheduled order line is expected to be delivered by.",
          "type": "string"
        },
        "ExpectedShipmentDate": {
          "description": "The date the scheduled order line is expected to ship by.",
          "type": "string"
        },
        "KitDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.KitDetails"
        },
        "OverrideItemID": {
          "description": "Indicates that this ItemID should be used for inventory updates instead of the line ItemID. If null, the ItemID on the line will be used.",
          "type": "string"
        },
        "OverrideProductClass": {
          "description": "The override product class of the scheduled order line.",
          "type": "string"
        },
        "OverrideUnitOfMeasure": {
          "description": "Unit of Measure for the Override inventory item.",
          "type": "string"
        },
        "ReceivingNode": {
          "description": "The node that will receive the scheduled order line, if applicable.",
          "type": "string"
        },
        "ShipByDate": {
          "description": "The date the scheduled order line should be shipped by.",
          "type": "string"
        },
        "ShipNode": {
          "description": "The ship node fulfilling this scheduled order line.",
          "type": "string"
        },
        "TagNumber": {
          "description": "The tag number that has been specified on the scheduled order line.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.DistributedFromChargeTransaction": {
      "properties": {
        "AuditTransactionID": {
          "description": "The identifier of the order modification audit that caused this record.",
          "type": "string"
        },
        "AuthorizationExpirationDate": {
          "description": "The date and time until which the authorization specified by the authorization ID is applicable.",
          "type": "string"
        },
        "AuthorizationID": {
          "description": "For authorization requests, this field holds the identifier of the authorization that was made. For charge requests, this field holds the authroization ID to be used for charging the amount.",
          "type": "string"
        },
        "BookAmount": {
          "description": "The amount that could be charged to the buyer if the order was fulfilled. At the time of fulfillment, a negative entry is made in this column and positive entry in the DEBIT_AMOUNT column.",
          "type": "string"
        },
        "ChargeTransactionKey": {
          "description": "The primary key for the YFS_CHARGE_TRANSACTION table.",
          "type": "string"
        },
        "ChargeType": {
          "description": "The type of charge that is being applied to the order.",
          "type": "string"
        },
        "CollectionDate": {
          "description": "The date and time when the charge was realized.",
          "type": "string"
        },
        "CreditAmount": {
          "description": "The amount that was actually charged or refunded to the buyer.",
          "type": "string"
        },
        "DebitAmount": {
          "description": "The amount that should be charged or refunded to the buyer.",
          "type": "string"
        },
        "DistributedAmount": {
          "description": "This field is used internally by the application to keep track of the amount which has been posted in the invoices as \"collected\".",
          "type": "string"
        },
        "ExecutionDate": {
          "description": "The date and time when the charge request was processed.",
          "type": "string"
        },
        "HoldAgainstBook": {
          "description": "This flag indicates whether the request was created for a precharge or a payment method whose payment type has the ChargeInsteadOfAuth flag turned on.",
          "type": "string"
        },
        "OpenAuthorizedAmount": {
          "description": "The amount that is authorized for the order.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The order header that is associated with this charge transaction.",
          "type": "string"
        },
        "OrderInvoiceKey": {
          "description": "The key to the invoice that was created for this record, if applicable. Invoices are created for shipments, returns, or debit and credit memos.",
          "type": "string"
        },
        "PaymentKey": {
          "description": "The payment method that is associated with this charge transaction.",
          "type": "string"
        },
        "RequestAmount": {
          "description": "The amount that is requested for the charge or authorization of record of types \"REQUEST_CHARGE\" and \"REQUEST_AUTHORIZATION\". Once the request is processed, the actual amount will be shown as \"CreditAmount\" or \"OpenAuthorizedAmount\", for charge and authorization requests respectively.",
          "type": "string"
        },
        "SettledAmount": {
          "description": "This field holds the amount for which a pre-settlement (settlement before invoice) is requested. Charge requests will be created for this amount.",
          "type": "string"
        },
        "Status": {
          "description": "This field indicates the status of this record.",
          "type": "string"
        },
        "StatusReason": {
          "type": "string"
        },
        "TransferFromOhKey": {
          "description": "The Order Header Key of the order that funds are being transferred from.",
          "type": "string"
        },
        "TransferToOhKey": {
          "description": "The Order Header Key of the order that funds are being transferred to.",
          "type": "string"
        },
        "UserExitStatus": {
          "description": "The user exit call status of this record. The status will be \"INVOKED\" if the transaction fails during or after the user exit call, otherwise the value will be blank.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.DistributedToChargeTransaction": {
      "properties": {
        "AuditTransactionID": {
          "description": "The identifier of the order modification audit that caused this record.",
          "type": "string"
        },
        "AuthorizationExpirationDate": {
          "description": "The date and time until which the authorization specified by the authorization ID is applicable.",
          "type": "string"
        },
        "AuthorizationID": {
          "description": "For authorization requests, this field holds the identifier of the authorization that was made. For charge requests, this field holds the authroization ID to be used for charging the amount.",
          "type": "string"
        },
        "BookAmount": {
          "description": "The amount that could be charged to the buyer if the order was fulfilled. At the time of fulfillment, a negative entry is made in this column and positive entry in the DEBIT_AMOUNT column.",
          "type": "string"
        },
        "ChargeTransactionKey": {
          "description": "The primary key for the YFS_CHARGE_TRANSACTION table.",
          "type": "string"
        },
        "ChargeType": {
          "description": "The type of charge that is being applied to the order.",
          "type": "string"
        },
        "CollectionDate": {
          "description": "The date and time when the charge was realized.",
          "type": "string"
        },
        "CreditAmount": {
          "description": "The amount that was actually charged or refunded to the buyer.",
          "type": "string"
        },
        "DebitAmount": {
          "description": "The amount that should be charged or refunded to the buyer.",
          "type": "string"
        },
        "DistributedAmount": {
          "description": "This field is used internally by the application to keep track of the amount which has been posted in the invoices as \"collected\".",
          "type": "string"
        },
        "ExecutionDate": {
          "description": "The date and time when the charge request was processed.",
          "type": "string"
        },
        "HoldAgainstBook": {
          "description": "This flag indicates whether the request was created for a precharge or a payment method whose payment type has the ChargeInsteadOfAuth flag turned on.",
          "type": "string"
        },
        "OpenAuthorizedAmount": {
          "description": "The amount that is authorized for the order.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The order header that is associated with this charge transaction.",
          "type": "string"
        },
        "OrderInvoiceKey": {
          "description": "The key to the invoice that was created for this record, if applicable. Invoices are created for shipments, returns, or debit and credit memos.",
          "type": "string"
        },
        "PaymentKey": {
          "description": "The payment method that is associated with this charge transaction.",
          "type": "string"
        },
        "RequestAmount": {
          "description": "The amount that is requested for the charge or authorization of record of types \"REQUEST_CHARGE\" and \"REQUEST_AUTHORIZATION\". Once the request is processed, the actual amount will be shown as \"CreditAmount\" or \"OpenAuthorizedAmount\", for charge and authorization requests respectively.",
          "type": "string"
        },
        "SettledAmount": {
          "description": "This field holds the amount for which a pre-settlement (settlement before invoice) is requested. Charge requests will be created for this amount.",
          "type": "string"
        },
        "Status": {
          "description": "This field indicates the status of this record.",
          "type": "string"
        },
        "StatusReason": {
          "type": "string"
        },
        "TransferFromOhKey": {
          "description": "The Order Header Key of the order that funds are being transferred from.",
          "type": "string"
        },
        "TransferToOhKey": {
          "description": "The Order Header Key of the order that funds are being transferred to.",
          "type": "string"
        },
        "UserExitStatus": {
          "description": "The user exit call status of this record. The status will be \"INVOKED\" if the transaction fails during or after the user exit call, otherwise the value will be blank.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ExchangeOrder": {
      "properties": {
        "AllocationRuleID": {
          "description": "The identifier of the scheduling rule to be used while checking inventory availability.  If not passed, the allocation rule with the ID 'SYSTEM' for the enterprise is used. If the allocation rule with the ID 'SYSTEM' is not found, the allocation rule with the ID 'SYSTEM' for the enterprise 'DEFAULT' is used.",
          "type": "string"
        },
        "AuthorizationExpirationDate": {
          "description": "The smallest expiration date of currently valid expirations. This field is used by the system payment processing agents. Any transaction having a financial implication will set this date to current system date. This field is used as a trigger by payment processing agents to create charge and authorization reqeusts.",
          "type": "string"
        },
        "AuthorizedClient": {
          "description": "The owner channel of the order.",
          "type": "string"
        },
        "AutoCancelDate": {
          "description": "The date on which the order will automatically be cancelled. If not provided, it is defaulted as null on order creation. This date can be set or reset at any point in time by calling changeorder API.",
          "type": "string"
        },
        "BillToID": {
          "description": "The identifier of the bill to customer.  If a customer definition representing the buyer organization exists within the system, the BillToID can represent the CustomerID of the customer.  Otherwise, the BillToID can represent the PersonID of the bill to address or the BuyerOrganizationCode of the buyer organization.",
          "type": "string"
        },
        "BuyerOrganizationCode": {
          "description": "The buyer organization that is associated with this order. This must be a valid organization defined in the system.",
          "type": "string"
        },
        "BuyerUserId": {
          "description": "This is the User Id of the customer for which order is created. This field maps to User_Id field of YFS_Customer_Contact.",
          "type": "string"
        },
        "CarrierAccountNo": {
          "description": "The account number of the customer with the carrier.",
          "type": "string"
        },
        "CarrierServiceCode": {
          "description": "The carrier service code for this order.",
          "type": "string"
        },
        "ChainType": {
          "description": "Specifies the chaining type of the order.",
          "type": "string"
        },
        "ChargeActualFreightFlag": {
          "description": "This flag indicates whether the actual freight charges should be passed on to the customer. If set to 'Y', invoicing picks up charges from shipments and uses that to invoice the customer.",
          "type": "string"
        },
        "CustomerContactID": {
          "description": "This is the customer contact ID for the order. This field maps to contact ID field of YFS_Customer_Contact.",
          "type": "string"
        },
        "CustomerEMailID": {
          "description": "The E-mail ID of the customer.",
          "type": "string"
        },
        "CustomerPONo": {
          "description": "The PO number of the customer. For purchase orders, this can be used for storing the purchase order number of the purchasing system if that number is not already stored as part of the order number.",
          "type": "string"
        },
        "CustomerRewardsNo": {
          "description": "The identifier of the customer's rewards number",
          "type": "string"
        },
        "DefaultCustomerInformation": {
          "type": "string"
        },
        "DeliveryCode": {
          "description": "The organization that pays the freight charges. For example, SUPPLIER, ENTERPRISE, and MARKETPLACE. However, you could pass any other value which is a valid shipment charge type as understood by the carrier by which the shipment is transported. See YFS_SHIPMENT_CONTAINER.carrier_payment_type for additional information.",
          "type": "string"
        },
        "Division": {
          "description": "The order classification attribute. This field can be used for reporting purposes. Sterling Selling And Fulfillment Suite system has no logic based on this field.",
          "type": "string"
        },
        "DocumentType": {
          "description": "The document type that is associated with this order. For example, Sales Order document (0001), Planned Order document (0002), Return Order document (0003) , and Purchase Order document (0005). This field determines the order's fulfillment cycle and controls the inventory and payment updates performed on the order.",
          "type": "string"
        },
        "DraftOrderFlag": {
          "description": "This flag indicates whether the order is yet to be confirmed. Order lines can only be deleted from the system in draft stage. This flag is not applicable for Quotes.",
          "type": "string"
        },
        "DriverDate": {
          "description": "Date used to driver order processing. '01' represents\n\t\t\t\t\t\t\tReqShipDate, '02' represents ReqDeliveryDate.",
          "type": "string"
        },
        "EnteredBy": {
          "description": "The system or sales person who created the order.",
          "type": "string"
        },
        "EnterpriseCode": {
          "description": "The enterprise that is associated with this order.",
          "type": "string"
        },
        "EntryType": {
          "description": "The channel through which this order was created.",
          "type": "string"
        },
        "ExchangeType": {
          "description": "This field indicates the exchange type of the order. The payment processing logic is dependent on this attribute.",
          "type": "string"
        },
        "FreightTerms": {
          "description": "Indicates Freight Terms for the order.",
          "type": "string"
        },
        "HasChainedLines": {
          "type": "string"
        },
        "HasDeliveryLines": {
          "type": "string"
        },
        "HasProductLines": {
          "type": "string"
        },
        "HasServiceLines": {
          "type": "string"
        },
        "HoldFlag": {
          "type": "string"
        },
        "HoldReasonCode": {
          "description": "The reason code for putting the order on hold.",
          "type": "string"
        },
        "LevelOfService": {
          "description": "Indicates the level of service required for this order.  Default is Null.",
          "type": "string"
        },
        "MaxOrderStatus": {
          "description": "Maximum order status based on all records that belong\n\t\t\t\t\t\t\tto an order.",
          "type": "string"
        },
        "MaxOrderStatusDesc": {
          "description": "Description of maximum order status based on all\n\t\t\t\t\t\t\trecords that belong to an order.",
          "type": "string"
        },
        "MinOrderStatus": {
          "description": "Minimum order status based on all records that belong\n\t\t\t\t\t\t\tto an order.",
          "type": "string"
        },
        "MinOrderStatusDesc": {
          "description": "Description of minimum order status based on all\n\t\t\t\t\t\t\trecords that belong to an order.",
          "type": "string"
        },
        "MultipleStatusesExist": {
          "description": "If order is in more than one status then this flag\n\t\t\t\t\t\t\twill be returned as \"Y\".",
          "type": "string"
        },
        "NotificationReference": {
          "description": "This field provides details on notifications based on the notification type. For example, for notification type 'e-mail' this would be the e-mail address. This field is not used within the application.",
          "type": "string"
        },
        "NotificationType": {
          "description": "This field is not used within the application. It is published with events so that external decisions can be made based on it.",
          "type": "string"
        },
        "NotifyAfterShipmentFlag": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "OrderDate": {
          "description": "The date on which the order was taken. If not passed during order creation, it is defaulted to current system date.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The primary key for the YFS_ORDER_HEADER table.",
          "type": "string"
        },
        "OrderName": {
          "description": "The name given to the order.",
          "type": "string"
        },
        "OrderNo": {
          "description": "The number of the order, which can be passed during order creation or generated based on a system rule setting.",
          "type": "string"
        },
        "OrderPurpose": {
          "description": "This indicates what, if any, specific purpose this order was created for. The only valid value is 'EXCHANGE' which means the order is created for exchange purpose. But, the system may create an order with OrderPurpose of REFUND for internal use.",
          "type": "string"
        },
        "OrderType": {
          "description": "The order classification attribute. This field can be used for reporting purposes or to build conditions for modeling your business process. Sterling Selling And Fulfillment Suite system has no default logic based on this field.",
          "type": "string"
        },
        "OriginalTax": {
          "description": "Total tax amount at the time of the order creation.This attribute only reflects the header tax.This field is not updated later in the cycle and can be used to track changes made since the order creation.",
          "type": "string"
        },
        "OriginalTotalAmount": {
          "description": "The total amount at the time of the order creation. This field is not updated later in the cycle and can be used to track changes made since the order creation.",
          "type": "string"
        },
        "OtherCharges": {
          "description": "The sum of the other charges at the header level.",
          "type": "string"
        },
        "PaymentStatus": {
          "description": "The information about the payment status of the order.",
          "type": "string"
        },
        "PendingTransferIn": {
          "description": "The amount of funds available for the exchange order. This is the same as the total order amount of the return order.",
          "type": "string"
        },
        "PersonalizeCode": {
          "description": "The code that describes the personalization required for the order.",
          "type": "string"
        },
        "PriceProgramKey": {
          "description": "The price program that is associated with this order.",
          "type": "string"
        },
        "PriorityCode": {
          "description": "The priority code of the order. External logic can be built for prioritizing orders.",
          "type": "string"
        },
        "PriorityNumber": {
          "description": "The numeric priority code as opposed to alphanumeric field PRIORITY_CODE.",
          "type": "string"
        },
        "ProcessPaymentOnReturnOrder": {
          "description": "Indicates that payment methods should be copied onto\n\t\t\t\t\t\t\tthe return order and that refunds should be processed there, as\n\t\t\t\t\t\t\topposed to the original sales order. This is only valid for\n\t\t\t\t\t\t\treturn orders.",
          "type": "string"
        },
        "Purpose": {
          "description": "This field is passed out in the tax calculation user exits.",
          "type": "string"
        },
        "ReceivingNode": {
          "description": "The node an order is to be shipped to.",
          "type": "string"
        },
        "ReqCancelDate": {
          "description": "The requested cancel date. If this date is in the future, the order will be scheduled only up to this date. If this date is in the past, the order can be scheduled for shipping today as long as it has not been cancelled already. The order line level cancel date overrides this attribute.",
          "type": "string"
        },
        "ReqDeliveryDate": {
          "description": "The requested delivery date. This date is stamped on order lines (as requested delivery date) during order creation if no requested delivery date was passed at the order line level.",
          "type": "string"
        },
        "ReqShipDate": {
          "description": "The date the customer has requested the order to be shipped on. Based on the 'Driver Date' parameter of the document type, the ship date or delivery date will be calculated based on transit time calculations (if not passed at order creation).",
          "type": "string"
        },
        "ReturnByGiftRecipient": {
          "description": "This flag indicates whether the return was initiated by the gift recipient. This field is only used by return orders.",
          "type": "string"
        },
        "ReturnOrderHeaderKeyForExchange": {
          "description": "The return order header key for which this exchange order was created.",
          "type": "string"
        },
        "SCAC": {
          "description": "The carrier assigned to the order.",
          "type": "string"
        },
        "ScacAndService": {
          "description": "Value of SCAC and Service code.",
          "type": "string"
        },
        "ScacAndServiceKey": {
          "description": "Link to YFS_SCAC_AND_SERVICE table.",
          "type": "string"
        },
        "SearchCriteria1": {
          "description": "This field is provided for allowing custom searches. You can decide at implementation time what should be stored in this field.",
          "type": "string"
        },
        "SearchCriteria2": {
          "description": "This field is provided for allowing custom searches. You can decide at implementation time what should be stored in this field.",
          "type": "string"
        },
        "SellerOrganizationCode": {
          "description": "The seller organization that is associated with this order. This must be a valid organization defined in the system.",
          "type": "string"
        },
        "ShipToID": {
          "description": "The identifier of the ship to customer.  If a customer definition representing the buyer organization exists within the system, the ShipToID can represent the CustomerID of the customer.  Otherwise, the ShipToID can represent the PersonID of the ship to address or the receiving node of the order.",
          "type": "string"
        },
        "Status": {
          "description": "Status description of the order.",
          "type": "string"
        },
        "TaxExemptFlag": {
          "description": "This flag indicates whether the buyer is extempt from paying taxes.",
          "type": "string"
        },
        "TaxExemptionCertificate": {
          "description": "The buyer's tax exemption certificate.",
          "type": "string"
        },
        "TaxJurisdiction": {
          "description": "The tax jurisdiction of the buyer.",
          "type": "string"
        },
        "TaxPayerId": {
          "description": "The identifier of the buyer.",
          "type": "string"
        },
        "TermsCode": {
          "description": "The terms code of the order. This is passed on to the invoice and published with the invoice.",
          "type": "string"
        },
        "TotalAdjustmentAmount": {
          "description": "the sum of all the credit and debit memos issued against this order.",
          "type": "string"
        },
        "VendorID": {
          "description": "The seller's vendor identifier, as defined by the buyer.",
          "type": "string"
        },
        "isHistory": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ExchangeOrders": {
      "properties": {
        "ExchangeOrder": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ExchangeOrder"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ExcludedPricingRuleAttributeValueList": {
      "properties": {
        "PricingRuleAttributeValue": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleAttributeValue"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ExcludedPricingRuleCategoryList": {
      "properties": {
        "PricingRuleCategory": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleCategory"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ExcludedPricingRuleItemList": {
      "properties": {
        "PricingRuleItem": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleItem"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ExcludedPricingRuleTargetAttributeValueList": {
      "properties": {
        "PricingRuleTargetAttributeValue": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleTargetAttributeValue"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ExcludedPricingRuleTargetCategoryList": {
      "properties": {
        "PricingRuleTargetCategory": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleTargetCategory"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ExcludedPricingRuleTargetItemList": {
      "properties": {
        "PricingRuleTargetItem": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleTargetItem"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.FileAttachment": {
      "properties": {
        "FileAttachmentKey": {
          "description": "The primary key of the PLT_FILE_ATTACHMENT table.",
          "type": "string"
        },
        "FileContentType": {
          "description": "The file content type.",
          "type": "string"
        },
        "FileDescription": {
          "description": "Description of the file content as returned by FileUploadServlet",
          "type": "string"
        },
        "FileLocation": {
          "description": "The location of the file as returned by FileUploadServlet",
          "type": "string"
        },
        "FileName": {
          "description": "The file name.",
          "type": "string"
        },
        "FileSize": {
          "description": "Size of the file in number of bytes.",
          "type": "string"
        },
        "Operation": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.FileAttachments": {
      "properties": {
        "FileAttachment": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.FileAttachment"
          },
          "type": "array"
        },
        "FileAttachmentKey": {
          "description": "The key of the attached file",
          "type": "string"
        },
        "FileContentType": {
          "description": "The content type of the attached file",
          "type": "string"
        },
        "FileName": {
          "description": "The name of the attached file",
          "type": "string"
        },
        "FileSize": {
          "description": "The size of the attached file",
          "type": "string"
        },
        "TotalNumberOfRecords": {
          "description": "Number of Attachments in the Order.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Filter": {
      "properties": {
        "InPerson": {
          "description": "InPerson filter",
          "type": "string"
        },
        "RemainingFinancialTotals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.RemainingFinancialTotals"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.HazmatInformation": {
      "properties": {
        "CargoAir": {
          "description": "Indicates the max quantity that can be shipped while shipping via cargo aircraft.",
          "type": "string"
        },
        "Exception": {
          "description": "Indicates the packing exceptions while shipping the hazardous material.",
          "type": "string"
        },
        "HazardClass": {
          "description": "Indicates the category of a hazard assigned to a hazardous material. Its value ranges from 1 to 9.",
          "type": "string"
        },
        "HazmatComplianceKey": {
          "description": "The primary key for the YFS_HAZMAT_COMPLIANCE table.",
          "type": "string"
        },
        "Label": {
          "description": "Indicates the label code.",
          "type": "string"
        },
        "PackingGroup": {
          "description": "Packing Groups (PG) indicate the degree of danger of a hazardous material within its hazard class or division and relate to the strength of packaging required for shipment. It can take values Packing Group I - high danger, Packing Group II - medium danger, Packing Group III - low danger.",
          "type": "string"
        },
        "PassengerAir": {
          "description": "Indicates the max quantity that can be shipped while shipping via passenger aircraft or rail.",
          "type": "string"
        },
        "ProperShippingName": {
          "description": "Indicates the proper shipping name or description of hazardous material.",
          "type": "string"
        },
        "QtyBulk": {
          "description": "Indicates the max quantity that can be shipped while shipping bulk.",
          "type": "string"
        },
        "QtyNonBulk": {
          "description": "Indicates the max quantity that can be shipped while shipping non bulk.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Unique number to identify a hazardous substance. The difference between the preceding and the succeeding sort order value equals to five. This is to accommodate new hazardous materials.",
          "type": "string"
        },
        "SpecialProvisions": {
          "description": "Indicates the special provisions to be provided while shipping the hazardous material.",
          "type": "string"
        },
        "Symbols": {
          "description": "Indicates the symbol of hazardous material.",
          "type": "string"
        },
        "UNNumber": {
          "description": "UN numbers are four-digit numbers that identify hazardous substances and products (such as explosives and poisonous materials) of commercial importance. This is widely used in international commerce, for instance to label the contents of shipping containers.",
          "type": "string"
        },
        "Vessel": {
          "description": "Specifies where the cargo is stowed on a vessel.",
          "type": "string"
        },
        "VesselSP": {
          "description": "Specifies other stowage plans.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.HeaderCharge": {
      "properties": {
        "ChargeAmount": {
          "description": "The amount of the charge.",
          "type": "string"
        },
        "ChargeBreakups": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChargeBreakups"
        },
        "ChargeCategory": {
          "description": "The charge category. For example, Labeling or Handling.",
          "type": "string"
        },
        "ChargeCategoryDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChargeCategoryDetails"
        },
        "ChargeName": {
          "description": "The name of the charge. For example, Price Ticket.",
          "type": "string"
        },
        "ChargeNameDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChargeNameDetails"
        },
        "ChargeNameKey": {
          "description": "Primary key for a charge name.",
          "type": "string"
        },
        "InvoicedChargeAmount": {
          "description": "Applicable only to charges for an Order. This is the amount which has already been invoiced.",
          "type": "string"
        },
        "IsBillable": {
          "description": "Describes if the charge is billable. Default:",
          "type": "string"
        },
        "IsDiscount": {
          "description": "Describes if the charge is discountable. Default:",
          "type": "string"
        },
        "IsManual": {
          "description": "Determines whether the charge was manually created or created\n\t\t\t\t\t\t\tautomatically through pricing engine. Valid Values:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t,\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t, or\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tDefault:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t.",
          "type": "string"
        },
        "IsRefundable": {
          "description": "Describes if the charge is refundable. Default:",
          "type": "string"
        },
        "IsShippingCharge": {
          "description": "Determines whether the charge is a shipping charge. This\n\t\t\t\t\t\t\tattribute value is system defined and cannot be overridden. The\n\t\t\t\t\t\t\tvalue for this attribute is set as\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tonly for Charge Name configured as\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tin financial rule. For all other Charges this attribute is set to\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t.",
          "type": "string"
        },
        "Reference": {
          "description": "Reference information about this charge.",
          "type": "string"
        },
        "RemainingChargeAmount": {
          "description": "Remaining Charge Amount",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.HeaderCharges": {
      "properties": {
        "HeaderCharge": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.HeaderCharge"
          },
          "type": "array"
        },
        "Reset": {
          "description": "If reset is passed as Y, all the existing charges that are not passed as a child node will be set to zero.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.HeaderTax": {
      "properties": {
        "ChargeCategory": {
          "description": "The charge category for which tax is being charged. For example, Labeling or Handling.",
          "type": "string"
        },
        "ChargeName": {
          "description": "Charge name for which tax is being charged. For example, Price Ticket.",
          "type": "string"
        },
        "ChargeNameKey": {
          "description": "Primary key for a charge name.",
          "type": "string"
        },
        "InvoicedTax": {
          "description": "Tax amount invoiced.",
          "type": "string"
        },
        "Reference1": {
          "description": "Additional reference information. This field can be customized by the Enterprise.",
          "type": "string"
        },
        "Reference2": {
          "description": "Additional reference information. This field can be customized by the Enterprise.",
          "type": "string"
        },
        "Reference3": {
          "description": "Additional reference information. This field can be customized by the Enterprise.",
          "type": "string"
        },
        "Reference_1": {
          "description": "Reference 1",
          "type": "string"
        },
        "Reference_2": {
          "description": "Reference 2",
          "type": "string"
        },
        "Reference_3": {
          "description": "Reference 3",
          "type": "string"
        },
        "RemainingTax": {
          "description": "Remaining Tax",
          "type": "string"
        },
        "Tax": {
          "type": "string"
        },
        "TaxName": {
          "description": "The tax name.",
          "type": "string"
        },
        "TaxPercentage": {
          "description": "Percentage amount for tax calculation.",
          "type": "string"
        },
        "TaxableFlag": {
          "description": "This flag indicates if a charge can be taxed.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.HeaderTaxes": {
      "properties": {
        "HeaderTax": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.HeaderTax"
          },
          "type": "array"
        },
        "TaxSummary": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TaxSummary"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ID": {
      "properties": {
        "Name": {
          "description": "Name of the ID",
          "type": "string"
        },
        "Value": {
          "description": "Value of the ID",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.IDs": {
      "properties": {
        "ID": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ID"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.IncludedPricingRuleAttributeValueList": {
      "properties": {
        "PricingRuleAttributeValue": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleAttributeValue"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.IncludedPricingRuleCategoryList": {
      "properties": {
        "PricingRuleCategory": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleCategory"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.IncludedPricingRuleItemList": {
      "properties": {
        "PricingRuleItem": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleItem"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.IncludedPricingRuleTargetAttributeValueList": {
      "properties": {
        "PricingRuleTargetAttributeValue": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleTargetAttributeValue"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.IncludedPricingRuleTargetCategoryList": {
      "properties": {
        "PricingRuleTargetCategory": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleTargetCategory"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.IncludedPricingRuleTargetItemList": {
      "properties": {
        "PricingRuleTargetItem": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleTargetItem"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Instruction": {
      "properties": {
        "Action": {
          "description": "Indicates the action that can be perfomed on the instruction detail. The valid values for Action are REMOVE or Void(Null). In case when Action is Void, it is treated as Create or Modify.   or ( and ) can be used to indentify an instruction.",
          "type": "string"
        },
        "InstructionDetailKey": {
          "description": "Primary key attribute of YFS_INSTRUCTION_DETAIL table that identifies an instruction.",
          "type": "string"
        },
        "InstructionText": {
          "description": "Free-form text indicating any additional information related to the instruction type or otherwise.",
          "type": "string"
        },
        "InstructionType": {
          "description": "Categorization of instructions so that they can be grouped together for reference. For example, you may have instructions of type Pick, Pack, and Ship for an order.",
          "type": "string"
        },
        "InstructionURL": {
          "description": "The URL relating to and/or containing the instructions.",
          "type": "string"
        },
        "SequenceNo": {
          "description": "You could have an instruction exceeding the limits of a single record. Sequence number is used to provide a way to store a link between such instructions.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Instructions": {
      "properties": {
        "Instruction": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Instruction"
          },
          "type": "array"
        },
        "NumberOfInstructions": {
          "description": "Number of instructions.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.InventoryParameters": {
      "properties": {
        "ATPRule": {
          "description": "The available to promise rule to be used for the item to determine availability.",
          "type": "string"
        },
        "AdvanceNotificationTime": {
          "description": "The advance notification time for this item. Communication to ship the order to shipping node/supplier is made at most this many days before the expected shipment date. Used during the release process. Default value: 0.",
          "type": "string"
        },
        "DefaultExpirationDays": {
          "description": "The default for number of days after which an item would expire.",
          "type": "string"
        },
        "FutureSafetyFactorPercentage": {
          "description": "The future safety factor percentage of this item.  The FutureSafetyFactorPercentage will be excluded from the actual future availability of the item if the scheduling rule, node type, and supply type are configured to apply future safety factor.",
          "type": "string"
        },
        "InventoryMonitorRule": {
          "description": "The monitoring rule that will be used by the availability monitor.",
          "type": "string"
        },
        "IsFifoTracked": {
          "description": "This flag indicates whether an item is FIFO tracked. Default value: N.",
          "type": "string"
        },
        "IsItemBasedAllocationAllowed": {
          "description": "This flag indicates whether the item is allowed for Item Based Allocation process.",
          "type": "string"
        },
        "IsSerialTracked": {
          "description": "This flag indicates whether an item is to be serial tracked in inventory.",
          "type": "string"
        },
        "LeadTime": {
          "description": "The lead time for getting the product delivered. Purchase order placed today will arrive after this many days at the warehouse. Default value: 0.",
          "type": "string"
        },
        "MaximumNotificationTime": {
          "description": "The maximum notification time for this item. Communication to ship the order to shipping node/supplier is made at most this many shipping calendar hours before the expected shipment date. Used during the release process. Default value: 0.",
          "type": "string"
        },
        "MinNotificationTime": {
          "description": "The minimum notification time for this item. Communication to ship the order should be made at least this many days before the expected shipment date. Used to determine the earliest ship date on the line. Default value: 0.",
          "type": "string"
        },
        "NodeLevelInventoryMonitorRule": {
          "description": "The monitoring rule that will be used by the real-time availability monitor for node-level monitoring.",
          "type": "string"
        },
        "OnhandSafetyFactorPercentage": {
          "description": "The on-hand safety factor percentage of this item.  The OnhandSafetyFactorPercentage will be excluded from the actual on-hand availability of the item if the scheduling rule, node type, and supply type are configured to apply on-hand safety factor.   OnhandSafetyFactorPercentage will be used only when OnhandSafetyFactorQuantity is not specified.",
          "type": "string"
        },
        "OnhandSafetyFactorQuantity": {
          "description": "The on-hand safety factor quantity of this item.  The OnhandSafetyFactorQuantity will be excluded from the actual on-hand availability of the item if the scheduling rule, node type, and supply type are configured to apply on-hand safety factor.",
          "type": "string"
        },
        "ProcessingTime": {
          "description": "Define processing time for items in days such as special services.",
          "type": "string"
        },
        "RequiresDGOverride": {
          "description": "This flag indicates if the Default Distribution Rule has to be overridden for real time availability monitoring.",
          "type": "string"
        },
        "TagControlFlag": {
          "description": "This field indicates whether an item is tag controlled. Inventory module uses this flag to determine if additional inventory attributes need to be stored for the item.",
          "type": "string"
        },
        "TagReqAtReceipt": {
          "description": "This field is currently not used.",
          "type": "string"
        },
        "TagReqAtShipment": {
          "description": "This field is currently not used.",
          "type": "string"
        },
        "TimeSensitive": {
          "description": "This flag indiactes whether the item is time-sensitive. Inventory module uses this to determine if inventory is dated. Default value: N.",
          "type": "string"
        },
        "UseUnplannedInventory": {
          "description": "This flag indicates whether the item is allowed to use unplanned inventory. Default value: N.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.InventoryTagAttributes": {
      "properties": {
        "BatchNo": {
          "description": "Specify whether this attibute can be used as a Tag Identifier or a Tag Descriptor.  Valid values:  01 - Use as Tag Descriptor, 02 - Use as Tag Identifier, 03 - Not Use.",
          "type": "string"
        },
        "ItemKey": {
          "description": "An item for which inventory attributes are defined.",
          "type": "string"
        },
        "ItemTagKey": {
          "description": "Primary key attribute of YFS_ITEM_TAG.",
          "type": "string"
        },
        "LotAttribute1": {
          "description": "Specify whether this attibute can be used as a Tag Descriptor.  Valid values:  01 - Use as Tag Descriptor, 03 - Not Use.",
          "type": "string"
        },
        "LotAttribute2": {
          "description": "Specify whether this attibute can be used as a Tag Descriptor.  Valid values:  01 - Use as Tag Descriptor, 03 - Not Use.",
          "type": "string"
        },
        "LotAttribute3": {
          "description": "Specify whether this attibute can be used as a Tag Descriptor.  Valid values:  01 - Use as Tag Descriptor, 03 - Not Use.",
          "type": "string"
        },
        "LotKeyReference": {
          "description": "Specify whether this attibute can be used as a Tag Descriptor.  Valid values:  01 - Use as Tag Descriptor, 03 - Not Use.",
          "type": "string"
        },
        "LotNumber": {
          "description": "Specify whether this attibute can be used as a Tag Identifier or a Tag Descriptor.  Valid values:  01 - Use as Tag Descriptor, 02 - Use as Tag Identifier, 03 - Not Use.",
          "type": "string"
        },
        "ManufacturingDate": {
          "description": "Specify whether this attibute can be used as a Tag Descriptor.  Valid values:  01 - Use as Tag Descriptor, 03 - Not Use.",
          "type": "string"
        },
        "RevisionNo": {
          "description": "Specify whether this attibute can be used as a Tag Identifier or a Tag Descriptor.  Valid values:  01 - Use as Tag Descriptor, 02 - Use as Tag Identifier, 03 - Not Use.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.InvoiceCollectionDetail": {
      "properties": {
        "AmountCollected": {
          "description": "Amount collected by the Invoice Collection for the linked Order Invoice.",
          "type": "string"
        },
        "DateInvoiced": {
          "description": "Timestamp when the record was created.",
          "type": "string"
        },
        "InvoiceNo": {
          "description": "Invoice number.",
          "type": "string"
        },
        "InvoiceType": {
          "description": "Classifies an invoice. For example, Orders, Returns, Debit Memo, Credit Memo, Info etc.",
          "type": "string"
        },
        "MasterInvoiceNo": {
          "description": "Not used internally. Can be updated externally by custom logic to group invoices together.",
          "type": "string"
        },
        "OrderInvoiceKey": {
          "description": "Link to invoice.",
          "type": "string"
        },
        "ReturnReleaseKey": {
          "description": "Link to a return release if invoice is created for a return.",
          "type": "string"
        },
        "ShipmentKey": {
          "description": "Link to a shipment if invoice was created for a shipment.",
          "type": "string"
        },
        "TotalAmount": {
          "description": "Grand total for the invoice.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.InvoiceCollectionDetails": {
      "properties": {
        "InvoiceCollectionDetail": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.InvoiceCollectionDetail"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.InvoicedTotals": {
      "properties": {
        "GrandCharges": {
          "type": "string"
        },
        "GrandDiscount": {
          "type": "string"
        },
        "GrandTax": {
          "type": "string"
        },
        "GrandTotal": {
          "type": "string"
        },
        "HdrCharges": {
          "type": "string"
        },
        "HdrDiscount": {
          "type": "string"
        },
        "HdrTax": {
          "type": "string"
        },
        "HdrTotal": {
          "type": "string"
        },
        "LineSubTotal": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Item": {
      "properties": {
        "AlternateItemID": {
          "description": "This field indicates the alternate ItemID, which can be passed instead of the actual ItemID. This is an alias for the ItemID.",
          "type": "string"
        },
        "BundleFulfillmentMode": {
          "description": "The way in which the bundle will be fulfilled. It can be Ship Independent (00), Ship Together (01), or Deliver Together (02) for Bundle Item. Default value is based on the catalog. If the item is not in the catalog, then Ship Together(01) is defaulted for Bundle Item.",
          "type": "string"
        },
        "CanUseAsServiceTool": {
          "description": "This flag indicates whether this item is configured to be a service tool.",
          "type": "string"
        },
        "CostCurrency": {
          "description": "The currency in which the unit cost is specified.",
          "type": "string"
        },
        "CountryOfOrigin": {
          "description": "The country of origin being requested.",
          "type": "string"
        },
        "CustomerItem": {
          "description": "The item ID for the buyer.",
          "type": "string"
        },
        "CustomerItemDesc": {
          "description": "The item description of the buyer organization.",
          "type": "string"
        },
        "ECCNNo": {
          "description": "The Export Commodity Control Number for a commodity contained in the shipment, as indicated on the Waybill.",
          "type": "string"
        },
        "GlobalItemID": {
          "description": "The unique global identifier used to cross reference an item with another catalog organization.",
          "type": "string"
        },
        "HarmonizedCode": {
          "description": "The harmonized code, if applicable.",
          "type": "string"
        },
        "ISBN": {
          "description": "The ISBN number, if applicable.",
          "type": "string"
        },
        "IsItemSuperseded": {
          "description": "This flag indicates if this item has been superseded. \n\t\t\t\t\t\t\t\tValid Values: ,",
          "type": "string"
        },
        "ItemDesc": {
          "description": "The description of the item.",
          "type": "string"
        },
        "ItemGroupCode": {
          "description": "The item group code. Used to identify if the item is a Product, Provided Service, Provided Service Option, Delivery Service or Delivery Service Option.",
          "type": "string"
        },
        "ItemID": {
          "description": "The identifier for the item. The ITEM_ID, UOM, and PRODUCT_CLASS form the unique inventory identifier for an order line. The ITEM_ID, UOM and ORGANIZATION_CODE form the unique item identifier for the Product Management module.",
          "type": "string"
        },
        "ItemKey": {
          "description": "The primary key for the YFS_ITEM table.",
          "type": "string"
        },
        "ItemShortDesc": {
          "description": "The short description of the item.",
          "type": "string"
        },
        "ItemWeight": {
          "description": "The weight of the item.",
          "type": "string"
        },
        "ItemWeightUOM": {
          "description": "The unit of measure used for weight.",
          "type": "string"
        },
        "LanguageDescriptionList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LanguageDescriptionList"
        },
        "ManufacturerItem": {
          "description": "The item identifier for the manufacturer.",
          "type": "string"
        },
        "ManufacturerItemDesc": {
          "description": "The item description for the manufacturer.",
          "type": "string"
        },
        "ManufacturerName": {
          "description": "The name of the manufacturer.",
          "type": "string"
        },
        "NMFCClass": {
          "description": "The National Motor Freight Classification - A way of classifying goods for the purposes of transportation.",
          "type": "string"
        },
        "NMFCCode": {
          "description": "The National Motor Freight Classification - A way of classifying goods for the purposes of transportation.",
          "type": "string"
        },
        "NMFCDescription": {
          "description": "The description of the NMFC. National Motor Freight Classification is a way of classifying goods for the purposes of transportation.",
          "type": "string"
        },
        "OrganizationCode": {
          "description": "The organization code whose product information is being stored.",
          "type": "string"
        },
        "PrimaryInformation": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PrimaryInformation"
        },
        "ProductClass": {
          "description": "The product class. This field is used as an inventory identifier.",
          "type": "string"
        },
        "ProductLine": {
          "description": "The product line for the item.",
          "type": "string"
        },
        "ScheduleBCode": {
          "description": "The Schedule B commodity codes - A 10-digit numeric codes used to identify products that are exported to other countries.",
          "type": "string"
        },
        "SubCatalogOrganizationCode": {
          "description": "The sub-catalog organization that maintains the item definition.",
          "type": "string"
        },
        "SubstituteItemID": {
          "description": "Substituted ItemID. This field is only populated if the item on the Order line is substituted.",
          "type": "string"
        },
        "SubstituteItemUOM": {
          "description": "Substituted Item UOM. This field is only populated if the item on the Order line is substituted.",
          "type": "string"
        },
        "SupplierItem": {
          "description": "The item ID of the supplier (if this is a PO or the line is being drop-shipped and the supplier is known upfront).",
          "type": "string"
        },
        "SupplierItemDesc": {
          "description": "The item description of the supplier (if this is a PO or line is being drop-shipped and the supplier is known upfront).",
          "type": "string"
        },
        "TaxProductCode": {
          "description": "The product code classification for the purposes of taxation.",
          "type": "string"
        },
        "UPCCode": {
          "description": "The UPC Code of the item.",
          "type": "string"
        },
        "UnitCost": {
          "description": "The unit cost of the item.",
          "type": "string"
        },
        "UnitOfMeasure": {
          "description": "The unit of measure.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemAlias": {
      "properties": {
        "AliasName": {
          "description": "Alias type. For example, UPC, EAN, MFG. CODE.",
          "type": "string"
        },
        "AliasValue": {
          "description": "Alias value for the corresponding alias name.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemAliasList": {
      "properties": {
        "ItemAlias": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemAlias"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemDetails": {
      "properties": {
        "AdditionalAttributeList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AdditionalAttributeList"
        },
        "AlternateUOMList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AlternateUOMList"
        },
        "CanUseAsServiceTool": {
          "description": "This flag indicates whether this item is configured to be a service tool.",
          "type": "string"
        },
        "CategoryList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CategoryList"
        },
        "ChildItemList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChildItemList"
        },
        "ClassificationCodes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ClassificationCodes"
        },
        "Components": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Components"
        },
        "GlobalItemID": {
          "description": "The unique global identifier used to cross reference an item with another catalog organization.",
          "type": "string"
        },
        "HazmatInformation": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.HazmatInformation"
        },
        "InventoryParameters": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.InventoryParameters"
        },
        "InventoryTagAttributes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.InventoryTagAttributes"
        },
        "IsItemSuperseded": {
          "description": "This flag indicates if this item has been superseded. \n\t\t\t\t\tValid Values: ,",
          "type": "string"
        },
        "ItemAliasList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemAliasList"
        },
        "ItemExclusionList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemExclusionList"
        },
        "ItemGroupCode": {
          "description": "The item group code. Used to identify if the item is a Product, Provided Service, Provided Service Option, Delivery Service or Delivery Service Option.",
          "type": "string"
        },
        "ItemID": {
          "description": "The unique identifier for the item.",
          "type": "string"
        },
        "ItemInstructionList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemInstructionList"
        },
        "ItemKey": {
          "description": "The primary key for the YFS_ITEM table.",
          "type": "string"
        },
        "ItemLocaleList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemLocaleList"
        },
        "ItemOptionList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemOptionList"
        },
        "ItemServiceAssocList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemServiceAssocList"
        },
        "ItemServiceSkillList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemServiceSkillList"
        },
        "LanguageDescriptionList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LanguageDescriptionList"
        },
        "OrganizationCode": {
          "description": "The organization code whose product information is being stored.",
          "type": "string"
        },
        "PrimaryInformation": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PrimaryInformation"
        },
        "SafetyFactorDefinitions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.SafetyFactorDefinitions"
        },
        "ServiceActivities": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ServiceActivities"
        },
        "SubCatalogOrganizationCode": {
          "description": "The sub-catalog organization that maintains the item definition.",
          "type": "string"
        },
        "UnitOfMeasure": {
          "description": "The unit of measure for item quantity.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemExclusion": {
      "properties": {
        "ExclusionCode": {
          "description": "Exclusion code for an item.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemExclusionList": {
      "properties": {
        "ItemExclusion": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemExclusion"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemInstruction": {
      "properties": {
        "InstructionCode": {
          "description": "Standard pre-defined instruction code as defined by the catalog organization.",
          "type": "string"
        },
        "InstructionText": {
          "description": "Free form instruction text for the given instruction type.",
          "type": "string"
        },
        "InstructionType": {
          "description": "Instruction type as defined by the catalog organization.",
          "type": "string"
        },
        "ItemInstructionKey": {
          "description": "Primary key attribute of YFS_ITEM_INSTRUCTION.",
          "type": "string"
        },
        "ItemKey": {
          "description": "Item for which instructions are maintained.",
          "type": "string"
        },
        "SeqNo": {
          "description": "Instruction SequenceNo for a given instruction type.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemInstructionList": {
      "properties": {
        "ItemInstruction": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemInstruction"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemLocale": {
      "properties": {
        "Country": {
          "description": "The country associated with the locale.",
          "type": "string"
        },
        "Language": {
          "description": "The language associated with the locale.",
          "type": "string"
        },
        "Variant": {
          "description": "The variant associated with the locale.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemLocaleList": {
      "properties": {
        "ItemLocale": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemLocale"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemOption": {
      "properties": {
        "ItemKey": {
          "description": "Item for which Item Option is being maintained.",
          "type": "string"
        },
        "ItemOptionKey": {
          "description": "Primary key attribute of YFS_ITEM_OPTION.",
          "type": "string"
        },
        "OptionItemId": {
          "description": "The unique ideintifier for an Item Option that is associated to a provided service or delivery service item.",
          "type": "string"
        },
        "OptionUOM": {
          "description": "UOM Of the Item Option that is associated to a provided service or delivery service item.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemOptionList": {
      "properties": {
        "ItemOption": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemOption"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemServiceAssoc": {
      "properties": {
        "CategoryKey": {
          "description": "Classification to which the services are being associated.",
          "type": "string"
        },
        "HoldSchedTillCompletion": {
          "description": "Flag to indicate whether to hold the schedule for the line containing provided service or delivery service item till line containing the parent item has been shipped.  This value will be copied over to YFS_ORDER_PROD_SER_ASSOC table when the association is used.",
          "type": "string"
        },
        "ItemKey": {
          "description": "Item for which service association is being maintained.",
          "type": "string"
        },
        "ItemServiceAssocKey": {
          "description": "Primary key attribute of YFS_ITEM_SERVICE_ASSOC.",
          "type": "string"
        },
        "ItemServiceAssocSkillList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemServiceAssocSkillList"
        },
        "PricingProductQuantity": {
          "description": "Pricing Quantity for item used in this association.  This value will be copied over to YFS_ORDER_PROD_SER_ASSOC table when the association is used.",
          "type": "string"
        },
        "PricingServiceQuantity": {
          "description": "Pricing Quantity for service used in this association.  This value will be copied over to YFS_ORDER_PROD_SER_ASSOC table when the association is used.",
          "type": "string"
        },
        "ProductQuantity": {
          "description": "Quantity for item used in this association.  This value will be copied over to YFS_ORDER_PROD_SER_ASSOC table when the association is used.",
          "type": "string"
        },
        "ServiceItemDesc": {
          "description": "The short description of the item.",
          "type": "string"
        },
        "ServiceItemGroupCode": {
          "description": "ItemGroupCode for the service or delivery item.  Valid values are PS - Provided Service, DS - Delivery Service.",
          "type": "string"
        },
        "ServiceItemId": {
          "description": "Provided service or delivery service item associated as option when selling the parent item.",
          "type": "string"
        },
        "ServiceQuantity": {
          "description": "Quantity for service used in this association.  This value will be copied over to YFS_ORDER_PROD_SER_ASSOC table when the association is used.",
          "type": "string"
        },
        "ServiceUOM": {
          "description": "UOM of the provided service or delivery service item associated to the parent item.",
          "type": "string"
        },
        "TimeOffsetInMinutes": {
          "description": "Specifies the service time offset between services in Hours.  This value will be copied over to YFS_ORDER_PROD_SER_ASSOC table when the association is used.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemServiceAssocList": {
      "properties": {
        "ItemServiceAssoc": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemServiceAssoc"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemServiceAssocSkill": {
      "properties": {
        "Description": {
          "description": "Description of the Service Skill.",
          "type": "string"
        },
        "ServiceSkillId": {
          "description": "Identifier of a Service Skill.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemServiceAssocSkillList": {
      "properties": {
        "ItemServiceAssocSkill": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemServiceAssocSkill"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemServiceSkill": {
      "properties": {
        "Description": {
          "description": "Description of the Service Skill.",
          "type": "string"
        },
        "ServiceSkillId": {
          "description": "Identifier of a Service Skill.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ItemServiceSkillList": {
      "properties": {
        "ItemServiceSkill": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemServiceSkill"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.KitDetail": {
      "properties": {
        "KitDetailTranQuantity": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.KitDetailTranQuantity"
        },
        "OrderKitLineKey": {
          "description": "Link to YFS_ORDER_KIT_LINE table.",
          "type": "string"
        },
        "Quantity": {
          "description": "Quantity.",
          "type": "string"
        },
        "ShipByDate": {
          "description": "Ship by date for the kit line.",
          "type": "string"
        },
        "TagNumber": {
          "description": "Tag number.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.KitDetailTranQuantity": {
      "properties": {
        "Quantity": {
          "description": "Quantity.",
          "type": "string"
        },
        "TransactionalUOM": {
          "description": "UOM on which all the transactional quantities are\n\t\t\t\t\t\t\t\t\t\t\tspecified.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.KitDetails": {
      "properties": {
        "KitDetail": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.KitDetail"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.KitLine": {
      "properties": {
        "ComponentQty": {
          "description": "Component quantity.",
          "type": "string"
        },
        "CustomerItem": {
          "description": "Cross reference to the customer item.",
          "type": "string"
        },
        "CustomerItemDesc": {
          "description": "Customer item description.",
          "type": "string"
        },
        "DepartmentCode": {
          "description": "Department that deals with this item.",
          "type": "string"
        },
        "ItemDesc": {
          "description": "Description for the item.",
          "type": "string"
        },
        "ItemID": {
          "description": "The unique identifer for the component item.",
          "type": "string"
        },
        "ItemShortDesc": {
          "description": "short description for the item.",
          "type": "string"
        },
        "ItemWeight": {
          "description": "Weight of the item.",
          "type": "string"
        },
        "ItemWeightUOM": {
          "description": "Unit of measure of the ITEM_WEIGHT attribute.",
          "type": "string"
        },
        "KitLineTranQuantity": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.KitLineTranQuantity"
        },
        "KitQty": {
          "description": "The number of components required to one kit.",
          "type": "string"
        },
        "ProductClass": {
          "description": "Component Product Class.",
          "type": "string"
        },
        "SupplierItem": {
          "description": "Cross reference to the supplier ietm.",
          "type": "string"
        },
        "SupplierItemDesc": {
          "description": "Supplier item description.",
          "type": "string"
        },
        "UPCCode": {
          "description": "UPC code for the item.",
          "type": "string"
        },
        "UnitCost": {
          "description": "Unit cost of the component item.",
          "type": "string"
        },
        "UnitOfMeasure": {
          "description": "Component Unit Of Measure.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.KitLineTranQuantity": {
      "properties": {
        "ComponentQty": {
          "description": "Component quantity.",
          "type": "string"
        },
        "KitQty": {
          "description": "The number of components required to one kit.",
          "type": "string"
        },
        "TransactionalUOM": {
          "description": "UOM on which all the transactional quantities are\n\t\t\t\t\t\t\t\t\t\tspecified.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.KitLines": {
      "properties": {
        "KitLine": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.KitLine"
          },
          "type": "array"
        },
        "NumberOfKitLines": {
          "description": "Total number of kit lines fetched.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.LanguageDescription": {
      "properties": {
        "Description": {
          "description": "A localized description.",
          "type": "string"
        },
        "ExtendedDescription": {
          "description": "An extended localized description.",
          "type": "string"
        },
        "ExtendedDisplayDescription": {
          "description": "Localized extended display description.",
          "type": "string"
        },
        "LocaleCode": {
          "description": "Locale for which the extended description is stored.",
          "type": "string"
        },
        "ShortDescription": {
          "description": "Short description.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.LanguageDescriptionList": {
      "properties": {
        "LanguageDescription": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LanguageDescription"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.LineCharge": {
      "properties": {
        "AmountFromAddnlLinePrices": {
          "description": "The Amount of the ChargeAmount that was derived from AdditionalLinePrice sources.",
          "type": "string"
        },
        "ChargeAmount": {
          "description": "Charge amount.",
          "type": "string"
        },
        "ChargeBreakups": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChargeBreakups"
        },
        "ChargeCategory": {
          "description": "Link to YFS_CHARGE_CATEGORY.",
          "type": "string"
        },
        "ChargeCategoryDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChargeCategoryDetails"
        },
        "ChargeName": {
          "description": "Link to YFS_CHARGE_NAME.",
          "type": "string"
        },
        "ChargeNameDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChargeNameDetails"
        },
        "ChargeNameKey": {
          "description": "Link to YFS_CHARGE_NAME table.",
          "type": "string"
        },
        "ChargePerLine": {
          "description": "Fixed charge amount for this order/invoice line. When the line charge is associated with an order line, this amount will be invoiced on the first invoice for this order line.",
          "type": "string"
        },
        "ChargePerUnit": {
          "description": "Charge per unit for the item on this order/invoice line.",
          "type": "string"
        },
        "InvoicedChargeAmount": {
          "description": "Invoiced charge amount.",
          "type": "string"
        },
        "InvoicedChargePerLine": {
          "description": "Applicable only to charges for an Order line. This is the charge per line which has already been invoiced.",
          "type": "string"
        },
        "InvoicedChargePerUnit": {
          "description": "Invoiced charge per unit.",
          "type": "string"
        },
        "IsBillable": {
          "description": "Describes if the charge is billable. Default:",
          "type": "string"
        },
        "IsDiscount": {
          "description": "Describes if the charge is discountable. Default:",
          "type": "string"
        },
        "IsManual": {
          "description": "Determines whether the charge was manually created or created\n\t\t\t\t\t\t\t\t\tautomatically through pricing engine. Valid Values:\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t,\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t, or\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tDefault:\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t.",
          "type": "string"
        },
        "IsRefundable": {
          "description": "Describes if the charge is refundable. Default:",
          "type": "string"
        },
        "IsShippingCharge": {
          "description": "Determines whether the charge is a shipping charge. This\n\t\t\t\t\t\t\t\t\tattribute value is system defined and cannot be overridden. The\n\t\t\t\t\t\t\t\t\tvalue for this attribute is set as\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tonly for Charge Name configured as\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tin financial rule. For all other Charges this attribute is set\n\t\t\t\t\t\t\t\t\tto\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t.",
          "type": "string"
        },
        "Reference": {
          "description": "Any additional reference related to this line charge.",
          "type": "string"
        },
        "RemainingChargeAmount": {
          "description": "Remaining charge amount.",
          "type": "string"
        },
        "RemainingChargePerLine": {
          "description": "Remaining charge per line.",
          "type": "string"
        },
        "RemainingChargePerUnit": {
          "description": "Remaining charge per unit.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.LineCharges": {
      "properties": {
        "LineCharge": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineCharge"
          },
          "type": "array"
        },
        "Reset": {
          "description": "If reset is passed as Y, all the existing charges that are not passed as a child node will be set to zero.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.LineInvoicedTotals": {
      "properties": {
        "AdditionalLinePriceTotal": {
          "description": "Total Price for all non-informational Additional\n\t\t\t\t\t\t\t\tLine Prices for the OrderLine. List Price times ActualPricingQuantity.",
          "type": "string"
        },
        "Charges": {
          "description": "The amount of the charges for this line.",
          "type": "string"
        },
        "Discount": {
          "description": "The total of the discount amounts.",
          "type": "string"
        },
        "ExtendedPrice": {
          "description": "The price for this line before taxes, charges, and\n\t\t\t\t\t\t\t\tdiscounts are accounted for.",
          "type": "string"
        },
        "LineCost": {
          "description": "The total cost incured in this order line.",
          "type": "string"
        },
        "LineTotal": {
          "description": "The total amount for this line.",
          "type": "string"
        },
        "OptionPrice": {
          "description": "The total option price for this line.",
          "type": "string"
        },
        "PricingQty": {
          "description": "The quantity used to calculate the extended price.",
          "type": "string"
        },
        "Tax": {
          "description": "The amount of taxes for this line.",
          "type": "string"
        },
        "UnitPrice": {
          "description": "The price for one unit of this line.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.LineOverallTotals": {
      "properties": {
        "AdditionalLinePriceTotal": {
          "description": "Total Price for all non-informational Additional\n\t\t\t\t\t\t\t\tLine Prices for the OrderLine. List Price times ActualPricingQuantity.",
          "type": "string"
        },
        "Charges": {
          "description": "The amount of the charges for this line.",
          "type": "string"
        },
        "Discount": {
          "description": "The total of the discount amounts.",
          "type": "string"
        },
        "ExtendedPrice": {
          "description": "The price for this line before taxes, charges, and\n\t\t\t\t\t\t\t\tdiscounts are accounted for.",
          "type": "string"
        },
        "LineCost": {
          "description": "The total cost incured in this order line.",
          "type": "string"
        },
        "LineTotal": {
          "description": "The total amount for this line.",
          "type": "string"
        },
        "LineTotalWithoutTax": {
          "description": "The total amount for this line before taxes are\n\t\t\t\t\t\t\t\taccounted for.",
          "type": "string"
        },
        "ManualDiscountPercentage": {
          "type": "string"
        },
        "ManualOverridePercentage": {
          "type": "string"
        },
        "OptionPrice": {
          "description": "The total option price for this line.",
          "type": "string"
        },
        "PercentProfitMargin": {
          "type": "string"
        },
        "PricingQty": {
          "description": "The quantity used to calculate the extended price.",
          "type": "string"
        },
        "ShippingBaseCharge": {
          "description": "The amount that will be charged for shipping without\n\t\t\t\t\t\t\t\tdiscounts or charges.",
          "type": "string"
        },
        "ShippingCharges": {
          "description": "The total of charges associated with shipping.",
          "type": "string"
        },
        "ShippingDiscount": {
          "description": "The total of discounts associated with shipping.",
          "type": "string"
        },
        "ShippingTotal": {
          "description": "The total amount for shipping the line including\n\t\t\t\t\t\t\t\tshipping discounts and charges.",
          "type": "string"
        },
        "Tax": {
          "description": "The amount of taxes for this line.",
          "type": "string"
        },
        "UnitPrice": {
          "description": "The price for one unit of this line.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.LineOverallTotalsInEnterpriseCurrency": {
      "properties": {
        "AdditionalLinePriceTotal": {
          "description": "Total Price for all non-informational Additional\n\t\t\t\t\t\t\t\tLine Prices for the OrderLine. List Price times ActualPricingQuantity.",
          "type": "string"
        },
        "Charges": {
          "description": "The amount of the charges for this line.",
          "type": "string"
        },
        "Discount": {
          "description": "The total of the discount amounts.",
          "type": "string"
        },
        "ExtendedPrice": {
          "description": "The price for this line before taxes, charges, and\n\t\t\t\t\t\t\t\tdiscounts are accounted for.",
          "type": "string"
        },
        "LineCost": {
          "description": "The total cost incured in this order line.",
          "type": "string"
        },
        "LineTotal": {
          "description": "The total amount for this line.",
          "type": "string"
        },
        "OptionPrice": {
          "description": "The total option price for this line.",
          "type": "string"
        },
        "PricingQty": {
          "description": "The quantity used to calculate the extended price.",
          "type": "string"
        },
        "Tax": {
          "description": "The amount of taxes for this line.",
          "type": "string"
        },
        "UnitPrice": {
          "description": "The price for one unit of this line.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.LinePriceFrequency": {
      "properties": {
        "PriceTypeSummaryList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PriceTypeSummaryList"
        },
        "RecurringType": {
          "description": "The billing interval of an PriceType.",
          "type": "string"
        },
        "Total": {
          "description": "The Total Price of all non-informational AdditionalLinePrices of all \n\t\t\t\t\t\t\t\tPriceTypes for this RecurringType on the Order.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.LinePriceFrequencyList": {
      "properties": {
        "LinePriceFrequency": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LinePriceFrequency"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.LinePriceInfo": {
      "properties": {
        "ActualPricingQty": {
          "description": "The actual pricing quantity.",
          "type": "string"
        },
        "AdditionalLinePriceTotal": {
          "description": "Total Price for all non-informational Additional\n\t\t\t\t\t\t\t\tLine Prices for the OrderLine. List Price times ActualPricingQuantity.",
          "type": "string"
        },
        "BundleTotal": {
          "description": "Sum of line totals of all the bundle components.\n\t\t\t\t\t\t\t\tComponents having price for information purposes are ignored\n\t\t\t\t\t\t\t\tfrom this calculation.",
          "type": "string"
        },
        "DiscountPercentage": {
          "description": "The discount percentage is the percentage decrease in price between the list and unit price for a given buyer. This value is calculated by subtracting the difference between the list price and unit price and divided by the list price.",
          "type": "string"
        },
        "InvoicedLineTotal": {
          "description": "The total invoiced amount for the line.",
          "type": "string"
        },
        "InvoicedPricingQty": {
          "description": "The invoiced pricing quantity.",
          "type": "string"
        },
        "IsEligibleForShippingDiscount": {
          "description": "This flag can override the configured value for the item. Otherwise it is the same as the configured value for the item.",
          "type": "string"
        },
        "IsLinePriceForInformationOnly": {
          "description": "This flag indicates whether price information passed on the line is for information only. If it is 'Y' then line total will not be considered in order total. Invoiced amount for such lines will always be 0. If it is not passed or passed as 'N' then line price is considered in order total.",
          "type": "string"
        },
        "IsPriceLocked": {
          "description": "This flag indicates whether UnitPrice passed at LinePriceInfo element must be used and price determination ignored, if price determination is configured and enabled. Valid values are 'Y' or 'N'. Default value is 'N'.",
          "type": "string"
        },
        "LineTotal": {
          "description": "The grand total for the line.",
          "type": "string"
        },
        "ListPrice": {
          "description": "the list price of the item. This is an informational field.",
          "type": "string"
        },
        "OrderedPricingQty": {
          "description": "The pricing quantity.",
          "type": "string"
        },
        "PricingQtyConversionFactor": {
          "description": "The pricing quantity conversion factor. This field is used for finding Pricing_Quantity, using Ordered_Quantity.",
          "type": "string"
        },
        "PricingQuantityStrategy": {
          "type": "string"
        },
        "PricingUOM": {
          "description": "The pricing UOM for the order line. If \"PricingUOM\" is not passed it will be defaulted from Catalog. If \"PricingUOM\" is passed and different from inventory uom, \"PricingQtyConversionFactor\" attribute will be used for pricing quantity conversion. If \"PricingQtyConversionFactor\" is not passed it will be considered as zero.",
          "type": "string"
        },
        "RepricingQty": {
          "description": "Represents the quantity that can be used for pricing the item. Typically, the price lists are based on the total purchase quantity. But if some quantity is cancelled because of inventory shortage (non customer fault), the pricing quantity (which is based on the ordered quantity) changes, but repricing_quantity is not changed.",
          "type": "string"
        },
        "RetailPrice": {
          "description": "The retail price of the item. this is an informational field.",
          "type": "string"
        },
        "SettledAmount": {
          "description": "The amount which should be settled before it is actually invoiced.",
          "type": "string"
        },
        "SettledQuantity": {
          "description": "The quantity which should be settled before it is actually invoiced.",
          "type": "string"
        },
        "TaxExemptionCertificate": {
          "description": "The Tax Exemption Certificate applied to this order line.",
          "type": "string"
        },
        "TaxableFlag": {
          "description": "This flag indicates whether this order line is taxable or not. This field is for informational purposes only. Currently, it is not used in any tax calculations. If not passed, this flag is defaulted to that of item in the catalog, if exists, else it is defaulted to \"N\".",
          "type": "string"
        },
        "UnitPrice": {
          "description": "The unit price for the order line.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.LineRemainingTotals": {
      "properties": {
        "AdditionalLinePriceTotal": {
          "description": "Total Price for all non-informational Additional\n\t\t\t\t\t\t\t\tLine Prices for the OrderLine. List Price times ActualPricingQuantity.",
          "type": "string"
        },
        "Charges": {
          "description": "The amount of the charges for this line.",
          "type": "string"
        },
        "Discount": {
          "description": "The total of the discount amounts.",
          "type": "string"
        },
        "ExtendedPrice": {
          "description": "The price for this line before taxes, charges, and\n\t\t\t\t\t\t\t\tdiscounts are accounted for.",
          "type": "string"
        },
        "LineCost": {
          "description": "The total cost incured in this order line.",
          "type": "string"
        },
        "LineTotal": {
          "description": "The total amount for this line.",
          "type": "string"
        },
        "OptionPrice": {
          "description": "The total option price for this line.",
          "type": "string"
        },
        "PricingQty": {
          "description": "The quantity used to calculate the extended price.",
          "type": "string"
        },
        "Tax": {
          "description": "The amount of taxes for this line.",
          "type": "string"
        },
        "UnitPrice": {
          "description": "The price for one unit of this line.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.LineRemainingTotalsInEnterpriseCurrency": {
      "properties": {
        "AdditionalLinePriceTotal": {
          "description": "Total Price for all non-informational Additional\n\t\t\t\t\t\t\t\tLine Prices for the OrderLine. List Price times ActualPricingQuantity.",
          "type": "string"
        },
        "Charges": {
          "description": "The amount of the charges for this line.",
          "type": "string"
        },
        "Discount": {
          "description": "The total of the discount amounts.",
          "type": "string"
        },
        "ExtendedPrice": {
          "description": "The price for this line before taxes, charges, and\n\t\t\t\t\t\t\t\tdiscounts are accounted for.",
          "type": "string"
        },
        "LineCost": {
          "description": "The total cost incured in this order line.",
          "type": "string"
        },
        "LineTotal": {
          "description": "The total amount for this line.",
          "type": "string"
        },
        "OptionPrice": {
          "description": "The total option price for this line.",
          "type": "string"
        },
        "PricingQty": {
          "description": "The quantity used to calculate the extended price.",
          "type": "string"
        },
        "Tax": {
          "description": "The amount of taxes for this line.",
          "type": "string"
        },
        "UnitPrice": {
          "description": "The price for one unit of this line.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.LineTax": {
      "properties": {
        "ChargeCategory": {
          "description": "The charge category for which tax is being charged. For\n\t\t\t\t\t\t\t\t\texample, Labeling or Handling.\n\t\t\t\t\t\t\t\t\tTo specify the tax for the line\n\t\t\t\t\t\t\t\t\tprice, use the charge category\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t.",
          "type": "string"
        },
        "ChargeName": {
          "description": "Charge name for which tax is being charged. For example, Price Ticket.",
          "type": "string"
        },
        "ChargeNameKey": {
          "description": "Link to YFS_CHARGE_NAME table.",
          "type": "string"
        },
        "InvoicedTax": {
          "description": "Tax amount invoiced.",
          "type": "string"
        },
        "NegotiationStatus": {
          "type": "string"
        },
        "NegotiationStatusDesc": {
          "type": "string"
        },
        "Reference1": {
          "description": "Additional reference information. This field can be customized by the Enterprise.",
          "type": "string"
        },
        "Reference2": {
          "description": "Additional reference information. This field can be customized by the Enterprise.",
          "type": "string"
        },
        "Reference3": {
          "description": "Additional reference information. This field can be customized by the Enterprise.",
          "type": "string"
        },
        "Reference_1": {
          "description": "Reference 1",
          "type": "string"
        },
        "Reference_2": {
          "description": "Reference 2",
          "type": "string"
        },
        "Reference_3": {
          "description": "Reference 3",
          "type": "string"
        },
        "RemainingTax": {
          "description": "Remaining tax.",
          "type": "string"
        },
        "Tax": {
          "type": "string"
        },
        "TaxName": {
          "description": "The tax name.",
          "type": "string"
        },
        "TaxPercentage": {
          "description": "Percentage amount for tax calculation.",
          "type": "string"
        },
        "TaxableFlag": {
          "description": "This flag indicates if a charge can be taxed.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.LineTaxes": {
      "properties": {
        "LineTax": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineTax"
          },
          "type": "array"
        },
        "TaxSummary": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TaxSummary"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Modification": {
      "properties": {
        "ModificationType": {
          "description": "Modification Type",
          "type": "string"
        },
        "ThroughOverride": {
          "description": "If it is 'N',  can be performed on order without override. If it is 'Y', modification can be performed only in override mode.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ModificationType": {
      "properties": {
        "Name": {
          "description": "The type of modification that has occurred, for example AddQuantity or ChangeAppointment.",
          "type": "string"
        },
        "ScreenName": {
          "description": "A screen name associated with a modification type.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ModificationTypes": {
      "properties": {
        "ModificationType": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ModificationType"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ModifiedOrderLines": {
      "properties": {
        "OrderLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLine"
        },
        "TotalNumberOfRecords": {
          "description": "The total number of modified or newly created lines.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.NonApprovalTransactionViolationList": {
      "properties": {
        "TotalNumberOfRecords": {
          "description": "Total number of Violations that do/did not require\n\t\t\t\t\t\tApproval.",
          "type": "string"
        },
        "TransactionViolation": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TransactionViolation"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Note": {
      "properties": {
        "AuditTransactionId": {
          "description": "The identifier of the order modification audit that caused this record.",
          "type": "string"
        },
        "ContactReference": {
          "description": "If the notes were entered because of customer contact by phone, the phone no can be stored in this column. If the contact is by email, email ID can be stored here.",
          "type": "string"
        },
        "ContactTime": {
          "description": "The time at which the customer contact occurred.",
          "type": "string"
        },
        "ContactType": {
          "description": "The contact type like Phone call, email etc. The values will be selected from common code of code type \"CONTACT_TYPE\"",
          "type": "string"
        },
        "ContactUser": {
          "description": "The user who made the contact. The default value will the logged in user.",
          "type": "string"
        },
        "CustomerSatIndicator": {
          "description": "The customer satisfaction level.",
          "type": "string"
        },
        "NoteText": {
          "description": "Detailed Notes.",
          "type": "string"
        },
        "Operation": {
          "type": "string"
        },
        "Priority": {
          "description": "Priority of the note. 1 is High, 0 is Low.",
          "type": "string"
        },
        "ReasonCode": {
          "description": "The reason for which the notes are logged. Like \"CustomerContact\" etc. The values will be selected from common code of code type \"NOTES_REASON\"",
          "type": "string"
        },
        "SequenceNo": {
          "description": "The sequence of the note.",
          "type": "string"
        },
        "Tranid": {
          "description": "Transaction for which these notes are applicable.",
          "type": "string"
        },
        "Tranname": {
          "description": "Specifies the name of the Transaction",
          "type": "string"
        },
        "User": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.User"
        },
        "VisibleToAll": {
          "description": "This flag determines whether the note applied should be visible to all users. This field is used for filtering. No logic is currently applied to it.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Notes": {
      "properties": {
        "Note": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Note"
          },
          "type": "array"
        },
        "NumberOfNotes": {
          "description": "Number Of Notes",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OldOrder": {
      "properties": {
        "DocumentType": {
          "description": "The document type that is associated with this order. For example, Sales Order document (0001), Planned Order document (0002), Return Order document (0003) , and Purchase Order document (0005). This field determines the order's fulfillment cycle and controls the inventory and payment updates performed on the order.",
          "type": "string"
        },
        "EnterpriseCode": {
          "description": "The enterprise that is associated with this order.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The primary key for the YFS_ORDER_HEADER table.",
          "type": "string"
        },
        "OrderLines": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLines"
        },
        "OrderNo": {
          "description": "The number of the order, which can be passed during order creation or generated based on a system rule setting.",
          "type": "string"
        },
        "PriceInfo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PriceInfo"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Opportunity": {
      "properties": {
        "BillToID": {
          "description": "The identifier of the bill to customer. If a customer definition representing the buyer organization exists within the system, the BillToID can represent the CustomerID of the customer. Otherwise, the BillToID can represent the PersonID of the bill to address or the BuyerOrganizationCode of the buyer organization.",
          "type": "string"
        },
        "BuyerContactAddress": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.BuyerContactAddress"
        },
        "BuyerContactAddressKey": {
          "type": "string"
        },
        "BuyerOrganizationCode": {
          "type": "string"
        },
        "CoOwnerUser": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CoOwnerUser"
        },
        "CoOwnerUserID": {
          "type": "string"
        },
        "CurrencyValue": {
          "description": "The currency value or budget of the opportunity.",
          "type": "string"
        },
        "CustomAttributes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CustomAttributes"
        },
        "CustomerContact": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CustomerContact"
        },
        "CustomerContactID": {
          "type": "string"
        },
        "Description": {
          "description": "The detailed description of the opportunity.",
          "type": "string"
        },
        "DocumentType": {
          "type": "string"
        },
        "EnterpriseCode": {
          "type": "string"
        },
        "ExpectedCloseDate": {
          "description": "The anticipated close date for the opportunity.",
          "type": "string"
        },
        "LeadOrigin": {
          "description": "The original lead to creation of this opportunity. E.g. Trade Shows, Call Center, Existing Customer.",
          "type": "string"
        },
        "LostReasonCode": {
          "description": "If the opportunity is lost, this specifies the reason for losing this opportunity.",
          "type": "string"
        },
        "Notes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Notes"
        },
        "OpportunityDate": {
          "description": "The date that the opportunity was created.",
          "type": "string"
        },
        "OpportunityID": {
          "type": "string"
        },
        "OpportunityKey": {
          "description": "The primary key of the YFS_OPPORTUNITY table.",
          "type": "string"
        },
        "OpportunityName": {
          "description": "A custom name given to this opportunity to help identify the record uniquely.",
          "type": "string"
        },
        "OwnerUser": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OwnerUser"
        },
        "OwnerUserID": {
          "type": "string"
        },
        "PipelineKey": {
          "description": "Pipeline this opportunity belongs to. The pipeline key is determined based on the input attribute passed and the pipeline conditions in the system configuration.",
          "type": "string"
        },
        "PrimaryQuote": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PrimaryQuote"
        },
        "PrimaryQuoteKey": {
          "description": "The primary quote for this opportunity.",
          "type": "string"
        },
        "ProbableSuccessRate": {
          "description": "The probability of success of the opportunity.",
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "StatusName": {
          "type": "string"
        },
        "TeamCode": {
          "description": "Indicates a team that can manage this opportunity.  Default is Null.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Order": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "ActualPricingDate": {
          "type": "string"
        },
        "AddedAwards": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AddedAwards"
        },
        "AdditionalAddresses": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AdditionalAddresses"
        },
        "AdditionalLinePriceSummary": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AdditionalLinePriceSummary"
        },
        "AllAddressesVerified": {
          "description": "This flag determines whether or not the addresses in this order have been verified by an address verification program.",
          "type": "string"
        },
        "AllocationRuleID": {
          "description": "The identifier of the scheduling rule to be used while checking inventory availability.  If not passed, the allocation rule with the ID 'SYSTEM' for the enterprise is used. If the allocation rule with the ID 'SYSTEM' is not found, the allocation rule with the ID 'SYSTEM' for the enterprise 'DEFAULT' is used.",
          "type": "string"
        },
        "AllowedModifications": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AllowedModifications"
        },
        "AllowedTransactions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AllowedTransactions"
        },
        "AnswerSets": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AnswerSets"
        },
        "ApplyDefaultTemplate": {
          "type": "string"
        },
        "ApplyOnlyItemLevelPricingRules": {
          "type": "string"
        },
        "ApprovalCycle": {
          "description": "The approval cycle the order is currently in.",
          "type": "string"
        },
        "AuditTransactionId": {
          "type": "string"
        },
        "AuthorizationExpirationDate": {
          "description": "The smallest expiration date of currently valid expirations. This field is used by the system payment processing agents. Any transaction having a financial implication will set this date to current system date. This field is used as a trigger by payment processing agents to create charge and authorization reqeusts.",
          "type": "string"
        },
        "AuthorizedClient": {
          "description": "The owner channel of the order.",
          "type": "string"
        },
        "AutoCancelDate": {
          "description": "The date on which the order will automatically be cancelled. If not provided, it is defaulted as null on order creation. This date can be set or reset at any point in time by calling changeorder API.",
          "type": "string"
        },
        "Awards": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Awards"
        },
        "BillToID": {
          "description": "The identifier of the bill to customer.  If a customer definition representing the buyer organization exists within the system, the BillToID can represent the CustomerID of the customer.  Otherwise, the BillToID can represent the PersonID of the bill to address or the BuyerOrganizationCode of the buyer organization.",
          "type": "string"
        },
        "BillToKey": {
          "description": "The bill to address that is associated with this order.",
          "type": "string"
        },
        "BuyerMarkForNodeId": {
          "description": "Mark For Node as identified by the buyer for eg: it could be a person,store,DC.",
          "type": "string"
        },
        "BuyerOrganizationCode": {
          "description": "The buyer organization that is associated with this order. This must be a valid organization defined in the system.",
          "type": "string"
        },
        "BuyerReceivingNodeId": {
          "description": "Receiving node as identified by the buyer for eg:Store,DC Number.",
          "type": "string"
        },
        "BuyerUserId": {
          "description": "This is the User Id of the customer for which order is created. This field maps to User_Id field of YFS_Customer_Contact.",
          "type": "string"
        },
        "BypassPricing": {
          "type": "string"
        },
        "CancelOrderOnBackorder": {
          "description": "This flag indicates whether the order needs to be cancelled in case of inventory shortage.  If not specified, most restrictive rule will be used from customer preference or scheduling rule.",
          "type": "string"
        },
        "CarrierAccountNo": {
          "description": "The account number of the customer with the carrier.",
          "type": "string"
        },
        "CarrierServiceCode": {
          "description": "The carrier service code for this order.",
          "type": "string"
        },
        "CartId": {
          "description": "This field stores the WC Cart ID",
          "type": "string"
        },
        "ChainType": {
          "description": "Specifies the chaining type of the order.",
          "type": "string"
        },
        "ChargeActualFreightFlag": {
          "description": "This flag indicates whether the actual freight charges should be passed on to the customer. If set to 'Y', invoicing picks up charges from shipments and uses that to invoice the customer.",
          "type": "string"
        },
        "ChargeTranDistributions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChargeTranDistributions"
        },
        "ChargeTransactionDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChargeTransactionDetails"
        },
        "ChargeTransactionRequestList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChargeTransactionRequestList"
        },
        "ChildOrderList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChildOrderList"
        },
        "ComplimentaryGiftBoxQty": {
          "description": "No. of complimentary gift boxes to be given out with the order.",
          "type": "string"
        },
        "CreatedAtNode": {
          "description": "This flag indicates whether the order was created by a node. This field is used during blind return creation at the nodes.",
          "type": "string"
        },
        "Createts": {
          "description": "Timestamp when the record was created.",
          "type": "string"
        },
        "Createuserid": {
          "description": "User who created the record.",
          "type": "string"
        },
        "CurrentOrderApprovals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CurrentOrderApprovals"
        },
        "CurrentUserOrderApprovalDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CurrentUserOrderApprovalDetails"
        },
        "CustCustPONo": {
          "description": "The PO number of the customer's customer. In some situations, this may need to be printed on the actual packaging.",
          "type": "string"
        },
        "CustomAttributes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CustomAttributes"
        },
        "CustomerClassificationCode": {
          "type": "string"
        },
        "CustomerContactID": {
          "description": "This is the customer contact ID for the order. This field maps to contact ID field of YFS_Customer_Contact.",
          "type": "string"
        },
        "CustomerDOB": {
          "type": "string"
        },
        "CustomerEMailID": {
          "description": "The E-mail ID of the customer.",
          "type": "string"
        },
        "CustomerFirstName": {
          "description": "First name of the customer placing the order.",
          "type": "string"
        },
        "CustomerLastName": {
          "description": "Last name of the customer placing the order.",
          "type": "string"
        },
        "CustomerPONo": {
          "description": "The PO number of the customer. For purchase orders, this can be used for storing the purchase order number of the purchasing system if that number is not already stored as part of the order number.",
          "type": "string"
        },
        "CustomerPhoneNo": {
          "description": "Daytime Phone number of the customer placing the order.",
          "type": "string"
        },
        "CustomerRewardsNo": {
          "description": "The identifier of the customer's rewards number",
          "type": "string"
        },
        "CustomerZipCode": {
          "description": "Address Zip Code of the customer placing the order.",
          "type": "string"
        },
        "DefaultCustomerInformation": {
          "type": "string"
        },
        "DefaultTemplate": {
          "description": "This flag indicates whether this order is to be used as the default template. For this order to be used as a default template, the document type of the order being created should be configured to set the template document type as this orders document type.",
          "type": "string"
        },
        "DeletedOrderLines": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.DeletedOrderLines"
        },
        "DeliveryCode": {
          "description": "The organization that pays the freight charges. For example, SUPPLIER, ENTERPRISE, and MARKETPLACE. However, you could pass any other value which is a valid shipment charge type as understood by the carrier by which the shipment is transported. See YFS_SHIPMENT_CONTAINER.carrier_payment_type for additional information.",
          "type": "string"
        },
        "DepartmentCode": {
          "description": "This field can be used for order classification and reporting purposes.",
          "type": "string"
        },
        "Division": {
          "description": "The order classification attribute. This field can be used for reporting purposes. Sterling Selling And Fulfillment Suite system has no logic based on this field.",
          "type": "string"
        },
        "DoNotConsolidate": {
          "description": "This flag indicates whether shipment constraints and routing based constraints should be used during release creation.",
          "type": "string"
        },
        "DocumentType": {
          "description": "The document type that is associated with this order. For example, Sales Order document (0001), Planned Order document (0002), Return Order document (0003) , and Purchase Order document (0005). This field determines the order's fulfillment cycle and controls the inventory and payment updates performed on the order.",
          "type": "string"
        },
        "DraftOrderFlag": {
          "description": "This flag indicates whether the order is yet to be confirmed. Order lines can only be deleted from the system in draft stage. This flag is not applicable for Quotes.",
          "type": "string"
        },
        "DriverDate": {
          "description": "Date used to driver order processing. '01' represents\n\t\t\t\t\tReqShipDate, '02' represents ReqDeliveryDate.",
          "type": "string"
        },
        "EnteredBy": {
          "description": "The system or sales person who created the order.",
          "type": "string"
        },
        "EnterpriseCode": {
          "description": "The enterprise that is associated with this order.",
          "type": "string"
        },
        "EntryType": {
          "type": "string"
        },
        "ExchangeOrders": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ExchangeOrders"
        },
        "ExchangeType": {
          "description": "This field indicates the exchange type of the order. The payment processing logic is dependent on this attribute.",
          "type": "string"
        },
        "ExpirationDate": {
          "description": "The date by which the quote has to be accepted by customer. This only applies to Quotes. The expiration date is computed by the expiration policy before presenting a quote to the customer. The expiration date is computed by adding EXPIRATION_PERIOD rule to the current date. The expiration date can also be updated before presenting to the customer. If the date is overridden, further computations of the date are ignored and the overridden expiration date is published on the quote for the customer.",
          "type": "string"
        },
        "FileAttachments": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.FileAttachments"
        },
        "FreightTerms": {
          "description": "Indicates Freight Terms for the order.",
          "type": "string"
        },
        "HasChainedLines": {
          "type": "string"
        },
        "HasDeliveryLines": {
          "type": "string"
        },
        "HasDerivedChild": {
          "description": "This flag indicates whether the order has any derived children.",
          "type": "string"
        },
        "HasDerivedParent": {
          "description": "This flag indicates whether the order has any derived parent.",
          "type": "string"
        },
        "HasOrderHierarchy": {
          "type": "string"
        },
        "HasPendingChanges": {
          "description": "If order has\n\t\t\t\t\t\n\t\t\t\t\tthen this flag will be returned as \"Y\".",
          "type": "string"
        },
        "HasProductLines": {
          "type": "string"
        },
        "HasServiceLines": {
          "type": "string"
        },
        "HeaderCharges": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.HeaderCharges"
        },
        "HeaderTaxes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.HeaderTaxes"
        },
        "HoldFlag": {
          "type": "string"
        },
        "HoldReasonCode": {
          "description": "The reason code for putting the order on hold.",
          "type": "string"
        },
        "HoursBeforeNextIteration": {
          "description": "The number of hours between iterations. If null, then it is assumed to be 0. Default is Null.",
          "type": "string"
        },
        "InStorePaymentRequired": {
          "description": "This flag indicates if this order line will have its payment processed later. When set, the line's total will be added to the postponed amount.",
          "type": "string"
        },
        "Instructions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Instructions"
        },
        "InvoicedTotals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.InvoicedTotals"
        },
        "IsExpirationDateComputed": {
          "type": "string"
        },
        "IsExpirationDateOverridden": {
          "description": "This flag indicates whether the expiration date is overridden or whether it is computed by the default expiration policy. The value is Y if expiration date is overridden. This flag only applies to Quotes.",
          "type": "string"
        },
        "IsLineShipComplete": {
          "description": "This flag indicates whether the complete line needs to be shipped.  If not specified, most restrictive rule will be used from customer preference or scheduling rule.",
          "type": "string"
        },
        "IsLineShipSingleNode": {
          "description": "This flag indicates whether the complete order line needs to be shipped from a single ship node.  If not specified, most restrictive rule will be used from customer preference or scheduling rule.",
          "type": "string"
        },
        "IsShipComplete": {
          "description": "This flag indicates whether the complete order needs to be shipped.  If not specified, most restrictive rule will be used from customer preference or scheduling rule.The constraint only applies to Order Lines eligible for schedule or release.",
          "type": "string"
        },
        "IsShipSingleNode": {
          "description": "This flag indicates whether the complete order needs to be shipped from a single ship node.  If not specified, most restrictive rule will be used from customer preference or scheduling rule.",
          "type": "string"
        },
        "LevelOfService": {
          "description": "Indicates the level of service required for this order.  Default is Null.",
          "type": "string"
        },
        "LinkedSourceKey": {
          "description": "This field is used to link an order of a different document classification to this order record. e.g. Order header key of the quote is stored in this column.",
          "type": "string"
        },
        "MaskPaymentInfoWhenLoggingAudits": {
          "description": "This flag indicates if the sensitive payment information is masked while logging the audits for the Order. These payment information are .\n\t\t\t\tValid Values:  or",
          "type": "string"
        },
        "MaxOrderStatus": {
          "type": "string"
        },
        "MaxOrderStatusDesc": {
          "type": "string"
        },
        "MinOrderStatus": {
          "type": "string"
        },
        "MinOrderStatusDesc": {
          "type": "string"
        },
        "ModificationReasonCode": {
          "description": "The reason code of this order audit.",
          "type": "string"
        },
        "ModificationReasonText": {
          "description": "The reason text of this order audit.",
          "type": "string"
        },
        "ModificationReference1": {
          "description": "This field provides additional reference information, and can be customized by the enterprise.",
          "type": "string"
        },
        "ModificationReference2": {
          "description": "This field provides additional reference information, and can be customized by the enterprise.",
          "type": "string"
        },
        "ModificationReference3": {
          "description": "This field provides additional reference information, and field can be customized by the enterprise.",
          "type": "string"
        },
        "ModificationReference4": {
          "description": "This field provides additional reference information, and field can be customized by the enterprise.",
          "type": "string"
        },
        "ModifiedOrderLines": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ModifiedOrderLines"
        },
        "Modifyts": {
          "description": "Timestamp when the record was last modified.",
          "type": "string"
        },
        "Modifyuserid": {
          "description": "User who modified the record.",
          "type": "string"
        },
        "MultipleStatusesExist": {
          "description": "If order is in more than one status then this flag will\n\t\t\t\t\tbe returned as \"Y\".",
          "type": "string"
        },
        "NegotiationStatus": {
          "description": "Negotiation Status",
          "type": "string"
        },
        "NegotiationStatusDesc": {
          "description": "Negotiation Status Description",
          "type": "string"
        },
        "NextIterationDate": {
          "description": "The date when the next iteration will be run.  Default is Null.",
          "type": "string"
        },
        "NextIterationSeqNo": {
          "description": "The next sequence number for the next iteration run. This only applies to Master Orders. If null, it is assumed to be 1. Default is Null.",
          "type": "string"
        },
        "NoOfAuthStrikes": {
          "description": "No. of credit card authorization strikes failed for the order.",
          "type": "string"
        },
        "NonApprovalTransactionViolationList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.NonApprovalTransactionViolationList"
        },
        "Notes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Notes"
        },
        "NotificationReference": {
          "description": "This field provides details on notifications based on the notification type. For example, for notification type 'e-mail' this would be the e-mail address. This field is not used within the application.",
          "type": "string"
        },
        "NotificationType": {
          "description": "This field is not used within the application. It is published with events so that external decisions can be made based on it.",
          "type": "string"
        },
        "NotifyAfterShipmentFlag": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "OldOrder": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OldOrder"
        },
        "Opportunity": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Opportunity"
        },
        "OpportunityKey": {
          "description": "The opportunity that is associated with this order. It is the primary key of the YFS_OPPORTUNITY table.",
          "type": "string"
        },
        "OptimizationType": {
          "description": "This field indicates what scheduling will first optimize on.  If not specified scheduling rule will be used to determine optimization type.",
          "type": "string"
        },
        "OrderApprovalDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderApprovalDetails"
        },
        "OrderAudit": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderAudit"
        },
        "OrderAudits": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderAudits"
        },
        "OrderComplete": {
          "description": "This flag indicates whether the order has reached the end of its processing lifecycle.",
          "type": "string"
        },
        "OrderDate": {
          "description": "The date on which the order was taken. If not passed during order creation, it is defaulted to current system date.",
          "type": "string"
        },
        "OrderDates": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderDates"
        },
        "OrderHeaderKey": {
          "description": "The primary key for the YFS_ORDER_HEADER table.",
          "type": "string"
        },
        "OrderHierarchy": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderHierarchy"
        },
        "OrderHoldTypes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderHoldTypes"
        },
        "OrderLineRelationships": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineRelationships"
        },
        "OrderLines": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLines"
        },
        "OrderName": {
          "description": "The name given to the order.",
          "type": "string"
        },
        "OrderNo": {
          "description": "The number of the order, which can be passed during order creation or generated based on a system rule setting.",
          "type": "string"
        },
        "OrderPurpose": {
          "description": "This indicates what, if any, specific purpose this order was created for. The only valid value is 'EXCHANGE' which means the order is created for exchange purpose. But, the system may create an order with OrderPurpose of REFUND for internal use.",
          "type": "string"
        },
        "OrderRelationships": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderRelationships"
        },
        "OrderSearchConditions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderSearchConditions"
        },
        "OrderStatuses": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderStatuses"
        },
        "OrderTags": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderTags"
        },
        "OrderType": {
          "description": "The order classification attribute. This field can be used for reporting purposes or to build conditions for modeling your business process. Sterling Selling And Fulfillment Suite system has no default logic based on this field.",
          "type": "string"
        },
        "OriginalContainerKey": {
          "description": "This field is used by Sterling Multi-Channel Selling Solution.",
          "type": "string"
        },
        "OriginalTax": {
          "description": "Total tax amount at the time of the order creation.This attribute only reflects the header tax.This field is not updated later in the cycle and can be used to track changes made since the order creation.",
          "type": "string"
        },
        "OriginalTotalAmount": {
          "description": "The total amount at the time of the order creation. This field is not updated later in the cycle and can be used to track changes made since the order creation.",
          "type": "string"
        },
        "OtherCharges": {
          "description": "The sum of the other charges at the header level.",
          "type": "string"
        },
        "OverallStatus": {
          "description": "A description of the order's overall status determined by the .",
          "type": "string"
        },
        "OverallTotals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OverallTotals"
        },
        "OverallTotalsInEnterpriseCurrency": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OverallTotalsInEnterpriseCurrency"
        },
        "Override": {
          "type": "string"
        },
        "PaymentMethods": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PaymentMethods"
        },
        "PaymentRuleId": {
          "description": "The payment rule that is associated with this order. All decisions on payment handling are controlled by this rule.",
          "type": "string"
        },
        "PaymentStatus": {
          "description": "The information about the payment status of the order.",
          "type": "string"
        },
        "PendingChanges": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PendingChanges"
        },
        "PendingChangesUserID": {
          "description": "This attribute indicates user, who performed pending\n\t\t\t\t\tchanges on the order.",
          "type": "string"
        },
        "PendingTransferIn": {
          "description": "The amount of funds available for the exchange order. This is the same as the total order amount of the return order.",
          "type": "string"
        },
        "PersonInfoBillTo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PersonInfoBillTo"
        },
        "PersonInfoContact": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PersonInfoContact"
        },
        "PersonInfoMarkFor": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PersonInfoMarkFor"
        },
        "PersonInfoShipTo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PersonInfoShipTo"
        },
        "PersonInfoSoldTo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PersonInfoSoldTo"
        },
        "PersonalizeCode": {
          "description": "The code that describes the personalization required for the order.",
          "type": "string"
        },
        "PriceInfo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PriceInfo"
        },
        "PriceInfoInEnterpriseCurrency": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PriceInfoInEnterpriseCurrency"
        },
        "PriceProgramKey": {
          "description": "The price program that is associated with this order.",
          "type": "string"
        },
        "PriceProgramName": {
          "type": "string"
        },
        "PricingClassificationCode": {
          "description": "This field is used by Sterling Multi-Channel Selling Solution.",
          "type": "string"
        },
        "PriorityCode": {
          "description": "The priority code of the order. External logic can be built for prioritizing orders.",
          "type": "string"
        },
        "PriorityNumber": {
          "description": "The numeric priority code as opposed to alphanumeric field PRIORITY_CODE.",
          "type": "string"
        },
        "ProcessPaymentOnReturnOrder": {
          "description": "Indicates that payment methods should be copied onto\n\t\t\t\t\tthe return order and that refunds should be processed there, as\n\t\t\t\t\topposed to the original sales order. This is only valid for return\n\t\t\t\t\torders.",
          "type": "string"
        },
        "ProductServiceAssocs": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ProductServiceAssocs"
        },
        "Promotions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Promotions"
        },
        "PurgeHistoryDate": {
          "description": "The date that this order should be purged from the history table. If set, this date will override the date determined based on the History Purge Lead Days.",
          "type": "string"
        },
        "Purpose": {
          "description": "This field is passed out in the tax calculation user exits.",
          "type": "string"
        },
        "ReceivingNode": {
          "description": "The node an order is to be shipped to.",
          "type": "string"
        },
        "References": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.References"
        },
        "RemainingFinancialTotals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.RemainingFinancialTotals"
        },
        "RemainingTotals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.RemainingTotals"
        },
        "RemainingTotalsInEnterpriseCurrency": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.RemainingTotalsInEnterpriseCurrency"
        },
        "RemovedAwards": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.RemovedAwards"
        },
        "ReqCancelDate": {
          "description": "The requested cancel date. If this date is in the future, the order will be scheduled only up to this date. If this date is in the past, the order can be scheduled for shipping today as long as it has not been cancelled already. The order line level cancel date overrides this attribute.",
          "type": "string"
        },
        "ReqDeliveryDate": {
          "description": "The requested delivery date. This date is stamped on order lines (as requested delivery date) during order creation if no requested delivery date was passed at the order line level.",
          "type": "string"
        },
        "ReqShipDate": {
          "description": "The date the customer has requested the order to be shipped on. Based on the 'Driver Date' parameter of the document type, the ship date or delivery date will be calculated based on transit time calculations (if not passed at order creation).",
          "type": "string"
        },
        "ReserveInventoryFlag": {
          "type": "string"
        },
        "RetainAnswerSets": {
          "description": "This flag indicates if upon ship-to address change, the answer sets for the old address should be copied to be used for the new address.",
          "type": "string"
        },
        "ReturnByGiftRecipient": {
          "description": "This flag indicates whether the return was initiated by the gift recipient. This field is only used by return orders.",
          "type": "string"
        },
        "ReturnOrderForExchange": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ReturnOrderForExchange"
        },
        "ReturnOrderHeaderKeyForExchange": {
          "description": "The return order header key for which this exchange order was created.",
          "type": "string"
        },
        "ReturnOrdersForExchange": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ReturnOrdersForExchange"
        },
        "Role": {
          "type": "string"
        },
        "SCAC": {
          "description": "The carrier assigned to the order.",
          "type": "string"
        },
        "SaleVoided": {
          "description": "This flag indicates whether the sale transaction has been voided.",
          "type": "string"
        },
        "ScacAndService": {
          "description": "Value of SCAC and Service code.",
          "type": "string"
        },
        "ScacAndServiceKey": {
          "description": "Link to YFS_SCAC_AND_SERVICE table.",
          "type": "string"
        },
        "SearchCriteria1": {
          "description": "This field is provided for allowing custom searches. You can decide at implementation time what should be stored in this field.",
          "type": "string"
        },
        "SearchCriteria2": {
          "description": "This field is provided for allowing custom searches. You can decide at implementation time what should be stored in this field.",
          "type": "string"
        },
        "SelectMethod": {
          "type": "string"
        },
        "SellerOrganizationCode": {
          "description": "The seller organization that is associated with this order. This must be a valid organization defined in the system.",
          "type": "string"
        },
        "ShipNode": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ShipNode"
        },
        "ShipToID": {
          "description": "The identifier of the ship to customer.  If a customer definition representing the buyer organization exists within the system, the ShipToID can represent the CustomerID of the customer.  Otherwise, the ShipToID can represent the PersonID of the ship to address or the receiving node of the order.",
          "type": "string"
        },
        "ShipToKey": {
          "description": "The ship to address that is associated with this order.",
          "type": "string"
        },
        "SkipBOMValidations": {
          "type": "string"
        },
        "SoldToKey": {
          "description": "This field is used by Sterling Multi-Channel Selling Solution.",
          "type": "string"
        },
        "SourceIPAddress": {
          "description": "IP address of the system from which the order was placed.",
          "type": "string"
        },
        "SourceKey": {
          "description": "This field is deprecated.",
          "type": "string"
        },
        "SourceType": {
          "description": "This field is internal. Validate value is 'Quote'.",
          "type": "string"
        },
        "SourcingClassification": {
          "description": "This attribute will be used to determine node for\n\t\t\t\t\tsourcing.",
          "type": "string"
        },
        "SpecialServices": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.SpecialServices"
        },
        "Status": {
          "type": "string"
        },
        "StopDeliveryRequests": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.StopDeliveryRequests"
        },
        "TaxExemptFlag": {
          "description": "This flag indicates whether the buyer is extempt from paying taxes.",
          "type": "string"
        },
        "TaxExemptionCertificate": {
          "description": "The buyer's tax exemption certificate.",
          "type": "string"
        },
        "TaxJurisdiction": {
          "description": "The tax jurisdiction of the buyer.",
          "type": "string"
        },
        "TaxPayerId": {
          "description": "The identifier of the buyer.",
          "type": "string"
        },
        "TeamCode": {
          "description": "Indicates a team that can manage this order.  Default is Null.",
          "type": "string"
        },
        "TermsCode": {
          "description": "The terms code of the order. This is passed on to the invoice and published with the invoice.",
          "type": "string"
        },
        "TotalAdjustmentAmount": {
          "description": "the sum of all the credit and debit memos issued against this order.",
          "type": "string"
        },
        "TransactionApproverList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TransactionApproverList"
        },
        "UnprocessedLines": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.UnprocessedLines"
        },
        "ValidateExternalCoupons": {
          "type": "string"
        },
        "ValidateItem": {
          "type": "string"
        },
        "ValidatePromotionAward": {
          "type": "string"
        },
        "VendorID": {
          "description": "The seller's vendor identifier, as defined by the buyer.",
          "type": "string"
        },
        "isHistory": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderApproval": {
      "properties": {
        "ApprovalCycle": {
          "description": "This attribute keeps track of how many times the approval process has been initiated and what is the current iteration for the approvals.",
          "type": "string"
        },
        "ApprovalGroupKey": {
          "description": "Indicates the approval group used for this order approval.",
          "type": "string"
        },
        "ApproverComments": {
          "description": "This attribute keeps track of how many times the approval process has been initiated and what is the current iteration for the approvals.",
          "type": "string"
        },
        "ApproverUserID": {
          "description": "Indicates user who has approved or rejected the Order Approval.",
          "type": "string"
        },
        "DelegateUserID": {
          "description": "Indicates the delegate who has been assigned to approve the order on behalf of the UserID.",
          "type": "string"
        },
        "IsForCurrentUser": {
          "type": "string"
        },
        "IsMandatory": {
          "description": "Indicates if the approval is mandatory and is required regardless of the hierarchy.",
          "type": "string"
        },
        "OrderApprovalDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderApprovalDetails"
        },
        "OrderApprovalKey": {
          "description": "The primary key of the YFS_ORDER_APPROVAL table.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The primary key for the YFS_ORDER_HEADER table.",
          "type": "string"
        },
        "PredecessorOrderApprSeq": {
          "description": "Indicates the sequence or comma separated sequences of order approvals                     which needs to be approved before this record can be approve.",
          "type": "string"
        },
        "PredecessorOrderApprovals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PredecessorOrderApprovals"
        },
        "Sequence": {
          "description": "Indicates the sequence of the approval.",
          "type": "string"
        },
        "Status": {
          "description": "Indicates approval status.",
          "type": "string"
        },
        "TeamCode": {
          "description": "Team which has to approve the document.",
          "type": "string"
        },
        "UserGroupID": {
          "description": "User group which has to approve the document.",
          "type": "string"
        },
        "UserID": {
          "description": "Indicates user who needs to approve the order.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderApprovalDetail": {
      "properties": {
        "ApprovalRuleID": {
          "description": "Indicates which rule triggered the approvals.",
          "type": "string"
        },
        "Message": {
          "description": "Message to be displayed when approval rule is violated.",
          "type": "string"
        },
        "MessageCode": {
          "description": "Message code to be displayed when approval rule is violated.",
          "type": "string"
        },
        "OrderApprovalDetailKey": {
          "description": "The primary key of the YFS_ORDER_APPROVAL_DTL table.",
          "type": "string"
        },
        "OrderApprovalKey": {
          "description": "The primary key of the order approval that this order approval detail is associated with.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The primary key of the order that this order approval detail is associated with.",
          "type": "string"
        },
        "OrderLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLine"
        },
        "OrderLineKey": {
          "description": "The primary key of the order line that this order approval detail is associated with.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderApprovalDetails": {
      "properties": {
        "OrderApprovalDetail": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderApprovalDetail"
          },
          "type": "array"
        },
        "TotalNumberOfRecords": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderAudit": {
      "properties": {
        "AuditTransactionId": {
          "description": "The identifier of the audit transaction. All records for a modification are tied together using this ID.",
          "type": "string"
        },
        "CreateUserName": {
          "description": "Name of the user who created the audit.",
          "type": "string"
        },
        "Createts": {
          "description": "Timestamp when the record was created.",
          "type": "string"
        },
        "Createuserid": {
          "description": "User who created the record.",
          "type": "string"
        },
        "ModifyUserName": {
          "description": "Name of the user who modified the audit.",
          "type": "string"
        },
        "Modifyts": {
          "description": "Timestamp when the record was last modified.",
          "type": "string"
        },
        "Modifyuserid": {
          "description": "User who modified the record.",
          "type": "string"
        },
        "NewBuffer": {
          "description": "New values are stored as name-value pairs in this field. This field is used by deprecated APIs that log audits in non-XML format.",
          "type": "string"
        },
        "OldBuffer": {
          "description": "Old values are stored as name-value pairs in this field. This field is used by deprecated APIs that log audits in non-XML format.",
          "type": "string"
        },
        "Order": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Order"
          },
          "type": "array"
        },
        "OrderAuditKey": {
          "description": "The primary key for the YFS_ORDER_AUDIT table.",
          "type": "string"
        },
        "OrderAuditLevels": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderAuditLevels"
        },
        "OrderHeaderKey": {
          "description": "The order header that this order audit is associated with.",
          "type": "string"
        },
        "OrderLineKey": {
          "description": "The order line that this order audit is associated with.",
          "type": "string"
        },
        "OrderReleaseKey": {
          "description": "The order release that this order audit is associated with.",
          "type": "string"
        },
        "ReasonCode": {
          "description": "The reason code of this order audit.",
          "type": "string"
        },
        "ReasonText": {
          "description": "The reason text of this order audit.",
          "type": "string"
        },
        "Reference1": {
          "description": "This field provides additional reference information, and can be customized by the enterprise.",
          "type": "string"
        },
        "Reference2": {
          "description": "This field provides additional reference information, and can be customized by the enterprise.",
          "type": "string"
        },
        "Reference3": {
          "description": "This field provides additional reference information, and field can be customized by the enterprise.",
          "type": "string"
        },
        "Reference4": {
          "description": "This field provides additional reference information, and field can be customized by the enterprise.",
          "type": "string"
        },
        "XMLFlag": {
          "description": "This flag indicates whether or not this audit record is stored in XML format. Only deprecated APIs log audits in non-XML format.",
          "type": "string"
        },
        "isHistory": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderAuditDetail": {
      "properties": {
        "Action": {
          "description": "Action",
          "type": "string"
        },
        "Attributes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Attributes"
        },
        "AuditType": {
          "description": "Audit Type",
          "type": "string"
        },
        "CustomAuditDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CustomAuditDetails"
        },
        "IDs": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.IDs"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderAuditDetails": {
      "properties": {
        "OrderAuditDetail": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderAuditDetail"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderAuditLevel": {
      "properties": {
        "ModificationLevel": {
          "description": "Level at which modification is done. Order, Order_Line, Order_Release or Order_Release_Line.",
          "type": "string"
        },
        "ModificationLevelScreenName": {
          "description": "Screen Name for the Modification level.",
          "type": "string"
        },
        "ModificationType": {
          "description": "The type of modification that has occurred, such as AddQuantity, or ChangeAppointment.",
          "type": "string"
        },
        "ModificationTypes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ModificationTypes"
        },
        "OrderAuditDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderAuditDetails"
        },
        "OrderLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLine"
        },
        "OrderLineKey": {
          "description": "Link to order line.",
          "type": "string"
        },
        "OrderRelease": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderRelease"
        },
        "OrderReleaseKey": {
          "description": "Link to order release.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderAuditLevels": {
      "properties": {
        "OrderAuditLevel": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderAuditLevel"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderAudits": {
      "properties": {
        "OrderAudit": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderAudit"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderDate": {
      "properties": {
        "ActualDate": {
          "description": "Actual Date.",
          "type": "string"
        },
        "CommittedDate": {
          "description": "It is a data attribute to store committed dates from supplier.",
          "type": "string"
        },
        "DateTypeId": {
          "description": "The unique identifier for a date type for which additional dates are stored.",
          "type": "string"
        },
        "ExpectedDate": {
          "description": "Expected Date.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The primary key of the YFS_ORDER_HEADER table.",
          "type": "string"
        },
        "OrderLineKey": {
          "description": "The primary key of the YFS_ORDER_LINE table.",
          "type": "string"
        },
        "OrderReleaseKey": {
          "description": "If post release, link to the order release.",
          "type": "string"
        },
        "RequestedDate": {
          "description": "Requested Date.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderDates": {
      "properties": {
        "OrderDate": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderDate"
          },
          "type": "array"
        },
        "ResetMileStoneStatus": {
          "description": "Milestone status for which order dates needs to be reset.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderHierarchy": {
      "properties": {
        "IncompleteHierarchy": {
          "type": "string"
        },
        "Order": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Order"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderHoldType": {
      "properties": {
        "HoldType": {
          "description": "Hold type.",
          "type": "string"
        },
        "LastHoldTypeDate": {
          "description": "Timestamp when this hold type was added to the order.",
          "type": "string"
        },
        "Modifyuserid": {
          "description": "User who modified the record.",
          "type": "string"
        },
        "OrderAuditKey": {
          "description": "Primary key for YFS_ORDER_AUDIT table. This can be used to view the modification types that would have added this hold type.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "Primary Key of YFS_ORDER_HEADER.",
          "type": "string"
        },
        "OrderHoldTypeLogs": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderHoldTypeLogs"
        },
        "OrderLineKey": {
          "description": "Primary Key of YFS_ORDER_Line.",
          "type": "string"
        },
        "ReasonText": {
          "description": "The reason text associates to the order hold type.",
          "type": "string"
        },
        "ResolverUserId": {
          "description": "This is the user who can resolve or reject this hold. This field maps to User_Id field of YFS_Customer_Contact.",
          "type": "string"
        },
        "Status": {
          "description": "Status of the order hold type.",
          "type": "string"
        },
        "StatusDescription": {
          "description": "Description of hold type status.",
          "type": "string"
        },
        "TransactionId": {
          "description": "The unique identifier of the transaction which applied the hold type on order .",
          "type": "string"
        },
        "TransactionName": {
          "description": "Transaction name which created the hold type.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderHoldTypeLog": {
      "properties": {
        "OrderAuditKey": {
          "description": "Primary key for YFS_ORDER_AUDIT table. This can be used to view the modification types that would have added this hold type log.",
          "type": "string"
        },
        "OrderHoldTypeLogKey": {
          "description": "Primary key for YFS_ORDER_HOLD_TYPE_LOG table.",
          "type": "string"
        },
        "ReasonText": {
          "description": "The reason text associates to this order hold type.",
          "type": "string"
        },
        "ResolverUserId": {
          "description": "This is the user who can approve or reject this hold. This field maps to User_Id field of YFS_Customer_Contact.",
          "type": "string"
        },
        "Status": {
          "description": "Status of the order hold type.",
          "type": "string"
        },
        "StatusDescription": {
          "description": "Description of hold type status.",
          "type": "string"
        },
        "TransactionId": {
          "description": "The unique identifier for the transaction which applied the hold type on order .",
          "type": "string"
        },
        "TransactionName": {
          "description": "Transaction name which created the hold type.",
          "type": "string"
        },
        "UserId": {
          "description": "User who modified the record.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderHoldTypeLogs": {
      "properties": {
        "OrderHoldTypeLog": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderHoldTypeLog"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderHoldTypes": {
      "properties": {
        "OrderHoldType": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderHoldType"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderLine": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "AddedAwards": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AddedAwards"
        },
        "AdditionalAddresses": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AdditionalAddresses"
        },
        "AdditionalLinePrices": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AdditionalLinePrices"
        },
        "AllocationDate": {
          "description": "The date when this line will be allocated. This is calculated at order creation time, based on the node processing time. This field is not used from version 50 onwards. The  field is used instead.",
          "type": "string"
        },
        "AllocationLeadTime": {
          "description": "The number of days it will take any node to ship the item after a ship advice is sent. It is defaulted from the Rule Set Field Name (). The release process will this value, or the scheduled node's lead time (setup at ship node level), whichever is greater.",
          "type": "string"
        },
        "AllowedModifications": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.AllowedModifications"
        },
        "ApptStatus": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "ApptWarning": {
          "description": "Displays a warning message if\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tor\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfields have a Non-Null value.",
          "type": "string"
        },
        "AvailableQtyForStopDelivery": {
          "description": "The quantity available through modification rules for\n\t\t\t\t\t\t\tmaking a stop delivery request for this line.",
          "type": "string"
        },
        "AwaitingDeliveryRequest": {
          "description": "A flag to indicate if the order line is awaiting for\n\t\t\t\t\t\t\ta Delivery service association.",
          "type": "string"
        },
        "Awards": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Awards"
        },
        "BOMXML": {
          "type": "string"
        },
        "BackorderNotificationQty": {
          "description": "The backordered quantity for which the last customer notification was sent.",
          "type": "string"
        },
        "BundleComponents": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.BundleComponents"
        },
        "BundleOverallTotals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.BundleOverallTotals"
        },
        "BundleParentLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.BundleParentLine"
        },
        "BuyerMarkForNodeId": {
          "description": "Mark For Node as identified by the buyer for eg: it could be a person,store,DC.",
          "type": "string"
        },
        "BuyerReceivingNodeId": {
          "description": "Receiving node as identified by the buyer for eg:Store,DC Number.",
          "type": "string"
        },
        "CanAddServiceLines": {
          "description": "this flag indicates whether the product line can be associated with service lines.",
          "type": "string"
        },
        "CapacityAllocations": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CapacityAllocations"
        },
        "CarrierAccountNo": {
          "description": "The customers carrier account number.",
          "type": "string"
        },
        "CarrierServiceCode": {
          "description": "The carrier service code for this order line.",
          "type": "string"
        },
        "ChainedFrom": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChainedFrom"
        },
        "ChainedFromOrderHeaderKey": {
          "description": "The order header that is associated with this chained order line. If this line is chained from another order line, this key will point to the parent order line's header record.",
          "type": "string"
        },
        "ChainedFromOrderLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChainedFromOrderLine"
        },
        "ChainedFromOrderLineKey": {
          "description": "The order line that is associated with this chained order line. If this line is chained from another order line, this key will point to the parent order line.",
          "type": "string"
        },
        "ChildOrderLineRelationships": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChildOrderLineRelationships"
        },
        "CommittedQuantity": {
          "description": "It is a data attribute to store the quantity that is committed by supplier.",
          "type": "string"
        },
        "ComputedPrice": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ComputedPrice"
        },
        "ConditionVariable1": {
          "description": "A user defined variable that can be used for condition building in process modeling.",
          "type": "string"
        },
        "ConditionVariable2": {
          "description": "A user defined variable that can be used for condition building in process modeling.",
          "type": "string"
        },
        "ConfigurationKey": {
          "description": "This field is used by Sterling Multi-Channel Selling Solution so that Visual Modeler can be opened with existing options.",
          "type": "string"
        },
        "CustomAttributes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CustomAttributes"
        },
        "CustomerLinePONo": {
          "description": "The buyer PO line number.",
          "type": "string"
        },
        "CustomerPONo": {
          "description": "The buyer's PO number.",
          "type": "string"
        },
        "DeliveryAssociations": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.DeliveryAssociations"
        },
        "DeliveryCode": {
          "description": "This field indicates who will pay the freight. Application understands values such as SUPPLIER, ENTERPRISE and MARKETPLACE to mean that each of these organizations will pay for the freight. You could however pass any other value which is a valid shipment charge type as understood by the carrier by which the shipment is transported. See YFS_SHIPMENT_CONTAINER.carrier_payment_type for additional information.",
          "type": "string"
        },
        "DeliveryMethod": {
          "description": "The delivery method for the product line.",
          "type": "string"
        },
        "DepartmentCode": {
          "description": "This field can be used for line classification and reporting purposes.",
          "type": "string"
        },
        "Dependency": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Dependency"
        },
        "DependencyShippingRule": {
          "description": "This field indicates whether any order lines are dependant on the parent order line. This field can only be specified for the parent line. If this field is specified, it is defaulted on all of the dependant lines. This field is ignored if it is specified on a dependant line.",
          "type": "string"
        },
        "DependentOnLineKey": {
          "description": "The order line key that this order line is associated with. This field will indicate which order line is the parent of the the order line for line dependencies.",
          "type": "string"
        },
        "DerivedFrom": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.DerivedFrom"
        },
        "DerivedFromOrder": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.DerivedFromOrder"
        },
        "DerivedFromOrderHeaderKey": {
          "description": "The order header that is associated with this derived order line. If this line was derived from another order line, this key will point to the parent order line's header record.",
          "type": "string"
        },
        "DerivedFromOrderLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.DerivedFromOrderLine"
        },
        "DerivedFromOrderLineKey": {
          "description": "The order line that is associated with this derived order line. If this line was derived from another order line, this key will point to the parent order line.",
          "type": "string"
        },
        "DerivedFromOrderReleaseKey": {
          "description": "The order release that this derived order line is associated with. If this line was derived from another order line, this key will point to the parent order release record.",
          "type": "string"
        },
        "DisableBundleLookup": {
          "type": "string"
        },
        "DispositionCode": {
          "description": "The disposition code for the return line.",
          "type": "string"
        },
        "DistributionRuleId": {
          "description": "the identifier of the distribution group that is used to determine the ship node(s) that will ship the order line. If not proviFded, the seller organization's default distribution rule ID is used. If provided, it must be a valid ID for the Seller organization.",
          "type": "string"
        },
        "EarliestScheduleDate": {
          "description": "The date before which the order line will not be picked up by scheduling.",
          "type": "string"
        },
        "FillQuantity": {
          "description": "The minimum order line quantity that must be fulfilled in an order release before it is shipped.",
          "type": "string"
        },
        "FirstIterationSeqNo": {
          "description": "The first iteration sequence for which this line is applicable. If Null, it is assumed that the line applies to all sequences before LastIterationSeqNo. Default is Null.",
          "type": "string"
        },
        "FreightTerms": {
          "description": "Indicates Freight Terms for the line.",
          "type": "string"
        },
        "FromStatus": {
          "type": "string"
        },
        "FulfillmentType": {
          "description": "The method of fulfilling the order line during scheduling. This field can be matched with the corresponding field in the YFS_SOURCING_RULE_HDR table and the appropriate sourcing rule can be selected.",
          "type": "string"
        },
        "FutureAvailabilityDate": {
          "description": "Thie field indicates when inventory for the product line will be available.",
          "type": "string"
        },
        "GiftFlag": {
          "description": "This flag indicates whether the order line is a gift item.",
          "type": "string"
        },
        "GiftWrap": {
          "description": "This field indicates if the order line has to be gift wrapped.",
          "type": "string"
        },
        "GroupSequenceNumber": {
          "description": "This field is used to assign a decimal value to each line for the purpose of sorting them in a specific sequence.",
          "type": "string"
        },
        "HasChainedLines": {
          "type": "string"
        },
        "HasDeliveryLines": {
          "description": "Indicates if the line has associated delivery lines.\n\t\t\t\t\t\t\tValid only for product lines.",
          "type": "string"
        },
        "HasDerivedChild": {
          "type": "string"
        },
        "HasServiceLines": {
          "description": "Indicates if the line has associated service lines.\n\t\t\t\t\t\t\tValid only for product lines.",
          "type": "string"
        },
        "HoldFlag": {
          "description": "This flag determines whether a hold has been placed on the order when certain hold type criteria are met. If order is on hold, default configuration will stop the shceduling and release process for the order. The flag is reset to 'N' when all the hold types have been resolved on the order and all of its order lines. Based on hold type configuration, certain transactions may not be allowed to process. Note that there is no validation made on the hold applied but this flag can be reset by the application based on hold types existed on the order. Default: N Valid Values: Y or N",
          "type": "string"
        },
        "HoldReasonCode": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "ImportLicenseExpDate": {
          "description": "The expiration date of the import license number.",
          "type": "string"
        },
        "ImportLicenseNo": {
          "description": "The import license number to be used.",
          "type": "string"
        },
        "InStorePaymentRequired": {
          "description": "This flag indicates if this order line will have its payment processed later. When set, the line's total will be added to the postponed amount. This will override tha value on the order header.",
          "type": "string"
        },
        "Instructions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Instructions"
        },
        "IntentionalBackorder": {
          "description": "A flag to indicate if the order line should be\n\t\t\t\t\t\t\tbackordered upon creation. If passed as 'Y', the line will be\n\t\t\t\t\t\t\tbackordered even if inventory is available. This flag is ignored\n\t\t\t\t\t\t\tif reservation is mandatory.",
          "type": "string"
        },
        "InvoicedExtendedPrice": {
          "description": "The total extended price which has already been invoiced.",
          "type": "string"
        },
        "InvoicedQty": {
          "description": ".\n\t\t\t\t\t\tInvoiced quantity on the order line.",
          "type": "string"
        },
        "InvoicedQuantity": {
          "description": "Invoiced quantity on the order line.",
          "type": "string"
        },
        "IsBlindLine": {
          "description": "Indicates if the line is blind line or not.",
          "type": "string"
        },
        "IsBundleParent": {
          "description": "Indicates if Order line is bundle parent line or not.",
          "type": "string"
        },
        "IsConfigured": {
          "type": "string"
        },
        "IsFirmPredefinedNode": {
          "description": "This flag indicates whether the pre-defined node on the line is firm.  If IsFirmPredefinedNode is marked as N, then the node on the line is ignored during scheduling. If not passed, the value defaults to Y.",
          "type": "string"
        },
        "IsForwardingAllowed": {
          "description": "This flag indicates whether forwarding is allowed for the line.",
          "type": "string"
        },
        "IsPickUpNow": {
          "description": "This flag determines whether the item is picked up now.",
          "type": "string"
        },
        "IsPriceMatched": {
          "description": "This flag determines whether price match was performed for the item.",
          "type": "string"
        },
        "IsProcurementAllowed": {
          "description": "This flag indicates whether procurement is allowed for the line.",
          "type": "string"
        },
        "Item": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Item"
        },
        "ItemDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ItemDetails"
        },
        "ItemGroupCode": {
          "description": "This field indicates what kind of item is on the order line.",
          "type": "string"
        },
        "ItemIsInHand": {
          "description": "This flag determines whether the item was in hand when the return order was created.",
          "type": "string"
        },
        "ItemNotExist": {
          "description": "This field defines approval condition when item not in file is found.",
          "type": "string"
        },
        "KitCode": {
          "description": "The collection of items that form a unit. For example, a home theatre system is a unit consisting of kit components, such as a DVD player, TV, CD player, etc.",
          "type": "string"
        },
        "KitLines": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.KitLines"
        },
        "KitQty": {
          "description": "The quantity that is used to compute ordered quantity for bundle component line. It can be specified only for bundle components. If specified ordered quantity will be set to KitQty*OrderedQty of the bundle parent.",
          "type": "string"
        },
        "LastIterationSeqNo": {
          "description": "The last iteration sequence for which this line is applicable. If Null, it is assumed to go on indefinitely. Default is Null.",
          "type": "string"
        },
        "LevelOfService": {
          "description": "Indicates the level of service required for this order line.  Default is Null.",
          "type": "string"
        },
        "LineCharges": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineCharges"
        },
        "LineInvoicedTotals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineInvoicedTotals"
        },
        "LineOverallTotals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineOverallTotals"
        },
        "LineOverallTotalsInEnterpriseCurrency": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineOverallTotalsInEnterpriseCurrency"
        },
        "LinePriceInfo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LinePriceInfo"
        },
        "LineRemainingTotals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineRemainingTotals"
        },
        "LineRemainingTotalsInEnterpriseCurrency": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineRemainingTotalsInEnterpriseCurrency"
        },
        "LineSeqNo": {
          "description": "The order line sequence number.",
          "type": "string"
        },
        "LineTaxes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.LineTaxes"
        },
        "LineType": {
          "description": "The line type. This field can be used in process modeling for pipeline determination, or for doing conditional processing for this line.",
          "type": "string"
        },
        "MaxLineStatus": {
          "description": "Maximum order line status among all records that\n\t\t\t\t\t\t\tbelong to an order.",
          "type": "string"
        },
        "MaxLineStatusDesc": {
          "description": "Description of maximum order line status among all\n\t\t\t\t\t\t\trecords that belong to an order.",
          "type": "string"
        },
        "MergeNode": {
          "description": "The node where two or more order lines that are to be delivered together should be merged before the final delivery. This field is required when the DependancyShippingRule is set to '02'.  Additionally this field will indicate forwarding location for zone skipping.",
          "type": "string"
        },
        "MinLineStatus": {
          "description": "Minimum order line status among all records that\n\t\t\t\t\t\t\tbelong to an order.",
          "type": "string"
        },
        "MinLineStatusDesc": {
          "description": "Description of minimum order line status among all\n\t\t\t\t\t\t\trecords that belong to an order.",
          "type": "string"
        },
        "MinShipByDate": {
          "description": "The preferred minimum ship by date of the available supply that order line can allocate against.  This only applies to the order line or kit line with time-sensitive item.",
          "type": "string"
        },
        "MultipleStatusesExist": {
          "description": "If order line is in more than one status then this\n\t\t\t\t\t\t\tflag will be returned as \"Y\".",
          "type": "string"
        },
        "Notes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Notes"
        },
        "OpenQty": {
          "description": "Total quantity that can be cancelled from the line.",
          "type": "string"
        },
        "Order": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Order"
          },
          "type": "array"
        },
        "OrderApprovalDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderApprovalDetails"
        },
        "OrderDates": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderDates"
        },
        "OrderHeaderKey": {
          "description": "The order header that this order line is associated with.",
          "type": "string"
        },
        "OrderHoldTypes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderHoldTypes"
        },
        "OrderLineInvAttRequest": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineInvAttRequest"
        },
        "OrderLineKey": {
          "description": "The primary key for the YFS_ORDER_LINE table.",
          "type": "string"
        },
        "OrderLineOptions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineOptions"
        },
        "OrderLinePriceMatch": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLinePriceMatch"
        },
        "OrderLineReservations": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineReservations"
        },
        "OrderLineSourcingControls": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineSourcingControls"
        },
        "OrderLineTranQuantity": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineTranQuantity"
        },
        "OrderOverride": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderOverride"
        },
        "OrderStatuses": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderStatuses"
        },
        "OrderedQty": {
          "description": "The quantity of the line item that has been ordered. If part of the line is cancelled, this number is reduced appropriately. If an order line is returned, this number is not reduced.",
          "type": "string"
        },
        "OrigOrderLineKey": {
          "description": "The line from which this line was created (split process).",
          "type": "string"
        },
        "OriginalOrderedQty": {
          "description": "The quantity which was ordered at order creation. This is not modified after order confirmation.",
          "type": "string"
        },
        "OtherCharges": {
          "description": "The sum of all the line level charges.",
          "type": "string"
        },
        "OverallStatus": {
          "description": "A description of the order line's overall status determined by the .",
          "type": "string"
        },
        "PackListType": {
          "description": "The code indicating the type of packlist to be used for the line. Lines requiring different pack lists are not mixed in a single order release.",
          "type": "string"
        },
        "ParentOfDependentGroup": {
          "description": "This flag indicates whether this line is a parent of a dependency group.",
          "type": "string"
        },
        "ParentOrderLineRelationships": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ParentOrderLineRelationships"
        },
        "PersonInfoMarkFor": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PersonInfoMarkFor"
        },
        "PersonInfoShipTo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PersonInfoShipTo"
        },
        "PersonalizeCode": {
          "description": "The code for personalization.",
          "type": "string"
        },
        "PersonalizeFlag": {
          "description": "This flag indicates whether this line needs personalization.",
          "type": "string"
        },
        "PickableFlag": {
          "description": "This field is used internally.",
          "type": "string"
        },
        "PipelineId": {
          "type": "string"
        },
        "PipelineKey": {
          "description": "The pipeline that this order line belongs to.",
          "type": "string"
        },
        "PrimeLineNo": {
          "description": "The order line number.",
          "type": "string"
        },
        "ProcureFromNode": {
          "description": "The procurement node that is associated with this order line. The order line should be procured from that node if the products or services cannot be sourced from the shipnode specified on the order line.",
          "type": "string"
        },
        "ProductAssociations": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ProductAssociations"
        },
        "ProductItems": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ProductItems"
        },
        "PromisedApptEndDate": {
          "description": "The promised end date of the appointment.",
          "type": "string"
        },
        "PromisedApptStartDate": {
          "description": "The promised start date of the appointment.",
          "type": "string"
        },
        "Promotions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Promotions"
        },
        "Purpose": {
          "description": "This field is passed out in the Tax calculation user exits.",
          "type": "string"
        },
        "ReceivingNode": {
          "description": "The receiving node that is associated with this order line.",
          "type": "string"
        },
        "References": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.References"
        },
        "RemainingQty": {
          "description": "Remaining quantity.",
          "type": "string"
        },
        "RemovedAwards": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.RemovedAwards"
        },
        "ReqCancelDate": {
          "description": "The requested cancel date. If not provided, this field is defaulted from the order header during order creation. Refer to the YFS_ORDER_HEADER table for more details.",
          "type": "string"
        },
        "ReqDeliveryDate": {
          "description": "The requested delivery date. If not provided, this field is defaulted from the order header during order creation. Refer to the YFS_ORDER_HEADER table for more details.",
          "type": "string"
        },
        "ReqShipDate": {
          "description": "The requested ship date. If not provided, this field is defaulted from the order header during order creation. Refer to the YFS_ORDER_HEADER table for more details.",
          "type": "string"
        },
        "ReservationID": {
          "description": "The reservation ID. If this item was reserved before order creation, pass an ID to associate the line with the reservation.",
          "type": "string"
        },
        "ReservationMandatory": {
          "description": "This flag indicates whether this line can be created without a reservation. If set to Y, creation of this line or any quantity addition to this line will be allowed only if the quantity can be reserved. If a ProcureFromNode is also present on the line, then the reservation will be carried out on the procure from node.",
          "type": "string"
        },
        "ReservationPool": {
          "description": "The reservation identifier. If this item was reserved before order creation, pass an ID to associate the line with the reservation.",
          "type": "string"
        },
        "ReshipParentLineKey": {
          "description": "The order line key of the parent line that this line was created as a reshipment of.",
          "type": "string"
        },
        "RetainAnswerSets": {
          "description": "This flag indicates if upon ship-to address change, the answer sets for the old address should be copied to be used for the new address.",
          "type": "string"
        },
        "ReturnPolicyViolations": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ReturnPolicyViolations"
        },
        "ReturnReason": {
          "description": "The reason for returning the order line.",
          "type": "string"
        },
        "ReturnReasonLongDesc": {
          "description": "Long description of the return reason code.",
          "type": "string"
        },
        "ReturnReasonShortDesc": {
          "description": "Short description of the return reason code.",
          "type": "string"
        },
        "ReturnableQty": {
          "description": "Quantity of item that could be returned from this line at its current status.",
          "type": "string"
        },
        "SCAC": {
          "description": "The carrier to be used for this line.",
          "type": "string"
        },
        "ScacAndService": {
          "description": "Value of SCAC and Service code.",
          "type": "string"
        },
        "ScacAndServiceKey": {
          "description": "Link to YFS_SCAC_AND_SERVICE table.",
          "type": "string"
        },
        "SchedFailureReasonCode": {
          "description": "The reason for which schedule has failed on this order line.",
          "type": "string"
        },
        "Schedules": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Schedules"
        },
        "Segment": {
          "description": "The segment of the inventory.",
          "type": "string"
        },
        "SegmentType": {
          "description": "The segment type of the inventory.",
          "type": "string"
        },
        "SerialNo": {
          "description": "The serial number of the item.",
          "type": "string"
        },
        "ServiceAssociations": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ServiceAssociations"
        },
        "ShipNode": {
          "description": "The ship node that is associated with this order line. If provided, all releases will be made against this node.",
          "type": "string"
        },
        "ShipToID": {
          "description": "The ship to identifier.  If a customer definition representing the buyer organization exists within the system, the ShipToID can represent the CustomerID of the customer.  Otherwise, the ShipToID can represent the PersonID of the ship to address or the receiving node of the order.",
          "type": "string"
        },
        "ShipToKey": {
          "description": "The ship to address that is associated with this order line. If not provided, it is defaulted from order header.",
          "type": "string"
        },
        "ShipTogetherNo": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "ShipmentConsolidationGroupId": {
          "description": "It is a consolidation group id  that is used as a standard do not mix constraint.Releases belonging to same shipment consolidation group may consolidate to same shipment.",
          "type": "string"
        },
        "Shipnode": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Shipnode"
        },
        "SourceFromOrganization": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "SplitQty": {
          "description": "The quantity which has been split from this line due to substitutions, price negotiations etc.",
          "type": "string"
        },
        "Status": {
          "description": "Status description of the order line.",
          "type": "string"
        },
        "StatusQuantity": {
          "description": "Quantity on the order line in the current status.",
          "type": "string"
        },
        "SubLineNo": {
          "description": "The sub line number.",
          "type": "string"
        },
        "SubstituteItemID": {
          "description": "Substituted ItemID. This field is only populated if\n\t\t\t\t\t\t\tthe item on the Order line is substituted. This field is\n\t\t\t\t\t\t\tdeprecated, see OverrideItemID on the OrderStatus/Details\n\t\t\t\t\t\t\telement.",
          "type": "string"
        },
        "SubstituteItemUOM": {
          "description": "Substituted Item UOM. This field is only populated if\n\t\t\t\t\t\t\tthe item on the Order line is substituted. This field is\n\t\t\t\t\t\t\tdeprecated, see OverrideItemID on the OrderStatus/Details\n\t\t\t\t\t\t\telement.",
          "type": "string"
        },
        "Timezone": {
          "description": "The timezone in which the promised appointment has been recorded.",
          "type": "string"
        },
        "ToStatus": {
          "type": "string"
        },
        "TranDiscrepancyQty": {
          "description": "The transaction discrepancy quantity.",
          "type": "string"
        },
        "TransactionalLineId": {
          "type": "string"
        },
        "ValidateItem": {
          "type": "string"
        },
        "WorkOrders": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.WorkOrders"
        },
        "isHistory": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderLineInvAttRequest": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "BatchNo": {
          "description": "The Batch Number that has been specifed in the Order Line.",
          "type": "string"
        },
        "LotAttribute1": {
          "description": "Lot Attribute 1 used to specify the details of the lot.",
          "type": "string"
        },
        "LotAttribute2": {
          "description": "Lot Attribute 2 used to specify the details of the lot.",
          "type": "string"
        },
        "LotAttribute3": {
          "description": "Lot Attribute 3 used to specify the details of the lot.",
          "type": "string"
        },
        "LotKeyReference": {
          "description": "The Lot key reference that has been specifed in the Order Line.",
          "type": "string"
        },
        "LotNumber": {
          "description": "The Lot Number that has been specifed in the Order Line.",
          "type": "string"
        },
        "ManufacturingDate": {
          "description": "The Lot manufacturing date that has been specifed in the Order Line.",
          "type": "string"
        },
        "RevisionNo": {
          "description": "The Revision Number that has been specifed in the Order Line.",
          "type": "string"
        },
        "TagNumber": {
          "description": "The Tag number that uniquely identifies the Inventory attributes of the Item.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderLineOption": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "CustomAttributes": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.CustomAttributes"
        },
        "InvoicedOptionPrice": {
          "description": "The amount which has been invoiced.",
          "type": "string"
        },
        "InvoicedPricingQuantity": {
          "description": "Quantity used for using this option.",
          "type": "string"
        },
        "IsPriceLocked": {
          "type": "string"
        },
        "OptionDescription": {
          "description": "Short Description for the Option added to the Item.",
          "type": "string"
        },
        "OptionItemID": {
          "description": "The unique identifier for the Option Item.",
          "type": "string"
        },
        "OptionPrice": {
          "description": "Total amount for the line option.",
          "type": "string"
        },
        "OptionUOM": {
          "description": "Unit Of Measure of the Option Item.",
          "type": "string"
        },
        "OrderLineOptionKey": {
          "description": "Primary key for YFS_ORDER_LINE_OPTION table.",
          "type": "string"
        },
        "PricingUOM": {
          "description": "For future use.  Option is currently priced based on ordering unit of measure.",
          "type": "string"
        },
        "Quantity": {
          "type": "string"
        },
        "UnitPrice": {
          "description": "Unit price for the Option.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderLineOptions": {
      "properties": {
        "OrderLineOption": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineOption"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderLinePriceMatch": {
      "properties": {
        "CompetingCharges": {
          "description": "Competitors Charges applied to the order line",
          "type": "string"
        },
        "DTDOccurrence": {
          "type": "string"
        },
        "ExistingCharges": {
          "description": "Existing Charges for the item, used to derive the price match difference",
          "type": "string"
        },
        "ExistingDiscounts": {
          "description": "Existing Discounts for the item, used to derive the price match difference",
          "type": "string"
        },
        "ExistingUnitPrice": {
          "description": "Existing price for a unit quantity of item, used to derive the price match difference",
          "type": "string"
        },
        "OrderLineKey": {
          "description": "The primary key for the YFS_ORDER_LINE table.",
          "type": "string"
        },
        "OrderLinePriceMatchKey": {
          "description": "The primary key for the YFS_ORDER_LINE_PRICE_MATCH table",
          "type": "string"
        },
        "PriceMatchKey": {
          "description": "The primary key for the YFS_PRICE_MATCH table.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderLineRelationship": {
      "properties": {
        "ChildLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ChildLine"
        },
        "ChildOrderLineKey": {
          "description": "The child order line key of the relationship.",
          "type": "string"
        },
        "Operation": {
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The order header key of the related order lines.",
          "type": "string"
        },
        "OrderLineRelationshipKey": {
          "description": "The primary key for the YFS_ORDER_LINE_RELATIONSHIP table.",
          "type": "string"
        },
        "ParentLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ParentLine"
        },
        "ParentOrderLineKey": {
          "description": "The parent order line key of the relationship.",
          "type": "string"
        },
        "RelationshipType": {
          "description": "The type of relationship between order lines.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderLineRelationships": {
      "properties": {
        "OrderLineRelationship": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineRelationship"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderLineReservation": {
      "properties": {
        "BatchNo": {
          "description": "The batch number that has been specified on the reservation.",
          "type": "string"
        },
        "DemandType": {
          "description": "The inventory demand type used by the reservation.  For all user-created reservations, this will be defaulted from the document params.",
          "type": "string"
        },
        "ItemID": {
          "description": "The reserved item.",
          "type": "string"
        },
        "LotNumber": {
          "description": "The lot number that has been specified on the reservation.",
          "type": "string"
        },
        "Node": {
          "description": "The ship node at which the item has been reserved.",
          "type": "string"
        },
        "ProductAvailabilityDate": {
          "description": "The first date on which the reserved inventory is available.",
          "type": "string"
        },
        "ProductClass": {
          "description": "The reserved item's product class.",
          "type": "string"
        },
        "Quantity": {
          "type": "string"
        },
        "RequestedReservationDate": {
          "description": "The date when the reserved inventory is needed, such as the shipping date.",
          "type": "string"
        },
        "ReservationID": {
          "type": "string"
        },
        "RevisionNo": {
          "description": "The revision number that has been specified on the reservation.",
          "type": "string"
        },
        "TagNumber": {
          "description": "The tag number that has been specified on the reservation.  This field is calculated based on the tag identifiers.",
          "type": "string"
        },
        "UnitOfMeasure": {
          "description": "The reserved item's unit of measure.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderLineReservations": {
      "properties": {
        "OrderLineReservation": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineReservation"
          },
          "type": "array"
        },
        "Reset": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderLineSourcingCntrl": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "InventoryCheckCode": {
          "description": "If this attribute is populated, inventory availability for that node is overridden based on the value.",
          "type": "string"
        },
        "Node": {
          "description": "The node for which either sourcing or procurement has been suppressed when either Suppress Sourcing or Suppress Procurement flags are set to Yes. NOTE: If Node is blank and SuppressNodeCapacity is Yes, then inventory node capacity will be ignored for all nodes of the OrderLine.",
          "type": "string"
        },
        "ReasonText": {
          "description": "Free-form reason text indicating any additional information.",
          "type": "string"
        },
        "SuppressNodeCapacity": {
          "description": "Flag determines whether to ignore inventory node capacity. Default: N. NOTE: If Node is blank and SuppressNodeCapacity is Yes, then inventory node capacity will be ignored for all nodes of the OrderLine.",
          "type": "string"
        },
        "SuppressProcurement": {
          "description": "Flag determines whether to ignore this Node for procurement consideration.  Node will not be used by scheduling as a procure from node.",
          "type": "string"
        },
        "SuppressSourcing": {
          "description": "Flag determines whether to ignore this Node for sourcing consideration.  Node will not be used by scheduling as a ship node.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderLineSourcingControls": {
      "properties": {
        "OrderLineSourcingCntrl": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineSourcingCntrl"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderLineTranQuantity": {
      "properties": {
        "FillQuantity": {
          "description": "The minimum order line quantity that must be\n\t\t\t\t\t\t\t\tfulfilled in an order release before it is shipped.",
          "type": "string"
        },
        "InvoicedQuantity": {
          "description": "Invoiced quantity on the order line.",
          "type": "string"
        },
        "KitQty": {
          "type": "string"
        },
        "OpenQty": {
          "description": "Total quantity that can be cancelled from the line.",
          "type": "string"
        },
        "OrderedQty": {
          "description": "The quantity of the the line item that has been\n\t\t\t\t\t\t\t\tordered. If part of line is cancelled, this number is reduced\n\t\t\t\t\t\t\t\tappropriately. If an order line is returned, this number is not\n\t\t\t\t\t\t\t\treduced.",
          "type": "string"
        },
        "OriginalOrderedQty": {
          "description": "Quantity which was ordered during order creation.\n\t\t\t\t\t\t\t\tThis is not modified after order confirmation.",
          "type": "string"
        },
        "ReceivedQty": {
          "description": "Received quantity on the order line.",
          "type": "string"
        },
        "RemainingQty": {
          "description": "Remaining quantity.",
          "type": "string"
        },
        "SettledQuantity": {
          "description": "Quantity which should be settled before it is\n\t\t\t\t\t\t\t\tactually invoiced.",
          "type": "string"
        },
        "ShippedQuantity": {
          "description": "Shippped quantity on the order line.",
          "type": "string"
        },
        "SplitQty": {
          "description": "Quantity which has been split from this line due to\n\t\t\t\t\t\t\t\tsubstitutions, price negotiations etc.",
          "type": "string"
        },
        "StatusQuantity": {
          "description": "Quantity on the order line in the current status.",
          "type": "string"
        },
        "TranDiscrepancyQty": {
          "description": "Quantity which was over or under received.",
          "type": "string"
        },
        "TransactionalUOM": {
          "description": "UOM on which all the transactional quantities are\n\t\t\t\t\t\t\t\tspecified.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderLines": {
      "properties": {
        "OrderLine": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLine"
          },
          "type": "array"
        },
        "TotalNumberOfRecords": {
          "description": "Number of Order Lines in the Order.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderList": {
      "properties": {
        "FirstOrderHeaderKey": {
          "description": "First Order Header Key in the output.",
          "type": "string"
        },
        "LastOrderHeaderKey": {
          "description": "Last Order Header Key in the output.",
          "type": "string"
        },
        "LastRecordSet": {
          "type": "string"
        },
        "Order": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Order"
          },
          "type": "array"
        },
        "ReadFromHistory": {
          "type": "string"
        },
        "TotalNumberOfRecords": {
          "description": "Total number of records that match the input criteria.",
          "type": "string"
        },
        "TotalOrderList": {
          "description": "Total number of records returned.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderOverride": {
      "properties": {
        "QuantityLimitOverridden": {
          "description": "This flag indicates whether the order line's min/max quantity limits have been overridden. Valid values: 'Y' or 'N'.",
          "type": "string"
        },
        "ValidateItem": {
          "description": "This flag indicates whether item validation is enabled. Valid Values: Y or N. Default: Y",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderRelationship": {
      "properties": {
        "HierarchyLevel": {
          "description": "The depth of this transactional record relative to the root node in the hierarchy.",
          "type": "string"
        },
        "IsDependencyResolved": {
          "description": "This flag may be used to store whether the dependency on the related transactional record is resolved.",
          "type": "string"
        },
        "Operation": {
          "type": "string"
        },
        "RelatedTableKey": {
          "description": "The primary key of the related transactional record.",
          "type": "string"
        },
        "RelatedTableName": {
          "description": "The TableName of the related transactional record.",
          "type": "string"
        },
        "RelationshipType": {
          "description": "The type of relationship between the two transactional records.",
          "type": "string"
        },
        "RootNodeKey": {
          "description": "The primary key of the root transactional record, if this relationship is part of a hierarchy. This column may be used to store the common ancestor in the hierarchy.",
          "type": "string"
        },
        "TableKey": {
          "description": "The primary key of the transactional record for which this relationship is defined",
          "type": "string"
        },
        "TableName": {
          "description": "The TableName of the transactional record for which this relationship is defined.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderRelationships": {
      "properties": {
        "OrderRelationship": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderRelationship"
          },
          "type": "array"
        },
        "Reset": {
          "description": "The Reset flag can be passed as Y to reset all previous transactional relationships and replace them with the new list.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderRelease": {
      "properties": {
        "ReleaseNo": {
          "description": "The release number. Generated as a one up number against that release.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderSearchCondition": {
      "properties": {
        "DocumentType": {
          "description": "Document type of the order to search for.",
          "type": "string"
        },
        "EnterpriseCode": {
          "description": "Enterprise code of the order to search for.",
          "type": "string"
        },
        "EntityAttributeName": {
          "description": "The name of the custom attribute or extended field of the order header entity. If none are found on the order entity, this will be ignored.",
          "type": "string"
        },
        "EntityAttributeValue": {
          "description": "The value of the custom attribute or extended field of the order header entity. If none are found on the order entity, this will be ignored.",
          "type": "string"
        },
        "Operation": {
          "type": "string"
        },
        "OrderNo": {
          "description": "The order number to search for.",
          "type": "string"
        },
        "OrderSearchConditionKey": {
          "description": "The primary key for the YFS_ORDER_SEARCH_CONDITION table.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderSearchConditions": {
      "properties": {
        "OrderSearchCondition": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderSearchCondition"
          },
          "type": "array"
        },
        "Reset": {
          "description": "Determines whether the s should be reset.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderStatus": {
      "properties": {
        "Details": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Details"
        },
        "OrderHeaderKey": {
          "description": "The order header that is associated with this order release status record.",
          "type": "string"
        },
        "OrderLineKey": {
          "description": "The order line that is associated with this order release status record.",
          "type": "string"
        },
        "OrderLineScheduleKey": {
          "description": "The order line schedule that this order release status record is associated with.",
          "type": "string"
        },
        "OrderReleaseKey": {
          "description": "The order release that is associated with this order release status record.",
          "type": "string"
        },
        "OrderReleaseStatusKey": {
          "description": "The primary key for the YFS_ORDER_RELEASE_STATUS table.",
          "type": "string"
        },
        "OrderStatusTranQuantity": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderStatusTranQuantity"
        },
        "PipelineKey": {
          "description": "The pipeline that this release line belongs to.",
          "type": "string"
        },
        "ReceivingNode": {
          "description": "The node that will receive the scheduled order line, if applicable.",
          "type": "string"
        },
        "ShipNode": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ShipNode"
        },
        "Status": {
          "description": "This field indicates the status of the order release.",
          "type": "string"
        },
        "StatusDate": {
          "description": "The date when a positive quantity was moved to this status for the first time.",
          "type": "string"
        },
        "StatusDescription": {
          "description": "Description of the order status.",
          "type": "string"
        },
        "StatusQty": {
          "description": "The quantity currently in this status.",
          "type": "string"
        },
        "StatusReason": {
          "type": "string"
        },
        "TotalQuantity": {
          "description": "The total quantity to ever be moved into this status. If you have a cyclic status (for instance backorder, which can happen multiple times), this column will not provide useful information.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderStatusTranQuantity": {
      "properties": {
        "StatusQty": {
          "description": "Quantity currently in this status.",
          "type": "string"
        },
        "TotalQuantity": {
          "description": "Total quantity has ever been moved into this status.\n\t\t\t\t\t\t\t\tIf there is a cyclic status (for example, backorder which can\n\t\t\t\t\t\t\t\thappen multiple times), this column does not provide useful\n\t\t\t\t\t\t\t\tinformation.",
          "type": "string"
        },
        "TransactionalUOM": {
          "description": "UOM on which all the transactional quantities are\n\t\t\t\t\t\t\t\tspecified.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderStatuses": {
      "properties": {
        "OrderStatus": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderStatus"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderTag": {
      "properties": {
        "TagId": {
          "description": "Tag identifier.",
          "type": "string"
        },
        "TagType": {
          "description": "It indicates the purpose of a tag such as compatibility, client version which created the order, or it can contain any other configurable tag type.  If tag type is Y.COMPATABILITY, then corresponding TagId will be available for pipeline condition building as VersionTag attribute.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OrderTags": {
      "properties": {
        "OrderTag": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderTag"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OverallChargeTotal": {
      "properties": {
        "ChargeCategory": {
          "description": "The charge category for the .",
          "type": "string"
        },
        "ChargeName": {
          "description": "The charge name for the .",
          "type": "string"
        },
        "GrandCharges": {
          "description": "The total charges on the order for the\n\t\t\t\t\t\t\t -  combination.",
          "type": "string"
        },
        "GrandDiscount": {
          "description": "The total discounts on the order for the\n\t\t\t\t\t\t\t -  combination.",
          "type": "string"
        },
        "IsBillable": {
          "description": "Indicates if a charge is billable to the customer.",
          "type": "string"
        },
        "IsDiscount": {
          "description": "Indicates if a charge category is a discount category.",
          "type": "string"
        },
        "IsManual": {
          "description": "Determines whether the charge was manually created or created\n\t\t\t\t\t\t\tautomatically through pricing engine.",
          "type": "string"
        },
        "IsRefundable": {
          "description": "Indicates if a charge is refundable during returns.",
          "type": "string"
        },
        "IsShippingCharge": {
          "description": "Determines whether the charge is a shipping charge. This attribute value is system defined and cannot be overridden. The value for this attribute is set as  only for Charge Name configured as  in financial rule. For all other Charges this attribute is set to .",
          "type": "string"
        },
        "Reference": {
          "description": "Reference information about this charge.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OverallChargeTotals": {
      "properties": {
        "OverallChargeTotal": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OverallChargeTotal"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OverallTotals": {
      "properties": {
        "AdditionalLinePriceTotal": {
          "description": "Total Price for all Non-Informational and Non-Recurring Additional\n\t\t\t\t\tLine Prices for the Order.",
          "type": "string"
        },
        "GrandCharges": {
          "type": "string"
        },
        "GrandDiscount": {
          "type": "string"
        },
        "GrandShippingBaseCharge": {
          "description": "The amount that will be charged for shipping without discounts or charges for the entire order.",
          "type": "string"
        },
        "GrandShippingCharges": {
          "description": "The total of charges associated with shipping for the entire order.",
          "type": "string"
        },
        "GrandShippingDiscount": {
          "description": "The total of discounts associated with shipping for the entire order.",
          "type": "string"
        },
        "GrandShippingTotal": {
          "description": "The total amount for shipping the line including shipping discounts and charges for the entire order.",
          "type": "string"
        },
        "GrandTax": {
          "type": "string"
        },
        "GrandTotal": {
          "description": "The grand total for the order. Includes all line charges and taxes.",
          "type": "string"
        },
        "HdrCharges": {
          "type": "string"
        },
        "HdrDiscount": {
          "type": "string"
        },
        "HdrShippingBaseCharge": {
          "description": "The amount that will be charged for shipping without discounts or charges for the order header only.",
          "type": "string"
        },
        "HdrShippingCharges": {
          "description": "The total of charges associated with shipping for the order header only.",
          "type": "string"
        },
        "HdrShippingDiscount": {
          "description": "The total of discounts associated with shipping for the order header only.",
          "type": "string"
        },
        "HdrShippingTotal": {
          "description": "The total amount for shipping the line including shipping discounts and charges for the order header only.",
          "type": "string"
        },
        "HdrTax": {
          "type": "string"
        },
        "HdrTotal": {
          "type": "string"
        },
        "LineSubTotal": {
          "type": "string"
        },
        "ManualDiscountPercentage": {
          "type": "string"
        },
        "OverallChargeTotals": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OverallChargeTotals"
        },
        "PercentProfitMargin": {
          "type": "string"
        },
        "RecurringAdditionalLinePriceTotal": {
          "description": "Total Price for all Non-Informational and Recurring Additional\n\t\t\t\t\tLine Prices for the Order.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OverallTotalsInEnterpriseCurrency": {
      "properties": {
        "AdditionalLinePriceTotal": {
          "description": "Total Price for all Non-Informational and Non-Recurring Additional\n\t\t\t\t\tLine Prices for the Order.",
          "type": "string"
        },
        "GrandCharges": {
          "type": "string"
        },
        "GrandDiscount": {
          "type": "string"
        },
        "GrandTax": {
          "type": "string"
        },
        "GrandTotal": {
          "type": "string"
        },
        "HdrCharges": {
          "type": "string"
        },
        "HdrDiscount": {
          "type": "string"
        },
        "HdrTax": {
          "type": "string"
        },
        "HdrTotal": {
          "type": "string"
        },
        "LineSubTotal": {
          "type": "string"
        },
        "RecurringAdditionalLinePriceTotal": {
          "description": "Total Price for all Non-Informational and Recurring Additional\n\t\t\t\t\tLine Prices for the Order.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.OwnerUser": {
      "properties": {
        "Activateflag": {
          "description": "This flag indicates whether a user is active.",
          "type": "string"
        },
        "BillingaddressKey": {
          "description": "The billing address.",
          "type": "string"
        },
        "BusinessKey": {
          "description": "The business associated with this user. Identifies a ship node when filled.",
          "type": "string"
        },
        "ContactPersonInfo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ContactPersonInfo"
        },
        "ContactaddressKey": {
          "description": "The contact address.",
          "type": "string"
        },
        "CreatorOrganizationKey": {
          "description": "The organization that created the user.",
          "type": "string"
        },
        "DataSecurityGroupId": {
          "description": "Data Security Group Id.",
          "type": "string"
        },
        "DepartmentCode": {
          "type": "string"
        },
        "DisplayUserID": {
          "description": "Indicates Display User's ID which is used for login in to the system.",
          "type": "string"
        },
        "EnterpriseCode": {
          "description": "The Customer Master Organization Code of the User's Organization.",
          "type": "string"
        },
        "Imagefile": {
          "description": "The image associated with a user.",
          "type": "string"
        },
        "IsCustomer": {
          "description": "Flag to indicate if the user is a valid customer.",
          "type": "string"
        },
        "Localecode": {
          "description": "The locale of a user.",
          "type": "string"
        },
        "LoginStatus": {
          "type": "string"
        },
        "Loginid": {
          "description": "The login ID for the user.",
          "type": "string"
        },
        "Longdesc": {
          "description": "The long description for the user.",
          "type": "string"
        },
        "MenuId": {
          "description": "The menu ID associated with the user. This is used to display the menus in various applications to which this user has access.",
          "type": "string"
        },
        "NoteKey": {
          "description": "A generic note for the user.",
          "type": "string"
        },
        "OrganizationKey": {
          "description": "The organization to which a user belongs.",
          "type": "string"
        },
        "ParentUserKey": {
          "description": "The parent user associated with this user. May be used to capture reporting hierarchy. A user has only one parent but may have many children.",
          "type": "string"
        },
        "PasswordPolicyId": {
          "description": "The Id of the Password Policy a user has been assigned to.",
          "type": "string"
        },
        "PreferenceKey": {
          "description": "Not used.",
          "type": "string"
        },
        "Pwdlastchangedon": {
          "description": "The last date on which the user's password was changed.",
          "type": "string"
        },
        "Salt": {
          "description": "Random characters used for password encryption. Regenerated when the password changes.",
          "type": "string"
        },
        "UserKey": {
          "description": "The primary key for the YFS_USER table.",
          "type": "string"
        },
        "UsergroupKey": {
          "description": "The user group associated with this user.",
          "type": "string"
        },
        "Username": {
          "description": "The name of the user.",
          "type": "string"
        },
        "Usertype": {
          "description": "This field indicates the user type.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ParentLine": {
      "properties": {
        "OrderLineKey": {
          "description": "Order line key of the associated product line.",
          "type": "string"
        },
        "PrimeLineNo": {
          "description": "Prime line number of the associated product line.",
          "type": "string"
        },
        "SubLineNo": {
          "description": "Sub line number of the associated product line.",
          "type": "string"
        },
        "TransactionalLineId": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ParentOrderLineRelationships": {
      "properties": {
        "OrderLineRelationship": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLineRelationship"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PaymentDetails": {
      "properties": {
        "AsyncRequestIdentifier": {
          "type": "string"
        },
        "AuditTransactionId": {
          "type": "string"
        },
        "AuthAvs": {
          "description": "The AVS authorization code.",
          "type": "string"
        },
        "AuthCode": {
          "description": "The authorization code.",
          "type": "string"
        },
        "AuthReturnCode": {
          "description": "The authorization return code.",
          "type": "string"
        },
        "AuthReturnFlag": {
          "description": "The authorization return flag.",
          "type": "string"
        },
        "AuthReturnMessage": {
          "description": "The authorization return message.",
          "type": "string"
        },
        "AuthTime": {
          "description": "The authorization time.",
          "type": "string"
        },
        "AuthorizationExpirationDate": {
          "description": "The date and time until which the authorization specified by the authorization ID is applicable.",
          "type": "string"
        },
        "AuthorizationID": {
          "description": "For authorization requests, this field holds the identifier of the authorization that was made. For charge requests, this field holds the authroization ID to be used for charging the amount.",
          "type": "string"
        },
        "CVVAuthCode": {
          "description": "The CVV authorization code.",
          "type": "string"
        },
        "CallForAuthorizationStatus": {
          "description": "This column indicates the transaction is valid for a call for authorization and whether or not the authorization code was acquired.",
          "type": "string"
        },
        "CashBackAmount": {
          "description": "The amount of cashback that has been charged using this transaction. Only valid for transactions of ChargeType CHARGE.",
          "type": "string"
        },
        "ChargeType": {
          "type": "string"
        },
        "CollectionDate": {
          "type": "string"
        },
        "HoldAgainstBook": {
          "type": "string"
        },
        "InPerson": {
          "type": "string"
        },
        "InternalReturnCode": {
          "description": "The internal return code.",
          "type": "string"
        },
        "InternalReturnFlag": {
          "description": "The internal return flag.",
          "type": "string"
        },
        "InternalReturnMessage": {
          "description": "The internal return message.",
          "type": "string"
        },
        "OfflineStatus": {
          "type": "string"
        },
        "PaymentEntryType": {
          "type": "string"
        },
        "ProcessedAmount": {
          "type": "string"
        },
        "Reference1": {
          "description": "The reference 1.",
          "type": "string"
        },
        "Reference2": {
          "description": "The reference 2.",
          "type": "string"
        },
        "RequestAmount": {
          "type": "string"
        },
        "RequestId": {
          "description": "The request identifier returned by the transaction.",
          "type": "string"
        },
        "RequestProcessed": {
          "type": "string"
        },
        "TranRequestTime": {
          "description": "The time at which the transaction request was made.",
          "type": "string"
        },
        "TranReturnCode": {
          "description": "The return code for the transaction.",
          "type": "string"
        },
        "TranReturnFlag": {
          "description": "The flag returned by the transaction.",
          "type": "string"
        },
        "TranReturnMessage": {
          "description": "The message returned by the transaction.",
          "type": "string"
        },
        "TranType": {
          "description": "The transaction type.",
          "type": "string"
        },
        "VoidTransaction": {
          "description": "This flag indicates that the Charge Transaction is either a Void request or submitted for a Void operation.  Valid values for a Void Charge Transaction are V (is a void request), R (is a forced refund request), C (closed error record, already recreated) and null. Valid value for a Charge Transaction that has been requested for Void operation is S (void submitted for this transaction).",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PaymentDetailsList": {
      "properties": {
        "PaymentDetails": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PaymentDetails"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PaymentMethod": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "AllowPaymentMethodInfoOverride": {
          "type": "string"
        },
        "AwaitingAuthInterfaceAmount": {
          "description": "The total authorization amount that has not been\n\t\t\t\t\t\t\t\tsent to the payment processing system for processing yet.",
          "type": "string"
        },
        "AwaitingChargeInterfaceAmount": {
          "description": "The total charge amount that has not been sent to\n\t\t\t\t\t\t\t\tthe payment\n\t\t\t\t\t\t\t\tprocessing system for processing yet.",
          "type": "string"
        },
        "BillToKey": {
          "description": "The bill to address that is associated with this payment. Can be passed if different from the bill to address on the order.",
          "type": "string"
        },
        "CashBackAmount": {
          "description": "The amount that is given back as cash for this payment method. This is not supported on a return order.",
          "type": "string"
        },
        "ChargeSequence": {
          "description": "The sequence in which the payment method is to be used for charging.",
          "type": "string"
        },
        "CheckNo": {
          "description": "The cheque number.",
          "type": "string"
        },
        "CheckReference": {
          "description": "The cheque reference.",
          "type": "string"
        },
        "CreditCardExpDate": {
          "description": "The expiration date for the credit card.",
          "type": "string"
        },
        "CreditCardName": {
          "description": "The credit card name.",
          "type": "string"
        },
        "CreditCardNo": {
          "description": "The primary account number for payment methods that are defined under the PaymentTypeGroup CREDIT_CARD; payment methods of this group will be considered incomplete if this is not passed.",
          "type": "string"
        },
        "CreditCardType": {
          "description": "The credit card type group.",
          "type": "string"
        },
        "CustomerAccountNo": {
          "description": "The primary account number for payment methods that are defined under the PaymentTypeGroup CUSTOMER_ACCOUNT; payment methods of this group will be considered incomplete if this is not passed.",
          "type": "string"
        },
        "CustomerPONo": {
          "description": "The customer PO account number.",
          "type": "string"
        },
        "DebitCardNo": {
          "description": "The primary account number for payment methods that are defined under the PaymentTypeGroup DEBIT_CARD; payment methods of this group will be considered incomplete if this is not passed.",
          "type": "string"
        },
        "DisplayCreditCardNo": {
          "description": "The four digits of the credit card number that should be displayed.  If not passed, it is defaulted to be the last four digits of the credit card number.",
          "type": "string"
        },
        "DisplayCustomerAccountNo": {
          "description": "The four digits of the customer account number that should be displayed.  If not passed, it is defaulted to be the last four digits of the customer account number.",
          "type": "string"
        },
        "DisplayDebitCardNo": {
          "description": "The four digits of the debit card number that should be displayed.  If not passed, it is defaulted to be the last four digits of the debit card number.",
          "type": "string"
        },
        "DisplayPaymentReference1": {
          "description": "The four digits of the payment reference 1 that should be displayed.  If not passed, it is defaulted to be the last four digits of the payment reference 1.",
          "type": "string"
        },
        "DisplayPrimaryAccountNo": {
          "description": "The appropriate display value of the primary\n\t\t\t\t\t\t\t\tidentifier of this PaymentType, depending upon the\n\t\t\t\t\t\t\t\tPaymentTypeGroup.",
          "type": "string"
        },
        "DisplaySvcNo": {
          "description": "The four digits of the stored value card that should be displayed.  If not passed, it is defaulted to be the last four digits of the stored value card number.",
          "type": "string"
        },
        "EntryType": {
          "type": "string"
        },
        "FirstName": {
          "description": "The first name of the credit card holder.",
          "type": "string"
        },
        "FundsAvailable": {
          "type": "string"
        },
        "GetFundsAvailableUserExitInvoked": {
          "type": "string"
        },
        "IncompletePaymentType": {
          "description": "This flag indicates whether the payment type is incomplete.",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the credit card holder.",
          "type": "string"
        },
        "MaxChargeLimit": {
          "description": "The maximum amount that can be charged on this payment method. However, if UnlimitedCharges=Y, this amount will not be considered.",
          "type": "string"
        },
        "MiddleName": {
          "description": "The middle name of the credit card holder.",
          "type": "string"
        },
        "PaymentDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PaymentDetails"
        },
        "PaymentDetailsList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PaymentDetailsList"
        },
        "PaymentKey": {
          "description": "The primary key for the YFS_PAYMENT table.",
          "type": "string"
        },
        "PaymentReference1": {
          "description": "The payment reference 1. Additionally, this is the primary account number for payment methods that are defined under the PaymentTypeGroup OTHER; payment methods of this group will be considered incomplete if this is not passed.",
          "type": "string"
        },
        "PaymentReference2": {
          "description": "The payment reference 2.",
          "type": "string"
        },
        "PaymentReference3": {
          "description": "The payment reference 3.",
          "type": "string"
        },
        "PaymentReference4": {
          "description": "The payment reference 4. This does not identify the payment method uniquely.",
          "type": "string"
        },
        "PaymentReference5": {
          "description": "The payment reference 5. This does not identify the payment method uniquely.",
          "type": "string"
        },
        "PaymentReference6": {
          "description": "The payment reference 6. This does not identify the payment method uniquely.",
          "type": "string"
        },
        "PaymentReference7": {
          "description": "The payment reference 7. This does not identify the payment method uniquely.",
          "type": "string"
        },
        "PaymentReference8": {
          "description": "The payment reference 8. This does not identify the payment method uniquely.",
          "type": "string"
        },
        "PaymentReference9": {
          "description": "The payment reference 9. This does not identify the payment method uniquely.",
          "type": "string"
        },
        "PaymentTemplateType": {
          "description": "This field indicates User Interfaces to use the template required to capture Payment Methods of this Payment Type.",
          "type": "string"
        },
        "PaymentType": {
          "description": "The payment type of this payment method.",
          "type": "string"
        },
        "PaymentTypeGroup": {
          "description": "This filed indicates the payment type group, which will determine behavior.",
          "type": "string"
        },
        "PersonInfoBillTo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PersonInfoBillTo"
        },
        "PlannedRefundAmount": {
          "description": "The amount that will be refunded on this payment method. This field is set for only Return Orders indicating the refund amount.",
          "type": "string"
        },
        "PrimaryAccountNo": {
          "description": "The appropriate primary identifier of this\n\t\t\t\t\t\t\t\tPaymentType, depending upon the PaymentTypeGroup.",
          "type": "string"
        },
        "ReducePendingAsyncronousAmounts": {
          "type": "string"
        },
        "RequestedAuthAmount": {
          "description": "The total amount of authorizations sent to an\n\t\t\t\t\t\t\t\texternal\n\t\t\t\t\t\t\t\tsystem and still\n\t\t\t\t\t\t\t\tawaiting response on this payment\n\t\t\t\t\t\t\t\tmethod.",
          "type": "string"
        },
        "RequestedChargeAmount": {
          "description": "The total amount of charges sent to an external\n\t\t\t\t\t\t\t\tsystem and still\n\t\t\t\t\t\t\t\tawaiting response on this payment method.",
          "type": "string"
        },
        "RequestedRefundAmount": {
          "description": "The total amount of refunds sent to an external\n\t\t\t\t\t\t\t\tsystem and still\n\t\t\t\t\t\t\t\tawaiting response on this payment method. This\n\t\t\t\t\t\t\t\tnumber will be\n\t\t\t\t\t\t\t\tpositive. This total will no longer be included in\n\t\t\t\t\t\t\t\tthe\n\t\t\t\t\t\t\t\tRequestedChargeAmount, but if an asynchronous refund is\n\t\t\t\t\t\t\t\tsubmitted\n\t\t\t\t\t\t\t\tin excess of this amount, the RequestedChargeAmount\n\t\t\t\t\t\t\t\twill\n\t\t\t\t\t\t\t\tbe\n\t\t\t\t\t\t\t\treduced for backwards compatibility.",
          "type": "string"
        },
        "SuspendAnyMoreCharges": {
          "description": "Sets whether or not this payment method has been suspended. If the value is Y, then the PaymentMethod is suspended for charging, although refunds can still be made to this PaymentMethod. All open AUTHORIZATION and CHARGE records for positive amounts for this payment method are closed.  If the value is B then both charge and refund are suspended and all open AUTHORIZATION or CHARGE records are closed.  Default: N.  Valid Values: Y, B, or N",
          "type": "string"
        },
        "SvcNo": {
          "description": "The primary account number for payment methods that are defined under the PaymentTypeGroup STORED_VALUE_CARD; payment methods of this group will be considered incomplete if this is not passed.",
          "type": "string"
        },
        "TotalAltRefundedAmount": {
          "description": "The amount that has been refunded to a new payment method based on this payment's payment type refund preferences.",
          "type": "string"
        },
        "TotalAuthorized": {
          "description": "The total amount auhorized on this payment method.",
          "type": "string"
        },
        "TotalCharged": {
          "description": "The total amount charged on this payment method.",
          "type": "string"
        },
        "TotalRefundedAmount": {
          "description": "The total refunded amount on this payment method.",
          "type": "string"
        },
        "UnlimitedCharges": {
          "description": "Indicates if there is a limit to the amount that can be charged on the payment method. If not passed, defaults to Y.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PaymentMethods": {
      "properties": {
        "PaymentMethod": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PaymentMethod"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PaymentTransactionError": {
      "properties": {
        "ChargeTransactionKey": {
          "description": "The primary key for the YFS_CHARGE_TRANSACTION table.",
          "type": "string"
        },
        "Message": {
          "description": "The error message main body.",
          "type": "string"
        },
        "MessageType": {
          "description": "The type that the error message is assocated to.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PaymentTransactionErrorList": {
      "properties": {
        "PaymentTransactionError": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PaymentTransactionError"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PendingChanges": {
      "properties": {
        "ApplyPendingChanges": {
          "description": "This flag indicates that the pending changes on the order should be permanently applied to the order.",
          "type": "string"
        },
        "IgnorePendingChanges": {
          "description": "This flag indicates that the pending changes on the order will be ingored while performing current changes.",
          "type": "string"
        },
        "RecordPendingChanges": {
          "description": "This flag indicates that the change on the order should be treated as a pending change.",
          "type": "string"
        },
        "ResetPendingChanges": {
          "description": "This flag indicates that the pending changes on the order should be removed.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PersonInfo": {
      "properties": {
        "AddressID": {
          "description": "A user specified label for an address.",
          "type": "string"
        },
        "AddressLine1": {
          "description": "The address line 1 field.",
          "type": "string"
        },
        "AddressLine2": {
          "description": "The address line 2 field.",
          "type": "string"
        },
        "AddressLine3": {
          "description": "The address line 3 field.",
          "type": "string"
        },
        "AddressLine4": {
          "description": "The address line 4 field.",
          "type": "string"
        },
        "AddressLine5": {
          "description": "The address line 5 field.",
          "type": "string"
        },
        "AddressLine6": {
          "description": "The address line 6 field.",
          "type": "string"
        },
        "AddressType": {
          "description": "Identifies the type of address. Part of unique key",
          "type": "string"
        },
        "AlternateEmailID": {
          "description": "The alternate email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "Beeper": {
          "description": "The beeper number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "City": {
          "description": "The city in the address.",
          "type": "string"
        },
        "Company": {
          "description": "The company this person is associated with.",
          "type": "string"
        },
        "Country": {
          "description": "The country in the address.",
          "type": "string"
        },
        "DayFaxNo": {
          "description": "The day time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "DayPhone": {
          "description": "The day time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "Department": {
          "description": "The primary department in charge of procurement.",
          "type": "string"
        },
        "EMailID": {
          "description": "The email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "EveningFaxNo": {
          "description": "The evening time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "EveningPhone": {
          "description": "The evening time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "FirstName": {
          "description": "The first name of the person.",
          "type": "string"
        },
        "IsAddressVerified": {
          "description": "This flag indicates whether or not the address in this record has been verified by an address verification program. Intended for future use.",
          "type": "string"
        },
        "IsCommercialAddress": {
          "description": "Indicates whether the address is commercial, residential or none. Values of this field can be Y -Commercial address.N - Residential address. undefined for Null.",
          "type": "string"
        },
        "JobTitle": {
          "description": "The job title of the person.",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the person.",
          "type": "string"
        },
        "Latitude": {
          "description": "The latitude of this location.",
          "type": "string"
        },
        "Longitude": {
          "description": "The longitude of this location.",
          "type": "string"
        },
        "MiddleName": {
          "description": "The middle name of the person.",
          "type": "string"
        },
        "MobilePhone": {
          "description": "The mobile phone at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "OtherPhone": {
          "description": "The alternate phone number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "PersonID": {
          "description": "The unique identifier for a person.",
          "type": "string"
        },
        "PersonInfoKey": {
          "description": "The primary key for the YFS_PERSON_INFO table.",
          "type": "string"
        },
        "State": {
          "description": "The state in the address.",
          "type": "string"
        },
        "Suffix": {
          "description": "The suffix for a person, such as Jr., or Sr.",
          "type": "string"
        },
        "TaxGeoCode": {
          "description": "The tax geo code for this location. Intended for future use.",
          "type": "string"
        },
        "Title": {
          "description": "The title for the person such as Ms., Mr., or Dr..",
          "type": "string"
        },
        "ZipCode": {
          "description": "The zip code in the address.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PersonInfoBillTo": {
      "properties": {
        "AddressID": {
          "description": "A user specified label for an address.",
          "type": "string"
        },
        "AddressLine1": {
          "description": "The address line 1 field.",
          "type": "string"
        },
        "AddressLine2": {
          "description": "The address line 2 field.",
          "type": "string"
        },
        "AddressLine3": {
          "description": "The address line 3 field.",
          "type": "string"
        },
        "AddressLine4": {
          "description": "The address line 4 field.",
          "type": "string"
        },
        "AddressLine5": {
          "description": "The address line 5 field.",
          "type": "string"
        },
        "AddressLine6": {
          "description": "The address line 6 field.",
          "type": "string"
        },
        "AlternateEmailID": {
          "description": "The alternate email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "Beeper": {
          "description": "The beeper number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "City": {
          "description": "The city in the address.",
          "type": "string"
        },
        "Company": {
          "description": "The company this person is associated with.",
          "type": "string"
        },
        "Country": {
          "description": "The country in the address.",
          "type": "string"
        },
        "DayFaxNo": {
          "description": "The day time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "DayPhone": {
          "description": "The day time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "Department": {
          "description": "The primary department in charge of procurement.",
          "type": "string"
        },
        "EMailID": {
          "description": "The email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "EveningFaxNo": {
          "description": "The evening time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "EveningPhone": {
          "description": "The evening time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "FirstName": {
          "description": "The first name of the person.",
          "type": "string"
        },
        "IsAddressVerified": {
          "description": "This flag indicates whether or not the address in this record has been verified by an address verification program. Intended for future use.",
          "type": "string"
        },
        "IsCommercialAddress": {
          "description": "Indicates whether the address is commercial, residential or none. Values of this field can be Y -Commercial address.N - Residential address. undefined for Null.",
          "type": "string"
        },
        "JobTitle": {
          "description": "The job title of the person.",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the person.",
          "type": "string"
        },
        "Latitude": {
          "description": "The latitude of this location.",
          "type": "string"
        },
        "Longitude": {
          "description": "The longitude of this location.",
          "type": "string"
        },
        "MiddleName": {
          "description": "The middle name of the person.",
          "type": "string"
        },
        "MobilePhone": {
          "description": "The mobile phone at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "OtherPhone": {
          "description": "The alternate phone number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "PersonID": {
          "description": "The unique identifier for a person.",
          "type": "string"
        },
        "PersonInfoKey": {
          "description": "The primary key for the YFS_PERSON_INFO table.",
          "type": "string"
        },
        "State": {
          "description": "The state in the address.",
          "type": "string"
        },
        "Suffix": {
          "description": "The suffix for a person, such as Jr., or Sr.",
          "type": "string"
        },
        "TaxGeoCode": {
          "description": "The tax geo code for this location. Intended for future use.",
          "type": "string"
        },
        "Title": {
          "description": "The title for the person such as Ms., Mr., or Dr..",
          "type": "string"
        },
        "ZipCode": {
          "description": "The zip code in the address.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PersonInfoContact": {
      "properties": {
        "AddressID": {
          "description": "A user specified label for an address.",
          "type": "string"
        },
        "AddressLine1": {
          "description": "The address line 1 field.",
          "type": "string"
        },
        "AddressLine2": {
          "description": "The address line 2 field.",
          "type": "string"
        },
        "AddressLine3": {
          "description": "The address line 3 field.",
          "type": "string"
        },
        "AddressLine4": {
          "description": "The address line 4 field.",
          "type": "string"
        },
        "AddressLine5": {
          "description": "The address line 5 field.",
          "type": "string"
        },
        "AddressLine6": {
          "description": "The address line 6 field.",
          "type": "string"
        },
        "AlternateEmailID": {
          "description": "The alternate email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "Beeper": {
          "description": "The beeper number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "City": {
          "description": "The city in the address.",
          "type": "string"
        },
        "Company": {
          "description": "The company this person is associated with.",
          "type": "string"
        },
        "Country": {
          "description": "The country in the address.",
          "type": "string"
        },
        "DayFaxNo": {
          "description": "The day time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "DayPhone": {
          "description": "The day time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "Department": {
          "description": "The primary department in charge of procurement.",
          "type": "string"
        },
        "EMailID": {
          "description": "The email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "EveningFaxNo": {
          "description": "The evening time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "EveningPhone": {
          "description": "The evening time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "FirstName": {
          "description": "The first name of the person.",
          "type": "string"
        },
        "IsAddressVerified": {
          "description": "This flag indicates whether or not the address in this record has been verified by an address verification program. Intended for future use.",
          "type": "string"
        },
        "IsCommercialAddress": {
          "description": "Indicates whether the address is commercial, residential or none. Values of this field can be Y -Commercial address.N - Residential address. undefined for Null.",
          "type": "string"
        },
        "JobTitle": {
          "description": "The job title of the person.",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the person.",
          "type": "string"
        },
        "Latitude": {
          "description": "The latitude of this location.",
          "type": "string"
        },
        "Longitude": {
          "description": "The longitude of this location.",
          "type": "string"
        },
        "MiddleName": {
          "description": "The middle name of the person.",
          "type": "string"
        },
        "MobilePhone": {
          "description": "The mobile phone at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "OtherPhone": {
          "description": "The alternate phone number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "PersonID": {
          "description": "The unique identifier for a person.",
          "type": "string"
        },
        "PersonInfoKey": {
          "description": "The primary key for the YFS_PERSON_INFO table.",
          "type": "string"
        },
        "State": {
          "description": "The state in the address.",
          "type": "string"
        },
        "Suffix": {
          "description": "The suffix for a person, such as Jr., or Sr.",
          "type": "string"
        },
        "TaxGeoCode": {
          "description": "The tax geo code for this location. Intended for future use.",
          "type": "string"
        },
        "Title": {
          "description": "The title for the person such as Ms., Mr., or Dr..",
          "type": "string"
        },
        "ZipCode": {
          "description": "The zip code in the address.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PersonInfoMarkFor": {
      "properties": {
        "AddressID": {
          "description": "A user specified label for an address.",
          "type": "string"
        },
        "AddressLine1": {
          "description": "The address line 1 field.",
          "type": "string"
        },
        "AddressLine2": {
          "description": "The address line 2 field.",
          "type": "string"
        },
        "AddressLine3": {
          "description": "The address line 3 field.",
          "type": "string"
        },
        "AddressLine4": {
          "description": "The address line 4 field.",
          "type": "string"
        },
        "AddressLine5": {
          "description": "The address line 5 field.",
          "type": "string"
        },
        "AddressLine6": {
          "description": "The address line 6 field.",
          "type": "string"
        },
        "AlternateEmailID": {
          "description": "The alternate email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "Beeper": {
          "description": "The beeper number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "City": {
          "description": "The city in the address.",
          "type": "string"
        },
        "Company": {
          "description": "The company this person is associated with.",
          "type": "string"
        },
        "Country": {
          "description": "The country in the address.",
          "type": "string"
        },
        "DayFaxNo": {
          "description": "The day time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "DayPhone": {
          "description": "The day time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "Department": {
          "description": "The primary department in charge of procurement.",
          "type": "string"
        },
        "EMailID": {
          "description": "The email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "EveningFaxNo": {
          "description": "The evening time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "EveningPhone": {
          "description": "The evening time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "FirstName": {
          "description": "The first name of the person.",
          "type": "string"
        },
        "IsAddressVerified": {
          "description": "This flag indicates whether or not the address in this record has been verified by an address verification program. Intended for future use.",
          "type": "string"
        },
        "IsCommercialAddress": {
          "description": "Indicates whether the address is commercial, residential or none. Values of this field can be Y -Commercial address.N - Residential address. undefined for Null.",
          "type": "string"
        },
        "JobTitle": {
          "description": "The job title of the person.",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the person.",
          "type": "string"
        },
        "Latitude": {
          "description": "The latitude of this location.",
          "type": "string"
        },
        "Longitude": {
          "description": "The longitude of this location.",
          "type": "string"
        },
        "MiddleName": {
          "description": "The middle name of the person.",
          "type": "string"
        },
        "MobilePhone": {
          "description": "The mobile phone at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "OtherPhone": {
          "description": "The alternate phone number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "PersonID": {
          "description": "The unique identifier for a person.",
          "type": "string"
        },
        "PersonInfoKey": {
          "description": "The primary key for the YFS_PERSON_INFO table.",
          "type": "string"
        },
        "State": {
          "description": "The state in the address.",
          "type": "string"
        },
        "Suffix": {
          "description": "The suffix for a person, such as Jr., or Sr.",
          "type": "string"
        },
        "TaxGeoCode": {
          "description": "The tax geo code for this location. Intended for future use.",
          "type": "string"
        },
        "Title": {
          "description": "The title for the person such as Ms., Mr., or Dr..",
          "type": "string"
        },
        "ZipCode": {
          "description": "The zip code in the address.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PersonInfoShipTo": {
      "properties": {
        "AddressID": {
          "description": "A user specified label for an address.",
          "type": "string"
        },
        "AddressLine1": {
          "description": "The address line 1 field.",
          "type": "string"
        },
        "AddressLine2": {
          "description": "The address line 2 field.",
          "type": "string"
        },
        "AddressLine3": {
          "description": "The address line 3 field.",
          "type": "string"
        },
        "AddressLine4": {
          "description": "The address line 4 field.",
          "type": "string"
        },
        "AddressLine5": {
          "description": "The address line 5 field.",
          "type": "string"
        },
        "AddressLine6": {
          "description": "The address line 6 field.",
          "type": "string"
        },
        "AlternateEmailID": {
          "description": "The alternate email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "Beeper": {
          "description": "The beeper number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "City": {
          "description": "The city in the address.",
          "type": "string"
        },
        "Company": {
          "description": "The company this person is associated with.",
          "type": "string"
        },
        "Country": {
          "description": "The country in the address.",
          "type": "string"
        },
        "DayFaxNo": {
          "description": "The day time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "DayPhone": {
          "description": "The day time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "Department": {
          "description": "The primary department in charge of procurement.",
          "type": "string"
        },
        "EMailID": {
          "description": "The email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "EveningFaxNo": {
          "description": "The evening time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "EveningPhone": {
          "description": "The evening time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "FirstName": {
          "description": "The first name of the person.",
          "type": "string"
        },
        "IsAddressVerified": {
          "description": "This flag indicates whether or not the address in this record has been verified by an address verification program. Intended for future use.",
          "type": "string"
        },
        "IsCommercialAddress": {
          "description": "Indicates whether the address is commercial, residential or none. Values of this field can be Y -Commercial address.N - Residential address. undefined for Null.",
          "type": "string"
        },
        "JobTitle": {
          "description": "The job title of the person.",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the person.",
          "type": "string"
        },
        "Latitude": {
          "description": "The latitude of this location.",
          "type": "string"
        },
        "Longitude": {
          "description": "The longitude of this location.",
          "type": "string"
        },
        "MiddleName": {
          "description": "The middle name of the person.",
          "type": "string"
        },
        "MobilePhone": {
          "description": "The mobile phone at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "OtherPhone": {
          "description": "The alternate phone number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "PersonID": {
          "description": "The unique identifier for a person.",
          "type": "string"
        },
        "PersonInfoKey": {
          "description": "The primary key for the YFS_PERSON_INFO table.",
          "type": "string"
        },
        "State": {
          "description": "The state in the address.",
          "type": "string"
        },
        "Suffix": {
          "description": "The suffix for a person, such as Jr., or Sr.",
          "type": "string"
        },
        "TaxGeoCode": {
          "description": "The tax geo code for this location. Intended for future use.",
          "type": "string"
        },
        "Title": {
          "description": "The title for the person such as Ms., Mr., or Dr..",
          "type": "string"
        },
        "ZipCode": {
          "description": "The zip code in the address.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PersonInfoSoldTo": {
      "properties": {
        "AddressID": {
          "description": "A user specified label for an address.",
          "type": "string"
        },
        "AddressLine1": {
          "description": "The address line 1 field.",
          "type": "string"
        },
        "AddressLine2": {
          "description": "The address line 2 field.",
          "type": "string"
        },
        "AddressLine3": {
          "description": "The address line 3 field.",
          "type": "string"
        },
        "AddressLine4": {
          "description": "The address line 4 field.",
          "type": "string"
        },
        "AddressLine5": {
          "description": "The address line 5 field.",
          "type": "string"
        },
        "AddressLine6": {
          "description": "The address line 6 field.",
          "type": "string"
        },
        "AlternateEmailID": {
          "description": "The alternate email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "Beeper": {
          "description": "The beeper number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "City": {
          "description": "The city in the address.",
          "type": "string"
        },
        "Company": {
          "description": "The company this person is associated with.",
          "type": "string"
        },
        "Country": {
          "description": "The country in the address.",
          "type": "string"
        },
        "DayFaxNo": {
          "description": "The day time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "DayPhone": {
          "description": "The day time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "Department": {
          "description": "The primary department in charge of procurement.",
          "type": "string"
        },
        "EMailID": {
          "description": "The email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "EveningFaxNo": {
          "description": "The evening time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "EveningPhone": {
          "description": "The evening time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "FirstName": {
          "description": "The first name of the person.",
          "type": "string"
        },
        "IsAddressVerified": {
          "description": "This flag indicates whether or not the address in this record has been verified by an address verification program. Intended for future use.",
          "type": "string"
        },
        "IsCommercialAddress": {
          "description": "Indicates whether the address is commercial, residential or none. Values of this field can be Y -Commercial address.N - Residential address. undefined for Null.",
          "type": "string"
        },
        "JobTitle": {
          "description": "The job title of the person.",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the person.",
          "type": "string"
        },
        "Latitude": {
          "description": "The latitude of this location.",
          "type": "string"
        },
        "Longitude": {
          "description": "The longitude of this location.",
          "type": "string"
        },
        "MiddleName": {
          "description": "The middle name of the person.",
          "type": "string"
        },
        "MobilePhone": {
          "description": "The mobile phone at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "OtherPhone": {
          "description": "The alternate phone number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "PersonID": {
          "description": "The unique identifier for a person.",
          "type": "string"
        },
        "PersonInfoKey": {
          "description": "The primary key for the YFS_PERSON_INFO table.",
          "type": "string"
        },
        "State": {
          "description": "The state in the address.",
          "type": "string"
        },
        "Suffix": {
          "description": "The suffix for a person, such as Jr., or Sr.",
          "type": "string"
        },
        "TaxGeoCode": {
          "description": "The tax geo code for this location. Intended for future use.",
          "type": "string"
        },
        "Title": {
          "description": "The title for the person such as Ms., Mr., or Dr..",
          "type": "string"
        },
        "ZipCode": {
          "description": "The zip code in the address.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PredecessorOrderApprovalDetails": {
      "properties": {
        "OrderApprovalDetail": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderApprovalDetail"
        },
        "TotalNumberOfRecords": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PredecessorOrderApprovals": {
      "properties": {
        "OrderApproval": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderApproval"
        },
        "TotalNumberOfRecords": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PriceInfo": {
      "properties": {
        "Currency": {
          "description": "The currency code in which this order is being processed. All price fields are assumed to be in this currency.",
          "type": "string"
        },
        "EnterpriseCurrency": {
          "description": "The Enterprise's default currency code.",
          "type": "string"
        },
        "ReportingConversionDate": {
          "description": "The date which was used to determine the conversion rate.",
          "type": "string"
        },
        "ReportingConversionRate": {
          "description": "The conversion rate from the order's original currency to the Enterprise's currency. This is not used internally within the system. This field is provided so that reports can be built in a standard currency for an Enterprise using SQLs.",
          "type": "string"
        },
        "TotalAmount": {
          "description": "The grand total for the order. Includes all line charges and taxes.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PriceInfoInEnterpriseCurrency": {
      "properties": {
        "Currency": {
          "type": "string"
        },
        "EnterpriseCurrency": {
          "type": "string"
        },
        "ReportingConversionDate": {
          "type": "string"
        },
        "ReportingConversionRate": {
          "type": "string"
        },
        "TotalAmount": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PriceTypeSummary": {
      "properties": {
        "PriceTypeName": {
          "description": "The Name of the PriceType.",
          "type": "string"
        },
        "Total": {
          "description": "The Total Price of all non-informational AdditionalLinePrices of this PriceType and RecurringType.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PriceTypeSummaryList": {
      "properties": {
        "PriceTypeSummary": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PriceTypeSummary"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRule": {
      "properties": {
        "ApplyProratedAdjustment": {
          "description": "When enabled adjustment will be distributed to both the target and the qualifiers for combination rules",
          "type": "string"
        },
        "AssociateExclusionCategoryAttributeForTarget": {
          "description": "Indicates whether exclusion target category and attributes are associated or not.",
          "type": "string"
        },
        "AssociateExclusionCategoryAttributeForTrigger": {
          "description": "Indicates whether exclusion trigger category and attributes are associated or not.",
          "type": "string"
        },
        "AssociateInclusionCategoryAttributeForTarget": {
          "description": "Indicates whether inclusion target category and attributes are associated or not.",
          "type": "string"
        },
        "AssociateInclusionCategoryAttributeForTrigger": {
          "description": "Indicates whether inclusion trigger category and attributes are associated or not.",
          "type": "string"
        },
        "CarrierServiceCode": {
          "description": "The carrier service that this rule applies on. Applicable only for shipping category of rules.",
          "type": "string"
        },
        "CommonTriggerQuantity": {
          "description": "Indicates quantity required to trigger rule, which all valid trigger items count towards.",
          "type": "string"
        },
        "CopyTriggerExclusionsToTargetExclusions": {
          "description": "Indicates, Trigger Exclusions are copied to Target Exclusions. Default is Y",
          "type": "string"
        },
        "CopyTriggerInclusionsToTargetInclusions": {
          "description": "Indicates, Trigger Inclusions are copied to Target Inclusions. Default is N",
          "type": "string"
        },
        "Coupon": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Coupon"
        },
        "Currency": {
          "description": "Currency in which this rule is applicable.",
          "type": "string"
        },
        "CustomerRedemptionLimit": {
          "description": "This option limits the number of times that a pricing rule or coupon can be used by a single customer.",
          "type": "string"
        },
        "Description": {
          "description": "Description of the rule.",
          "type": "string"
        },
        "DiscountAllCombinationItems": {
          "description": "If 'Y' all target items that create a combination will be discounted",
          "type": "string"
        },
        "DistributeAdjustment": {
          "description": "Boolean indicating if the rule adjustments should be distributed to lines or not.",
          "type": "string"
        },
        "DistributeAdjustmentAcrossCombo": {
          "description": "If 'Y' the adjustment for the rule will be distributed across the target combinations",
          "type": "string"
        },
        "EnableMixNMatchItems": {
          "description": "If set indicates that the rule is applicable for multiple target items.",
          "type": "string"
        },
        "EndDateActive": {
          "description": "After this date the rule is not active.",
          "type": "string"
        },
        "EndTime": {
          "description": "If not void indicates that the rule is applicable till this time.",
          "type": "string"
        },
        "ExcludedPricingRuleAttributeValueList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ExcludedPricingRuleAttributeValueList"
        },
        "ExcludedPricingRuleCategoryList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ExcludedPricingRuleCategoryList"
        },
        "ExcludedPricingRuleItemList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ExcludedPricingRuleItemList"
        },
        "ExcludedPricingRuleTargetAttributeValueList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ExcludedPricingRuleTargetAttributeValueList"
        },
        "ExcludedPricingRuleTargetCategoryList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ExcludedPricingRuleTargetCategoryList"
        },
        "ExcludedPricingRuleTargetItemList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ExcludedPricingRuleTargetItemList"
        },
        "ExclusivityId": {
          "description": "ExclusivityID is used to group set of Pricing Rules for mutual exclusivity. Exclusivity Type settings are applicable among Pricing Rules having same ExclusvityID",
          "type": "string"
        },
        "ExclusivityType": {
          "description": "Exclusivity Type of the Pricing Rule",
          "type": "string"
        },
        "IgnoreRuleOnManualAdjustment": {
          "description": "Indicates that this rule is not applicable on entire order or lines that have either manual adjustments or manual rule adjustments specified.",
          "type": "string"
        },
        "IgnoreRuleOnPriceLock": {
          "description": "If set indicates that the rule should not be fired if the line item's unit price is locked. The line item can be the target or the rule trigger. Applicable only for rules that are item targeted, like combination and item quantity rules.",
          "type": "string"
        },
        "IncludedPricingRuleAttributeValueList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.IncludedPricingRuleAttributeValueList"
        },
        "IncludedPricingRuleCategoryList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.IncludedPricingRuleCategoryList"
        },
        "IncludedPricingRuleItemList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.IncludedPricingRuleItemList"
        },
        "IncludedPricingRuleTargetAttributeValueList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.IncludedPricingRuleTargetAttributeValueList"
        },
        "IncludedPricingRuleTargetCategoryList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.IncludedPricingRuleTargetCategoryList"
        },
        "IncludedPricingRuleTargetItemList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.IncludedPricingRuleTargetItemList"
        },
        "IsActiveOnFriday": {
          "description": "If set indicates that the rule is applicable on Friday.",
          "type": "string"
        },
        "IsActiveOnMonday": {
          "description": "If set indicates that the rule is applicable on Monday.",
          "type": "string"
        },
        "IsActiveOnSaturday": {
          "description": "If set indicates that the rule is applicable on Saturday.",
          "type": "string"
        },
        "IsActiveOnSunday": {
          "description": "If set indicates that the rule is applicable on Sunday.",
          "type": "string"
        },
        "IsActiveOnThursday": {
          "description": "If set indicates that the rule is applicable on Thursday.",
          "type": "string"
        },
        "IsActiveOnTuesday": {
          "description": "If set indicates that the rule is applicable on Tuesday.",
          "type": "string"
        },
        "IsActiveOnWednesday": {
          "description": "If set indicates that the rule is applicable on Wednesday.",
          "type": "string"
        },
        "IsCouponRule": {
          "description": "Indicates whether this rule is a coupon or not.",
          "type": "string"
        },
        "IsCustomRule": {
          "description": "Indicates whether the rule is custom or not.",
          "type": "string"
        },
        "IsFreeGiftRule": {
          "description": "Indicates whether the rule is a free gift rule or not.",
          "type": "string"
        },
        "IsItemAttributeValueRule": {
          "description": "Indicates that this item targeted rule is defined on item attribute values. Applicable for all types of rules.",
          "type": "string"
        },
        "IsItemRule": {
          "description": "Indicates whether the rule is targeted on items or not.",
          "type": "string"
        },
        "IsManualRule": {
          "description": "Indicates whether this pricing rule is a manually applied adjustment rule or not. A manual pricing rule is suggested by the pricing service based on contents or total of the order, which then again should be specified with the amount of adjustment to be applied against the order.",
          "type": "string"
        },
        "IsNonInstantDiscountRule": {
          "description": "Indicates if the pricing rule is a Non-Instant Discount pricing Rule",
          "type": "string"
        },
        "ItemOperatorCode": {
          "description": "Indicates how the trigger for the rule is evaluated. Applicable only for combination type of rule.",
          "type": "string"
        },
        "MinimizeNumberOfShipments": {
          "description": "Indicates whether to optimize on the number of shipments or not. Applicable only for shipping category of rules.",
          "type": "string"
        },
        "OrganizationCode": {
          "description": "Pricing organization to which the configuration belongs.",
          "type": "string"
        },
        "OverallRedemptionLimit": {
          "description": "This option limits the number of times that a pricing rule or coupon can be used in total, by all customers",
          "type": "string"
        },
        "PaymentType": {
          "description": "The rule is applicable for this Payment Type.",
          "type": "string"
        },
        "PricingComplexity": {
          "description": "This attribute is used by SBC application. It is a free text field. This attribute is not used by any pricing api internally.",
          "type": "string"
        },
        "PricingRuleActionList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleActionList"
        },
        "PricingRuleAttributeValueList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleAttributeValueList"
        },
        "PricingRuleCategoryList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleCategoryList"
        },
        "PricingRuleItemList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleItemList"
        },
        "PricingRuleKey": {
          "description": "Primary key attribute of YPM_PRICING_RULE table.",
          "type": "string"
        },
        "PricingRuleLocaleList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleLocaleList"
        },
        "PricingRuleName": {
          "description": "Name of the pricing rule.",
          "type": "string"
        },
        "PricingRuleOrderAttributeList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleOrderAttributeList"
        },
        "PricingRulePriceTypeTargetList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRulePriceTypeTargetList"
        },
        "PricingRulePriceTypeTriggerList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRulePriceTypeTriggerList"
        },
        "PricingRulePricelistExclusionList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRulePricelistExclusionList"
        },
        "PricingRuleTargetAttributeValueList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleTargetAttributeValueList"
        },
        "PricingRuleTargetCategoryList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleTargetCategoryList"
        },
        "PricingRuleTargetItemList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleTargetItemList"
        },
        "PricingStatus": {
          "description": "Indicates the status of the pricing rule.",
          "type": "string"
        },
        "Priority": {
          "description": "This attribute is used to prioritize Pricing Rule among a list of applicable pricing rules with same Exclusivity settings. Higher the value of this attribute, higher the priority of Pricing Rule, to be applied to an order/item.",
          "type": "string"
        },
        "RuleCategory": {
          "description": "Indicates the category to which the rule belongs.",
          "type": "string"
        },
        "RuleType": {
          "description": "Indicates the type of the rule.",
          "type": "string"
        },
        "SellerOrganizationCode": {
          "description": "Seller who maintains this pricing rule. Promotion is defined by the seller.",
          "type": "string"
        },
        "StartDateActive": {
          "description": "Date from which the rule is active.",
          "type": "string"
        },
        "StartTime": {
          "description": "If not void indicates that the rule is applicable from this time.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleAction": {
      "properties": {
        "Adjustment": {
          "description": "Adjustment to be applied as part of this action.",
          "type": "string"
        },
        "AdjustmentType": {
          "description": "Type of adjustment.",
          "type": "string"
        },
        "ApplyAdjustmentToRemainder": {
          "description": "Indicates that adjustments should be applied only to the remainder of the transaction.",
          "type": "string"
        },
        "ChargeCategory": {
          "description": "Unique identifier of the Charge Name. Category to which the charge name belongs to.",
          "type": "string"
        },
        "ChargeName": {
          "description": "Name of the charge.",
          "type": "string"
        },
        "MaxAbsoluteAdjustment": {
          "description": "Maximum absolute adjustment that can be provided for this pricing rule action within a transaction.",
          "type": "string"
        },
        "MaximumManualAdjustment": {
          "description": "The maximum adjustment that can be applied as part of this manual rule action.",
          "type": "string"
        },
        "OrderTotal": {
          "description": "The Order total tier for the order total adjustments. Applicable only for rule type order total.",
          "type": "string"
        },
        "PricingRuleActionKey": {
          "description": "Primary key attribute of YPM_PRICING_RULE_ACTION table.",
          "type": "string"
        },
        "PricingRuleKey": {
          "description": "The rule this action is associated.",
          "type": "string"
        },
        "QualifierAmount": {
          "description": "A number that needs to be satisfied in conjunction with the QUALIFIER_AMOUNT_TYPE for the rule condition to satisfy.",
          "type": "string"
        },
        "QualifierAmountType": {
          "description": "Specifies qualifier amount type of the action. Qualifier amount type can be based on minimum unit price or minimum total extended price.",
          "type": "string"
        },
        "Quantity": {
          "description": "Quantity of triggering item for tiered actions. Applicable only for rule type item quantity.",
          "type": "string"
        },
        "Reference": {
          "description": "Any additional reference related to charge.",
          "type": "string"
        },
        "TargetItemDeterminationRule": {
          "description": "Specifies on which target item the action should be applied. This is required while specifying apply on: 'one quantity of target item' or 'every combination'",
          "type": "string"
        },
        "TargetOccurrenceLimit": {
          "description": "Maximum Number of occurrences of adjustment because of this rule in an order. This field is populated WhenToApply is specified as SPECIFIC_NUMBER.",
          "type": "string"
        },
        "WhenToApply": {
          "description": "Indicates how to apply the action.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleActionList": {
      "properties": {
        "ApplyAdjustmentToRemainder": {
          "description": "Indicates that adjustments should be applied only to the remainder of the transaction.",
          "type": "string"
        },
        "MaxAbsoluteAdjustment": {
          "description": "Maximum absolute adjustment that can be provided for this pricing rule action within a transaction.",
          "type": "string"
        },
        "PricingRuleAction": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleAction"
          },
          "type": "array"
        },
        "QualifierAmount": {
          "description": "A number that needs to be satisfied in conjunction with the QUALIFIER_AMOUNT_TYPE for the rule condition to satisfy.",
          "type": "string"
        },
        "QualifierAmountType": {
          "description": "Specifies qualifier amount type of the action. Qualifier amount type can be based on minimum unit price or minimum total extended price.",
          "type": "string"
        },
        "TargetItemDeterminationRule": {
          "description": "Specifies on which target item the action should be applied. This is required while specifying apply on: 'one quantity of target item' or 'every combination'",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleAttributeValue": {
      "properties": {
        "GroupId": {
          "description": "Logical group id for the attribute values. All attributes with same group id are evaluated together.",
          "type": "string"
        },
        "IncludeOrExclude": {
          "description": "Indicates whether the item's attribute value and Quantity combination is used to trigger or to filter out the rule.",
          "type": "string"
        },
        "PricingRuleAttributeValueKey": {
          "description": "Primary key attribute of YPM_PRCNG_RULE_ATTR_VALUE table.",
          "type": "string"
        },
        "PricingRuleKey": {
          "description": "The rule this trigger item attribute value is associated.",
          "type": "string"
        },
        "Quantity": {
          "description": "Quantity of the item which has the attribute being configured.",
          "type": "string"
        },
        "TriggerAttributeDomainID": {
          "description": "The unique identifier of the attribute domain.",
          "type": "string"
        },
        "TriggerAttributeDoubleValue": {
          "description": "The double value of the item attribute.",
          "type": "string"
        },
        "TriggerAttributeGroupID": {
          "description": "The unique identifier of the attribute group.",
          "type": "string"
        },
        "TriggerAttributeID": {
          "description": "Unique identifier of the item attribute.",
          "type": "string"
        },
        "TriggerAttributeIntegerValue": {
          "description": "The integer value of the item attribute.",
          "type": "string"
        },
        "TriggerAttributeValue": {
          "description": "The TEXT value of the item attribute.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleAttributeValueList": {
      "properties": {
        "PricingRuleAttributeValue": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleAttributeValue"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleCategory": {
      "properties": {
        "IncludeOrExclude": {
          "description": "Indicates whether the item's category and Quantity combination is used to trigger or to filter out the rule.",
          "type": "string"
        },
        "PricingRuleCategoryKey": {
          "description": "Primary key attribute of YPM_PRICING_RULE_CATEGORY table.",
          "type": "string"
        },
        "Quantity": {
          "description": "Quantity of the item associated with the category being configured.",
          "type": "string"
        },
        "TriggerCategoryID": {
          "description": "Unique identifier for this category.",
          "type": "string"
        },
        "TriggerCategoryPath": {
          "description": "The path for the category of the product on which pricing rule is triggered.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleCategoryList": {
      "properties": {
        "PricingRuleCategory": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleCategory"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleItem": {
      "properties": {
        "Description": {
          "description": "The Long description of the item.",
          "type": "string"
        },
        "IncludeOrExclude": {
          "description": "The attribute indicates whether the Item and Quantity combination is used to trigger or to filter out the rule.",
          "type": "string"
        },
        "ItemID": {
          "description": "The unique identifier of the target item.",
          "type": "string"
        },
        "PricingRuleItemKey": {
          "description": "Primary key attribute of YPM_PRICING_RULE_ITEM table.",
          "type": "string"
        },
        "PricingRuleKey": {
          "description": "The rule this item quantity condition is associated.",
          "type": "string"
        },
        "Quantity": {
          "description": "Quantity of the item.",
          "type": "string"
        },
        "ShortDescription": {
          "description": "The short description of the item.",
          "type": "string"
        },
        "UnitOfMeasure": {
          "description": "The unit of measure of the item.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleItemList": {
      "properties": {
        "PricingRuleItem": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleItem"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleLocale": {
      "properties": {
        "Country": {
          "description": "The country associated with the locale.",
          "type": "string"
        },
        "Description": {
          "description": "Description of the rule.",
          "type": "string"
        },
        "Language": {
          "description": "The language associated with the locale.",
          "type": "string"
        },
        "PricingRuleKey": {
          "description": "The reference key to the YPM_PRICING_RULE table.",
          "type": "string"
        },
        "PricingRuleLocaleKey": {
          "description": "The primary key of the YPM_PRICING_RULE_LOCALE table.",
          "type": "string"
        },
        "Variant": {
          "description": "The variant associated with the locale.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleLocaleList": {
      "properties": {
        "PricingRuleLocale": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleLocale"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleOrderAttribute": {
      "properties": {
        "AttributeKey": {
          "description": "Foreign key attribute from YFS_ATTRIBUTE table.",
          "type": "string"
        },
        "GroupId": {
          "description": "Logical group id for the attribute values. All attributes with same group id are evaluated together.",
          "type": "string"
        },
        "OrderAttributeBooleanValue": {
          "description": "The Boolean value to match against the attribute value.",
          "type": "string"
        },
        "OrderAttributeDomainID": {
          "description": "The unique identifier of the attribute domain.",
          "type": "string"
        },
        "OrderAttributeGroupID": {
          "description": "The unique identifier of the attribute group.",
          "type": "string"
        },
        "OrderAttributeID": {
          "description": "The unique identifier of the attribute.",
          "type": "string"
        },
        "OrderAttributeMaxValue": {
          "description": "The maximum numeric value to match against the attribute value, exclusive.",
          "type": "string"
        },
        "OrderAttributeMinValue": {
          "description": "The minimum numeric value to match against the attribute value, inclusive.",
          "type": "string"
        },
        "OrderAttributeNumberValue": {
          "description": "The numeric value to match against the attribute value.",
          "type": "string"
        },
        "OrderAttributeTextValue": {
          "description": "The text value to match against the attribute value.",
          "type": "string"
        },
        "PricingRuleOrderAttributeKey": {
          "description": "Primary key attribute of YPM_Pricing_Rule_Order_Attr table",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleOrderAttributeList": {
      "properties": {
        "PricingRuleOrderAttribute": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleOrderAttribute"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRulePriceTypeTarget": {
      "properties": {
        "PriceTypeName": {
          "description": "Price Type associated with this record.",
          "type": "string"
        },
        "PricingRuleKey": {
          "description": "Primary Key attribute of the Pricing Rule associated with this record.",
          "type": "string"
        },
        "PricingRulePriceTypeTargetKey": {
          "description": "Primary key attribute of YPM_PRC_RULE_PRC_TYP_TARG table.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRulePriceTypeTargetList": {
      "properties": {
        "PricingRulePriceTypeTarget": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRulePriceTypeTarget"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRulePriceTypeTrigger": {
      "properties": {
        "PriceTypeName": {
          "description": "Price Type associated with this record.",
          "type": "string"
        },
        "PricingRuleKey": {
          "description": "Primary Key attribute of the Pricing Rule associated with this record.",
          "type": "string"
        },
        "PricingRulePriceTypeTriggerKey": {
          "description": "Primary key attribute of YPM_PRC_RULE_PRC_TYP_TRIG table.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRulePriceTypeTriggerList": {
      "properties": {
        "PricingRulePriceTypeTrigger": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRulePriceTypeTrigger"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRulePricelistExclusion": {
      "properties": {
        "PricelistHeaderKey": {
          "description": "Price list to be excluded",
          "type": "string"
        },
        "PricingRuleKey": {
          "description": "The Pricing rule the exclusion is for",
          "type": "string"
        },
        "PricingRulePricelistExclusionKey": {
          "description": "Primary key attribute of YPM_PRICING_RULE_PRCLST_EXCL table.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRulePricelistExclusionList": {
      "properties": {
        "PricingRulePricelistExclusion": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRulePricelistExclusion"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleTargetAttributeValue": {
      "properties": {
        "GroupId": {
          "description": "The group id of the attribute value. All attributes with same group id are evaluated together.",
          "type": "string"
        },
        "IncludeOrExclude": {
          "description": "Indicates whether certain items should be included or excluded from adjustments depending on item's attribute values.",
          "type": "string"
        },
        "PricingRuleKey": {
          "description": "The rule this target item attribute value is associated.",
          "type": "string"
        },
        "PricingRuleTargetAttributeValueKey": {
          "description": "Primary key attribute of YPM_PRCNG_RULE_TARG_ATTR_VALUE table.",
          "type": "string"
        },
        "Quantity": {
          "description": "Quantity of the item.",
          "type": "string"
        },
        "TargetAttributeDomainID": {
          "description": "The unique identifier of the attribute domain.",
          "type": "string"
        },
        "TargetAttributeDoubleValue": {
          "description": "The double value of the item attribute.",
          "type": "string"
        },
        "TargetAttributeGroupID": {
          "description": "The unique identifier of the attribute group.",
          "type": "string"
        },
        "TargetAttributeID": {
          "description": "Unique identifier of the item attribute.",
          "type": "string"
        },
        "TargetAttributeIntegerValue": {
          "description": "The integer value of the item attribute.",
          "type": "string"
        },
        "TargetAttributeValue": {
          "description": "The TEXT value of the item attribute.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleTargetAttributeValueList": {
      "properties": {
        "PricingRuleTargetAttributeValue": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleTargetAttributeValue"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleTargetCategory": {
      "properties": {
        "IncludeOrExclude": {
          "description": "Indicates whether the item's category is used to trigger or to filter out the rule.",
          "type": "string"
        },
        "PricingRuleTargetCategoryKey": {
          "description": "Primary key attribute of YPM_PRICING_RULE_TARG_CATEGORY table.",
          "type": "string"
        },
        "Quantity": {
          "description": "Quantity of the item associated with the category being configured.",
          "type": "string"
        },
        "TargetCategoryID": {
          "description": "Unique identifier for this category.",
          "type": "string"
        },
        "TargetCategoryPath": {
          "description": "The path for the category of the product on which pricing rule is triggered.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleTargetCategoryList": {
      "properties": {
        "PricingRuleTargetCategory": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleTargetCategory"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleTargetItem": {
      "properties": {
        "IncludeOrExclude": {
          "description": "Indicates whether certain items should be included or excluded from adjustments.",
          "type": "string"
        },
        "PricingRuleKey": {
          "description": "The rule this target item is associated.",
          "type": "string"
        },
        "PricingRuleTargetItemKey": {
          "description": "Primary key attribute of YPM_PRICING_RULE_TARGET_ITEM table.",
          "type": "string"
        },
        "Quantity": {
          "description": "Quantity of the item.",
          "type": "string"
        },
        "TargetItemDesc": {
          "description": "The Long description of the item.",
          "type": "string"
        },
        "TargetItemID": {
          "description": "The unique identifier of the target item.",
          "type": "string"
        },
        "TargetItemShortDesc": {
          "description": "The short description of the item.",
          "type": "string"
        },
        "TargetUnitOfMeasure": {
          "description": "The unit of measure of the target item.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PricingRuleTargetItemList": {
      "properties": {
        "PricingRuleTargetItem": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRuleTargetItem"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PrimaryInformation": {
      "properties": {
        "AgeVerificationCode": {
          "description": "This field indicates the age verification code for the item",
          "type": "string"
        },
        "AllowGiftWrap": {
          "description": "This flag indicates that the item can be gift wrapped.",
          "type": "string"
        },
        "AssumeInfiniteInventory": {
          "description": "This flag indicates whether an item is assumed to be always available. Default value: N.",
          "type": "string"
        },
        "BundleFulfillmentMode": {
          "description": "The way in which the bundle will be fulfilled. It can be Ship Together(01), Ship Independent(00), or Deliver Together(02) for Bundle Item. Default value is Ship Together(01) for Bundle Item.",
          "type": "string"
        },
        "BundlePricingStrategy": {
          "description": "Determines how a bundle will be priced. A bundle can by priced by PARENT (only the parent's price is used), COMP (only the components' prices are used), or ALL (both parent's and components' prices are used). Default: PARENT.",
          "type": "string"
        },
        "CapacityPerOrderedQty": {
          "description": "The capacity per ordered quantity.  Used to compute required capacity based on line ordered quantity.",
          "type": "string"
        },
        "CapacityQuantityStrategy": {
          "description": "This field determines how the capacity quantity is arrived at for provided and delivery services from the inventory quantity.   Valid values: ORD - Based on the ordered service quantity; ASSOC - Based on the service and product association.  Default value: ORD.",
          "type": "string"
        },
        "ColorCode": {
          "description": "This field describes color code for the item.",
          "type": "string"
        },
        "ComputedUnitCost": {
          "description": "The computed standard cost of the item. This will be set when createItem/ modifyItem API is called specifically with computeUnitCost flag as Y and item unit cost is calculated based on REPLACEMENT COST.",
          "type": "string"
        },
        "ConfigurationKey": {
          "description": "A reference to the BOM XML if the item is pre-configured.",
          "type": "string"
        },
        "ConfigurationModelName": {
          "description": "The configuration model name for this item.",
          "type": "string"
        },
        "ConfiguredModelKey": {
          "description": "The key of the configured model for a configurable item.",
          "type": "string"
        },
        "CostCurrency": {
          "description": "The currency in which the item's cost is defined.",
          "type": "string"
        },
        "CountryOfOrigin": {
          "description": "The item's country of origin/manufacture.",
          "type": "string"
        },
        "CreditWOReceipt": {
          "description": "This flag indicates if credit may be provided with out receipts on return of an item.",
          "type": "string"
        },
        "DefaultProductClass": {
          "description": "The default product class of an item.",
          "type": "string"
        },
        "Description": {
          "description": "The description of the item.",
          "type": "string"
        },
        "DisplayItemDescription": {
          "description": "User defined description of the item.",
          "type": "string"
        },
        "EffectiveEndDate": {
          "description": "Defines the end time when the item is valid.",
          "type": "string"
        },
        "EffectiveStartDate": {
          "description": "Defines the start time when the item is valid.",
          "type": "string"
        },
        "ExtendedDescription": {
          "description": "The extended multi-line description of the Item.",
          "type": "string"
        },
        "ExtendedDisplayDescription": {
          "description": "Display description for the item.",
          "type": "string"
        },
        "FixedCapacityQtyPerLine": {
          "description": "The fixed capacity quantity will be assumed irrespective of the inventory quantity for the line shipped with this item when the strategy is fixed.",
          "type": "string"
        },
        "FixedPricingQtyPerLine": {
          "description": "The fixed pricing quanity per line. Fixed pricing quantity will be assumed irrespective of the inventory quantity for the line shipped with this item.",
          "type": "string"
        },
        "ImageID": {
          "description": "Unique ID of the image in the external location.",
          "type": "string"
        },
        "ImageLabel": {
          "description": "Label of the image.",
          "type": "string"
        },
        "ImageLocation": {
          "description": "External location of the image.",
          "type": "string"
        },
        "InvoiceBasedOnActuals": {
          "description": "This flag indicates whether invoicing is done based on actual weight to support catch weight items.",
          "type": "string"
        },
        "InvolvesSegmentChange": {
          "description": "This flag indicates whether an item performs segment change.",
          "type": "string"
        },
        "IsAirShippingAllowed": {
          "description": "Indicates if item can be shipped by air. Default value: Y.",
          "type": "string"
        },
        "IsConfigurable": {
          "description": "This flag indicates that the item is a configurable item. A configurable item can either be a bundle or a physical kit. A configurable bundle item offers a number of different options from which a customer can select before buying the product. Components for a bundle are not specified in the catalog as the actual components will be determined by the user when an order is placed. A physical kit must always be pre-configured.",
          "type": "string"
        },
        "IsDeliveryAllowed": {
          "description": "This flag indicates whether the delivery method DEL is allowed for item. Default value: N.",
          "type": "string"
        },
        "IsEligibleForShippingDiscount": {
          "description": "Determines whether the item is eligible for shipping discounts. Default Value: Y.",
          "type": "string"
        },
        "IsForwardingAllowed": {
          "description": "This flag indicates if the item can be forwarded for zone skipping. Default value: Y.",
          "type": "string"
        },
        "IsFreezerRequired": {
          "description": "Indicates if item requires freezer for transportation. Default value: N.",
          "type": "string"
        },
        "IsHazmat": {
          "description": "Indicates if item is hazardous material.",
          "type": "string"
        },
        "IsModelItem": {
          "description": "This flag indicates that the item is an item with variations (formerly known as a model item). An item with variations represents a group of items with similar set of attributes.",
          "type": "string"
        },
        "IsParcelShippingAllowed": {
          "description": "This flag indicates whether the item can be shipped through parcel service. Default value: Y.",
          "type": "string"
        },
        "IsPickupAllowed": {
          "description": "This flag indicates whether the delivery method PICK is allowed for item. Default value: N.",
          "type": "string"
        },
        "IsPreConfigured": {
          "description": "This flag indicates that the configurable item is pre-configured with selected options. If a bundle is pre-configured, the bundle or physical components that represent the selected option will be available in the catalog. For a pre-configured physical kit, only the physical kit will be available as the item in the catalog.",
          "type": "string"
        },
        "IsProcurementAllowed": {
          "description": "This flag indicates if the item can be procured for zone skipping. Default value: Y.",
          "type": "string"
        },
        "IsReturnService": {
          "description": "This flag indicates whether this provided or delivery service item is to be associated only to a return document.  Default value: N.",
          "type": "string"
        },
        "IsReturnable": {
          "description": "This flag indicates whether this product item is returnable. Default value: N.",
          "type": "string"
        },
        "IsShippingAllowed": {
          "description": "This flag indicates whether the delivery method SHP is allowed for item. Default value: N.",
          "type": "string"
        },
        "IsSoldSeparately": {
          "description": "Indicates if the item can be sold separately. If N, then the item must be part of a bundle or kit. Valid Values: 'Y' or 'N'.",
          "type": "string"
        },
        "IsStandaloneService": {
          "description": "This flag indicates whether a PS Item is standalone and does not require associations with product lines for it to be included on an order line.",
          "type": "string"
        },
        "IsSubOnOrderAllowed": {
          "description": "Indicates if during scheduling an order, substitution is allowed or not. If Y, schedule will automatically attempt to substitute an item with preferred or regular substitute.",
          "type": "string"
        },
        "IsValid": {
          "description": "This flag indicates whether the item is valid.",
          "type": "string"
        },
        "ItemType": {
          "description": "The generic type of an item.",
          "type": "string"
        },
        "Keywords": {
          "description": "A field used to specify keywords to be associated with the item.",
          "type": "string"
        },
        "KitCode": {
          "description": "This field indicates the kit code for this item.",
          "type": "string"
        },
        "ManufacturerItem": {
          "description": "The identifier used by a manufacturer to identify an item.",
          "type": "string"
        },
        "ManufacturerItemDesc": {
          "description": "The description of an item, from a manufacturer's view point.",
          "type": "string"
        },
        "ManufacturerName": {
          "description": "The manufacturer of the item.",
          "type": "string"
        },
        "MasterCatalogID": {
          "description": "The master catalog to which an item belongs.",
          "type": "string"
        },
        "MaxOrderQuantity": {
          "description": "The maximum order quantity.",
          "type": "string"
        },
        "MaxReturnWindow": {
          "description": "The number of days after which the return will not be accepted. Default value: 0.",
          "type": "string"
        },
        "MinOrderQuantity": {
          "description": "The minimum order quantity.",
          "type": "string"
        },
        "MinReturnWindow": {
          "description": "The minimum number of days before which return may be accepted without any override. Default value: 0.",
          "type": "string"
        },
        "MinimumCapacityQuantity": {
          "description": "This is the minimum capacity quantity which will be assumed when  the inventory quantity of the line to arrive at the capacity quantity when the strategy is to arrive at the capacity quantity by association with product line.",
          "type": "string"
        },
        "ModelItemUnitOfMeasure": {
          "description": "This field describes the unit of measure of the item with variations.",
          "type": "string"
        },
        "NumSecondarySerials": {
          "description": "The number of secondary serial numbers applicable for a serialized item.",
          "type": "string"
        },
        "OrderingQuantityStrategy": {
          "description": "This field determines how the ordered quantity is arrived at for a service line.  Valid values: ENT - Based on the entered value on the order line; PROD - Based on the associated product line.  Default value: ENT.",
          "type": "string"
        },
        "PricingQuantityConvFactor": {
          "description": "The pricing quantity conversion factor. This conversion factor is multiplied with the inventory quantity of the line to arrive at this pricing quantity.",
          "type": "string"
        },
        "PricingQuantityStrategy": {
          "description": "This field determines how the pricing quantity is arrived at when different from the inventory quantity.   Valid values: IQTY - Based on the inventory quantity.  Default value: IQTY.",
          "type": "string"
        },
        "PricingUOM": {
          "description": "The pricing unit of measure, if different from the inventory unit of measure.",
          "type": "string"
        },
        "PricingUOMStrategy": {
          "description": "This field determines how the pricing unit of measure is defaulted for the item. It could be same as the inventory UOM or could be different.  Valid values: INV - Same as the inventory UOM; ALT - Different from the inventory UOM.  Default value: INV.",
          "type": "string"
        },
        "PrimaryEnterpriseCode": {
          "description": "The primary enterprise associated with an item.",
          "type": "string"
        },
        "PrimarySupplier": {
          "description": "The primary supplier. This will have the primary supplier organization code for the item.",
          "type": "string"
        },
        "ProductLine": {
          "description": "The product line associated with the item.",
          "type": "string"
        },
        "RequiresProdAssociation": {
          "description": "IThis flag indicates whether the item must be associated to an order line having a group code of PROD. Applicable for service items which must be associated to a Product order line.",
          "type": "string"
        },
        "ReturnWindow": {
          "description": "The number of days after which return may not be accepted. Default value: 0.",
          "type": "string"
        },
        "RunQuantity": {
          "description": "The run quantity indicates the multiple of quantity in which a work order gets created. This field is valid only for service items.",
          "type": "string"
        },
        "SerializedFlag": {
          "description": "This flag indicates whether an item is serialized.",
          "type": "string"
        },
        "ServiceTypeID": {
          "description": "The service type associated to this service item.",
          "type": "string"
        },
        "ShipmentConsolidationWindow": {
          "description": "Indicates the number of days an item can be delayed after it becomes available to be consolidated to a single shipment. Used by scheduling when shipment/cost optimization is considered.",
          "type": "string"
        },
        "ShortDescription": {
          "description": "The short description of the item.",
          "type": "string"
        },
        "SizeCode": {
          "description": "This field describes the size code of the item.",
          "type": "string"
        },
        "Status": {
          "description": "This field indicates the status of an item.",
          "type": "string"
        },
        "TaxableFlag": {
          "description": "This flag indicates whether an item is taxable.",
          "type": "string"
        },
        "UnitCost": {
          "description": "The cost of one unit of an item.",
          "type": "string"
        },
        "UnitHeight": {
          "description": "The height of one unit of item quantity.",
          "type": "string"
        },
        "UnitHeightUOM": {
          "description": "The unit of measure in which item height is measured.",
          "type": "string"
        },
        "UnitLength": {
          "description": "The length of one unit of item quantity.",
          "type": "string"
        },
        "UnitLengthUOM": {
          "description": "The unit of measure in which an item length is measured.",
          "type": "string"
        },
        "UnitVolume": {
          "description": "Calculated volume of one unit of item quantity.",
          "type": "string"
        },
        "UnitVolumeUOM": {
          "description": "Unit of measure in which the item volume is measured.",
          "type": "string"
        },
        "UnitWeight": {
          "description": "The weight of one unit of item quantity.",
          "type": "string"
        },
        "UnitWeightUOM": {
          "description": "The unit of measure in which the item weight is measured.",
          "type": "string"
        },
        "UnitWidth": {
          "description": "The width of one unit of item quantity.",
          "type": "string"
        },
        "UnitWidthUOM": {
          "description": "The unit of measure in which an item's width is measured.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PrimaryQuote": {
      "properties": {
        "DocumentType": {
          "description": "The document type that is associated with this order. For example, Sales Order document (0001), Planned Order document (0002), Return Order document (0003) , and Purchase Order document (0005). This field determines the order's fulfillment cycle and controls the inventory and payment updates performed on the order.",
          "type": "string"
        },
        "EnterpriseCode": {
          "description": "The enterprise that is associated with this order.",
          "type": "string"
        },
        "OrderNo": {
          "description": "The number of the order, which can be passed during order creation or generated based on a system rule setting.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ProductAssociation": {
      "properties": {
        "HoldSchedTillCompletion": {
          "description": "Flag to indicate whether to hold schedule till completion.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "header Key of the Order for which Association is defined.",
          "type": "string"
        },
        "OrderProdSerAssocKey": {
          "description": "Primary key for YFS_ORDER_PROD_SER_ASSOC table.",
          "type": "string"
        },
        "PricingProductQuantity": {
          "description": "Quantity used for using this option.",
          "type": "string"
        },
        "PricingServiceQuantity": {
          "description": "Quantity used for using this option.",
          "type": "string"
        },
        "ProductLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ProductLine"
        },
        "ProductQuantity": {
          "description": "Product quantity for which service quantity is stored in ServiceQuantity attribute.",
          "type": "string"
        },
        "ServiceLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ServiceLine"
        },
        "ServiceQuantity": {
          "description": "Service Capacity to be used for delivering (or servicing )product quantity mentioned.",
          "type": "string"
        },
        "ServiceTimeOffset": {
          "description": "Specifies the service time offset between services in Hours.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ProductAssociations": {
      "properties": {
        "ProductAssociation": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ProductAssociation"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ProductItem": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "ItemID": {
          "description": "The unique identifier for the Product Item. The item ID, UOM and OrganizationCode form the unique item identifier for Product Item.",
          "type": "string"
        },
        "Quantity": {
          "description": "Product item quantity.",
          "type": "string"
        },
        "UnitOfMeasure": {
          "description": "Unit of measure of the product item.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ProductItems": {
      "properties": {
        "ProductItem": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ProductItem"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ProductLine": {
      "properties": {
        "OrderLineKey": {
          "description": "Order line key of the associated product line.",
          "type": "string"
        },
        "PrimeLineNo": {
          "description": "Prime line number of the associated product line.",
          "type": "string"
        },
        "SubLineNo": {
          "description": "Sub line number of the associated product line.",
          "type": "string"
        },
        "TransactionalLineId": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ProductServiceAssoc": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "HoldSchedTillCompletion": {
          "description": "Flag to indicate whether to hold schedule till completion.",
          "type": "string"
        },
        "ProductLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ProductLine"
        },
        "ProductQuantity": {
          "description": "Product quantity for which service quantity is stored in ServiceQuantity attribute.",
          "type": "string"
        },
        "ServiceLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ServiceLine"
        },
        "ServiceQuantity": {
          "description": "Service Capacity to be used for delivering (or servicing )product quantity mentioned.",
          "type": "string"
        },
        "ServiceTimeOffset": {
          "description": "Specifies the service time offset between services in Hours.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ProductServiceAssocs": {
      "properties": {
        "ProductServiceAssoc": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ProductServiceAssoc"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Promotion": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "AdditionalLinePriceKey": {
          "description": "Primary key attribute of the YFS_ADDNL_LINE_PRICE table.",
          "type": "string"
        },
        "DenialReason": {
          "description": "If the promotion is denied, the reason for the denial.",
          "type": "string"
        },
        "Description": {
          "description": "Description of the promotion.",
          "type": "string"
        },
        "ExclusivityId": {
          "description": "ExclusivityID is used to group set of Promotions for mutual exclusivity. Exclusivity Type settings are applicable among Pricing Rules having same ExclusvityID.",
          "type": "string"
        },
        "ExclusivityType": {
          "description": "Exclusivity Type of the Promotion. Valid Values are: ALL, RULE_TYPE_ITEM, RULE_TYPE_ORDER, ONE_RULE_WITHIN_ID and GLOBAL_RULE",
          "type": "string"
        },
        "IsExternal": {
          "description": "This flag specifies whether the promotion is external.",
          "type": "string"
        },
        "OverrideAdjustmentValue": {
          "description": "For promotions, the overridden Adjustment value used in place of the configured Adjustment of the corresponding Pricing Rule Action.",
          "type": "string"
        },
        "OverrideMaxAdjustment": {
          "type": "string"
        },
        "PricingRule": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PricingRule"
        },
        "Priority": {
          "description": "This attribute is used to prioritize Promotion among a list of applicable Promotions with same Exclusivity settings. Higher the value of this attribute, higher the priority of Promotion, to be applied to an order/item.",
          "type": "string"
        },
        "PromotionApplied": {
          "description": "A flag indicating if the promotion is applied. When ValidateReferences=Y the value can be 'P' meaning the promotion was partially applied.",
          "type": "string"
        },
        "PromotionCategory": {
          "description": "Specifies category of external promotion. Valid values are ORDER,ITEM and SHIPPING",
          "type": "string"
        },
        "PromotionGroup": {
          "description": "The group for which this promototion belongs to. Valid values: COUPON, MANUAL.",
          "type": "string"
        },
        "PromotionId": {
          "description": "This identifies the promotion that is added to this order. This will be used as the CouponID when determining the price of the order.",
          "type": "string"
        },
        "PromotionKey": {
          "description": "The primary key of the YFS_PROMOTION table.",
          "type": "string"
        },
        "PromotionReferences": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PromotionReferences"
        },
        "PromotionType": {
          "description": "The type of promotion. Like DISCOUNT, BOGO.",
          "type": "string"
        },
        "ValidateReferences": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PromotionReference": {
      "properties": {
        "DenialReason": {
          "description": "If the reference is denied, the reason for the denial.",
          "type": "string"
        },
        "IsUnique": {
          "description": "Specifies whether the reference is unique or not.",
          "type": "string"
        },
        "Operation": {
          "type": "string"
        },
        "ReferenceApplied": {
          "description": "A flag indicating if the reference is applied.",
          "type": "string"
        },
        "ReferenceId": {
          "description": "Reference value within a particular promotion. For example a unique coupon barcode.",
          "type": "string"
        },
        "ReferenceSequence": {
          "description": "Sequence number for each reference entry.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.PromotionReferences": {
      "properties": {
        "PromotionReference": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.PromotionReference"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Promotions": {
      "properties": {
        "Promotion": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Promotion"
          },
          "type": "array"
        },
        "Reset": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Reference": {
      "properties": {
        "Name": {
          "description": "Name of the reference's name-value pair.",
          "type": "string"
        },
        "Value": {
          "description": "Value assigned to the corresponding name.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.References": {
      "properties": {
        "Reference": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Reference"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.RemainingFinancialTotals": {
      "properties": {
        "Filter": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Filter"
        },
        "RemainingToAuthorize": {
          "description": "Total Amount remaining to be authorized. This is calculated as Book Amount - Settled Amount - Invoiced Amount. This also deducts amounts to be settled in store such as cash and carry lines, or in store payment lines.",
          "type": "string"
        },
        "RemainingToCharge": {
          "description": "Total Amount remaining to be charged",
          "type": "string"
        },
        "RemainingToRefund": {
          "description": "Total Amount remaining to be refund",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.RemainingTotals": {
      "properties": {
        "GrandCharges": {
          "type": "string"
        },
        "GrandDiscount": {
          "type": "string"
        },
        "GrandTax": {
          "type": "string"
        },
        "GrandTotal": {
          "type": "string"
        },
        "HdrCharges": {
          "type": "string"
        },
        "HdrDiscount": {
          "type": "string"
        },
        "HdrTax": {
          "type": "string"
        },
        "HdrTotal": {
          "type": "string"
        },
        "LineSubTotal": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.RemainingTotalsInEnterpriseCurrency": {
      "properties": {
        "GrandCharges": {
          "description": "Grand Charges in Enterprise currency",
          "type": "string"
        },
        "GrandDiscount": {
          "description": "Grand Discount in Enterprise currency",
          "type": "string"
        },
        "GrandTax": {
          "description": "Grand Tax in Enterprise currency",
          "type": "string"
        },
        "GrandTotal": {
          "description": "Grand Total in Enterprise currency",
          "type": "string"
        },
        "HdrCharges": {
          "description": "Header Charges in Enterprise currency",
          "type": "string"
        },
        "HdrDiscount": {
          "description": "Header Discount in Enterprise currency",
          "type": "string"
        },
        "HdrTax": {
          "description": "Header Tax in Enterprise currency",
          "type": "string"
        },
        "HdrTotal": {
          "description": "Header Total in Enterprise currency",
          "type": "string"
        },
        "LineSubTotal": {
          "description": "Line Sub Total in Enterprise currency",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.RemovedAwards": {
      "properties": {
        "Award": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Award"
        },
        "TotalNumberOfRecords": {
          "description": "Number of Removed Awards on the Order.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ReturnOrderForExchange": {
      "properties": {
        "AllocationRuleID": {
          "description": "The identifier of the scheduling rule to be used while checking inventory availability.  If not passed, the allocation rule with the ID 'SYSTEM' for the enterprise is used. If the allocation rule with the ID 'SYSTEM' is not found, the allocation rule with the ID 'SYSTEM' for the enterprise 'DEFAULT' is used.",
          "type": "string"
        },
        "AuthorizationExpirationDate": {
          "description": "The smallest expiration date of currently valid expirations. This field is used by the system payment processing agents. Any transaction having a financial implication will set this date to current system date. This field is used as a trigger by payment processing agents to create charge and authorization reqeusts.",
          "type": "string"
        },
        "AuthorizedClient": {
          "description": "The owner channel of the order.",
          "type": "string"
        },
        "AutoCancelDate": {
          "description": "The date on which the order will automatically be cancelled. If not provided, it is defaulted as null on order creation. This date can be set or reset at any point in time by calling changeorder API.",
          "type": "string"
        },
        "BillToID": {
          "description": "The identifier of the bill to customer.  If a customer definition representing the buyer organization exists within the system, the BillToID can represent the CustomerID of the customer.  Otherwise, the BillToID can represent the PersonID of the bill to address or the BuyerOrganizationCode of the buyer organization.",
          "type": "string"
        },
        "BuyerOrganizationCode": {
          "description": "The buyer organization that is associated with this order. This must be a valid organization defined in the system.",
          "type": "string"
        },
        "BuyerUserId": {
          "description": "This is the User Id of the customer for which order is created. This field maps to User_Id field of YFS_Customer_Contact.",
          "type": "string"
        },
        "CarrierAccountNo": {
          "description": "The account number of the customer with the carrier.",
          "type": "string"
        },
        "CarrierServiceCode": {
          "description": "The carrier service code for this order.",
          "type": "string"
        },
        "ChainType": {
          "description": "Specifies the chaining type of the order.",
          "type": "string"
        },
        "ChargeActualFreightFlag": {
          "description": "This flag indicates whether the actual freight charges should be passed on to the customer. If set to 'Y', invoicing picks up charges from shipments and uses that to invoice the customer.",
          "type": "string"
        },
        "CustomerContactID": {
          "description": "This is the customer contact ID for the order. This field maps to contact ID field of YFS_Customer_Contact.",
          "type": "string"
        },
        "CustomerEMailID": {
          "description": "The E-mail ID of the customer.",
          "type": "string"
        },
        "CustomerPONo": {
          "description": "The PO number of the customer. For purchase orders, this can be used for storing the purchase order number of the purchasing system if that number is not already stored as part of the order number.",
          "type": "string"
        },
        "CustomerRewardsNo": {
          "description": "The identifier of the customer's rewards number",
          "type": "string"
        },
        "DefaultCustomerInformation": {
          "type": "string"
        },
        "DeliveryCode": {
          "description": "The organization that pays the freight charges. For example, SUPPLIER, ENTERPRISE, and MARKETPLACE. However, you could pass any other value which is a valid shipment charge type as understood by the carrier by which the shipment is transported. See YFS_SHIPMENT_CONTAINER.carrier_payment_type for additional information.",
          "type": "string"
        },
        "Division": {
          "description": "The order classification attribute. This field can be used for reporting purposes. Sterling Selling And Fulfillment Suite system has no logic based on this field.",
          "type": "string"
        },
        "DocumentType": {
          "description": "The document type that is associated with this order. For example, Sales Order document (0001), Planned Order document (0002), Return Order document (0003) , and Purchase Order document (0005). This field determines the order's fulfillment cycle and controls the inventory and payment updates performed on the order.",
          "type": "string"
        },
        "DraftOrderFlag": {
          "description": "This flag indicates whether the order is yet to be confirmed. Order lines can only be deleted from the system in draft stage. This flag is not applicable for Quotes.",
          "type": "string"
        },
        "DriverDate": {
          "description": "Date used to driver order processing. '01' represents\n\t\t\t\t\t\t\tReqShipDate, '02' represents ReqDeliveryDate.",
          "type": "string"
        },
        "EnteredBy": {
          "description": "The system or sales person who created the order.",
          "type": "string"
        },
        "EnterpriseCode": {
          "description": "The enterprise that is associated with this order.",
          "type": "string"
        },
        "EntryType": {
          "description": "The channel through which this order was created.",
          "type": "string"
        },
        "ExchangeType": {
          "description": "This field indicates the exchange type of the order. The payment processing logic is dependent on this attribute.",
          "type": "string"
        },
        "FreightTerms": {
          "description": "Indicates Freight Terms for the order.",
          "type": "string"
        },
        "HasChainedLines": {
          "type": "string"
        },
        "HasDeliveryLines": {
          "type": "string"
        },
        "HasProductLines": {
          "type": "string"
        },
        "HasServiceLines": {
          "type": "string"
        },
        "HoldFlag": {
          "type": "string"
        },
        "HoldReasonCode": {
          "description": "The reason code for putting the order on hold.",
          "type": "string"
        },
        "LevelOfService": {
          "description": "Indicates the level of service required for this order.  Default is Null.",
          "type": "string"
        },
        "MaxOrderStatus": {
          "description": "Maximum order status based on all records that belong\n\t\t\t\t\t\t\tto an order.",
          "type": "string"
        },
        "MaxOrderStatusDesc": {
          "description": "Description of maximum order status based on all\n\t\t\t\t\t\t\trecords that belong to an order.",
          "type": "string"
        },
        "MinOrderStatus": {
          "description": "Minimum order status based on all records that belong\n\t\t\t\t\t\t\tto an order.",
          "type": "string"
        },
        "MinOrderStatusDesc": {
          "description": "Description of minimum order status based on all\n\t\t\t\t\t\t\trecords that belong to an order.",
          "type": "string"
        },
        "MultipleStatusesExist": {
          "description": "If order is in more than one status then this flag\n\t\t\t\t\t\t\twill be returned as \"Y\".",
          "type": "string"
        },
        "NotificationReference": {
          "description": "This field provides details on notifications based on the notification type. For example, for notification type 'e-mail' this would be the e-mail address. This field is not used within the application.",
          "type": "string"
        },
        "NotificationType": {
          "description": "This field is not used within the application. It is published with events so that external decisions can be made based on it.",
          "type": "string"
        },
        "NotifyAfterShipmentFlag": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "OrderDate": {
          "description": "The date on which the order was taken. If not passed during order creation, it is defaulted to current system date.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The primary key for the YFS_ORDER_HEADER table.",
          "type": "string"
        },
        "OrderName": {
          "description": "The name given to the order.",
          "type": "string"
        },
        "OrderNo": {
          "description": "The number of the order, which can be passed during order creation or generated based on a system rule setting.",
          "type": "string"
        },
        "OrderPurpose": {
          "description": "This indicates what, if any, specific purpose this order was created for. The only valid value is 'EXCHANGE' which means the order is created for exchange purpose. But, the system may create an order with OrderPurpose of REFUND for internal use.",
          "type": "string"
        },
        "OrderType": {
          "description": "The order classification attribute. This field can be used for reporting purposes or to build conditions for modeling your business process. Sterling Selling And Fulfillment Suite system has no default logic based on this field.",
          "type": "string"
        },
        "OriginalTax": {
          "description": "Total tax amount at the time of the order creation.This attribute only reflects the header tax.This field is not updated later in the cycle and can be used to track changes made since the order creation.",
          "type": "string"
        },
        "OriginalTotalAmount": {
          "description": "The total amount at the time of the order creation. This field is not updated later in the cycle and can be used to track changes made since the order creation.",
          "type": "string"
        },
        "OtherCharges": {
          "description": "The sum of the other charges at the header level.",
          "type": "string"
        },
        "PaymentStatus": {
          "description": "The information about the payment status of the order.",
          "type": "string"
        },
        "PendingTransferIn": {
          "description": "The amount of funds available for the exchange order. This is the same as the total order amount of the return order.",
          "type": "string"
        },
        "PersonalizeCode": {
          "description": "The code that describes the personalization required for the order.",
          "type": "string"
        },
        "PriceProgramKey": {
          "description": "The price program that is associated with this order.",
          "type": "string"
        },
        "PriorityCode": {
          "description": "The priority code of the order. External logic can be built for prioritizing orders.",
          "type": "string"
        },
        "PriorityNumber": {
          "description": "The numeric priority code as opposed to alphanumeric field PRIORITY_CODE.",
          "type": "string"
        },
        "ProcessPaymentOnReturnOrder": {
          "description": "Indicates that payment methods should be copied onto\n\t\t\t\t\t\t\tthe return order and that refunds should be processed there, as\n\t\t\t\t\t\t\topposed to the original sales order. This is only valid for\n\t\t\t\t\t\t\treturn orders.",
          "type": "string"
        },
        "Purpose": {
          "description": "This field is passed out in the tax calculation user exits.",
          "type": "string"
        },
        "ReceivingNode": {
          "description": "The node an order is to be shipped to.",
          "type": "string"
        },
        "ReqCancelDate": {
          "description": "The requested cancel date. If this date is in the future, the order will be scheduled only up to this date. If this date is in the past, the order can be scheduled for shipping today as long as it has not been cancelled already. The order line level cancel date overrides this attribute.",
          "type": "string"
        },
        "ReqDeliveryDate": {
          "description": "The requested delivery date. This date is stamped on order lines (as requested delivery date) during order creation if no requested delivery date was passed at the order line level.",
          "type": "string"
        },
        "ReqShipDate": {
          "description": "The date the customer has requested the order to be shipped on. Based on the 'Driver Date' parameter of the document type, the ship date or delivery date will be calculated based on transit time calculations (if not passed at order creation).",
          "type": "string"
        },
        "ReturnByGiftRecipient": {
          "description": "This flag indicates whether the return was initiated by the gift recipient. This field is only used by return orders.",
          "type": "string"
        },
        "ReturnOrderHeaderKeyForExchange": {
          "description": "The return order header key for which this exchange order was created.",
          "type": "string"
        },
        "SCAC": {
          "description": "The carrier assigned to the order.",
          "type": "string"
        },
        "ScacAndService": {
          "description": "Value of SCAC and Service code.",
          "type": "string"
        },
        "ScacAndServiceKey": {
          "description": "Link to YFS_SCAC_AND_SERVICE table.",
          "type": "string"
        },
        "SearchCriteria1": {
          "description": "This field is provided for allowing custom searches. You can decide at implementation time what should be stored in this field.",
          "type": "string"
        },
        "SearchCriteria2": {
          "description": "This field is provided for allowing custom searches. You can decide at implementation time what should be stored in this field.",
          "type": "string"
        },
        "SellerOrganizationCode": {
          "description": "The seller organization that is associated with this order. This must be a valid organization defined in the system.",
          "type": "string"
        },
        "ShipToID": {
          "description": "The identifier of the ship to customer.  If a customer definition representing the buyer organization exists within the system, the ShipToID can represent the CustomerID of the customer.  Otherwise, the ShipToID can represent the PersonID of the ship to address or the receiving node of the order.",
          "type": "string"
        },
        "Status": {
          "description": "Status description of the order.",
          "type": "string"
        },
        "TaxExemptFlag": {
          "description": "This flag indicates whether the buyer is extempt from paying taxes.",
          "type": "string"
        },
        "TaxExemptionCertificate": {
          "description": "The buyer's tax exemption certificate.",
          "type": "string"
        },
        "TaxJurisdiction": {
          "description": "The tax jurisdiction of the buyer.",
          "type": "string"
        },
        "TaxPayerId": {
          "description": "The identifier of the buyer.",
          "type": "string"
        },
        "TermsCode": {
          "description": "The terms code of the order. This is passed on to the invoice and published with the invoice.",
          "type": "string"
        },
        "TotalAdjustmentAmount": {
          "description": "the sum of all the credit and debit memos issued against this order.",
          "type": "string"
        },
        "VendorID": {
          "description": "The seller's vendor identifier, as defined by the buyer.",
          "type": "string"
        },
        "isHistory": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ReturnOrdersForExchange": {
      "properties": {
        "ReturnOrderForExchange": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ReturnOrderForExchange"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ReturnPolicyViolations": {
      "properties": {
        "NonApprovalTransactionViolationList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.NonApprovalTransactionViolationList"
        },
        "TransactionApproverList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TransactionApproverList"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.SafetyFactorDefinition": {
      "properties": {
        "DeliveryMethod": {
          "type": "string"
        },
        "FutureSafetyFactorPercentage": {
          "description": "The future safety factor percentage of this item.  The FutureSafetyFactorPercentage will be excluded from the actual future availability of the item if the scheduling rule, node type, and supply type are configured to apply future safety factor.",
          "type": "string"
        },
        "OnhandSafetyFactorPercentage": {
          "description": "The on-hand safety factor percentage of this item.  The OnhandSafetyFactorPercentage will be excluded from the actual on-hand availability of the item if the scheduling rule, node type, and supply type are configured to apply on-hand safety factor.   OnhandSafetyFactorPercentage will be used only when OnhandSafetyFactorQuantity is not specified.",
          "type": "string"
        },
        "OnhandSafetyFactorQuantity": {
          "description": "The on-hand safety factor quantity of this item.  The OnhandSafetyFactorQuantity will be excluded from the actual on-hand availability of the item if the scheduling rule, node type, and supply type are configured to apply on-hand safety factor.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.SafetyFactorDefinitions": {
      "properties": {
        "SafetyFactorDefinition": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.SafetyFactorDefinition"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Schedule": {
      "properties": {
        "BatchNo": {
          "description": "The batch number that has been specified on the scheduled order line.",
          "type": "string"
        },
        "ChangeInQuantity": {
          "type": "string"
        },
        "ExpectedDeliveryDate": {
          "description": "The date the scheduled order line is expected to be delivered by.",
          "type": "string"
        },
        "ExpectedShipmentDate": {
          "description": "The date the scheduled order line is expected to ship by.",
          "type": "string"
        },
        "LotNumber": {
          "description": "The lot number that has been specified on the scheduled order line.",
          "type": "string"
        },
        "MergeNode": {
          "description": "The node that is used as either forwarding or merge location.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The order header that is associated with this scheduled order line.",
          "type": "string"
        },
        "OrderLineKey": {
          "description": "The order line that is associated with this scheduled order line.",
          "type": "string"
        },
        "OrderLineScheduleKey": {
          "description": "The primary key for the YFS_ORDER_LINE_SCHEDULE table.",
          "type": "string"
        },
        "ProcureFromNode": {
          "description": "The node from which the scheduled order line should be procured if it cannot be sourced from the ship node specified on the order line.",
          "type": "string"
        },
        "ProductAvailabilityDate": {
          "description": "The date product is available at the ship node or procurement node. If procurement node is present on the line, this date indicates product availability at the procurement node, otherwise ship node.",
          "type": "string"
        },
        "Quantity": {
          "description": "Quantity.",
          "type": "string"
        },
        "ReceivingNode": {
          "description": "The node that will receive the scheduled order line, if applicable.",
          "type": "string"
        },
        "RevisionNo": {
          "description": "The revision number that has been specified on the scheduled order line.",
          "type": "string"
        },
        "ScheduleNo": {
          "description": "The number of the scheduled order line.",
          "type": "string"
        },
        "ScheduleTranQuantity": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ScheduleTranQuantity"
        },
        "ShipByDate": {
          "description": "The date the scheduled order line should be shipped by.",
          "type": "string"
        },
        "ShipNode": {
          "description": "The ship node fulfilling this scheduled order line.",
          "type": "string"
        },
        "TagNumber": {
          "description": "The tag number that has been specified on the scheduled order line.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ScheduleTranQuantity": {
      "properties": {
        "ChangeInQuantity": {
          "type": "string"
        },
        "Quantity": {
          "description": "Quantity.",
          "type": "string"
        },
        "TransactionalUOM": {
          "description": "UOM on which all the transactional quantities are\n\t\t\t\t\t\t\t\t\t\tspecified.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Schedules": {
      "properties": {
        "Schedule": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Schedule"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ServiceActivities": {
      "properties": {
        "ServiceActivity": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ServiceActivity"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ServiceActivity": {
      "properties": {
        "ActivityCode": {
          "type": "string"
        },
        "ActivitySeqNo": {
          "type": "string"
        },
        "ServiceActivityInstructions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ServiceActivityInstructions"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ServiceActivityInstruction": {
      "properties": {
        "InstructionText": {
          "description": "Free-form text indicating any additional information related to the instruction type or otherwise.",
          "type": "string"
        },
        "InstructionURL": {
          "description": "The URL relating to and/or containing the instructions.",
          "type": "string"
        },
        "SequenceNo": {
          "description": "You could have an instruction exceeding the limits of a single record. Sequence number is used to provide a way to store a link between such instructions.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ServiceActivityInstructions": {
      "properties": {
        "ServiceActivityInstruction": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ServiceActivityInstruction"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ServiceAssociation": {
      "properties": {
        "HoldSchedTillCompletion": {
          "description": "Flag to indicate whether to hold schedule till completion.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "header Key of the Order for which Association is defined.",
          "type": "string"
        },
        "OrderProdSerAssocKey": {
          "description": "Primary key for YFS_ORDER_PROD_SER_ASSOC table.",
          "type": "string"
        },
        "PricingProductQuantity": {
          "description": "Quantity used for using this option.",
          "type": "string"
        },
        "PricingServiceQuantity": {
          "description": "Quantity used for using this option.",
          "type": "string"
        },
        "ProductLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ProductLine"
        },
        "ProductQuantity": {
          "description": "Product quantity for which service quantity is stored in ServiceQuantity attribute.",
          "type": "string"
        },
        "ServiceLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ServiceLine"
        },
        "ServiceQuantity": {
          "description": "Service Capacity to be used for delivering (or servicing )product quantity mentioned.",
          "type": "string"
        },
        "ServiceTimeOffset": {
          "description": "Specifies the service time offset between services in Hours.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ServiceAssociations": {
      "properties": {
        "ServiceAssociation": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ServiceAssociation"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ServiceLine": {
      "properties": {
        "OrderLineKey": {
          "description": "Order line key of the associated service line.",
          "type": "string"
        },
        "PrimeLineNo": {
          "description": "Prime line number of the associated service line.",
          "type": "string"
        },
        "SubLineNo": {
          "description": "Sub line number of the associated service line.",
          "type": "string"
        },
        "TransactionalLineId": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ShipNode": {
      "properties": {
        "Description": {
          "description": "the description of the ship node.",
          "type": "string"
        },
        "IdentifiedByParentAs": {
          "description": "The store or distribution center identifier assigned by the parent organization.",
          "type": "string"
        },
        "OwnerKey": {
          "description": "The owner organization that is associated with this ship node.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.ShipNodePersonInfo": {
      "properties": {
        "AddressLine1": {
          "description": "The address line 1 field.",
          "type": "string"
        },
        "AddressLine2": {
          "description": "The address line 2 field.",
          "type": "string"
        },
        "AddressLine3": {
          "description": "The address line 3 field.",
          "type": "string"
        },
        "AddressLine4": {
          "description": "The address line 4 field.",
          "type": "string"
        },
        "AddressLine5": {
          "description": "The address line 5 field.",
          "type": "string"
        },
        "AddressLine6": {
          "description": "The address line 6 field.",
          "type": "string"
        },
        "AlternateEmailID": {
          "description": "The alternate email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "Beeper": {
          "description": "The beeper number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "City": {
          "description": "The city in the address.",
          "type": "string"
        },
        "Company": {
          "description": "The company this person is associated with.",
          "type": "string"
        },
        "Country": {
          "description": "The country in the address.",
          "type": "string"
        },
        "DayFaxNo": {
          "description": "The day time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "DayPhone": {
          "description": "The day time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "Department": {
          "description": "The primary department in charge of procurement.",
          "type": "string"
        },
        "EMailID": {
          "description": "The email address at which the person or a predesignated employee of the organization referred to in the address can be contacted.",
          "type": "string"
        },
        "ErrorTxt": {
          "description": "This field is currently not used.",
          "type": "string"
        },
        "EveningFaxNo": {
          "description": "The evening time fax at which the person or a predesignated employee of the organization referred to in the address can be notified.",
          "type": "string"
        },
        "EveningPhone": {
          "description": "The evening time phone at which the person or organization referred to in the address can be called.",
          "type": "string"
        },
        "FirstName": {
          "description": "The first name of the person.",
          "type": "string"
        },
        "HttpUrl": {
          "description": "The URL of the person or organization referred to in this contact information.",
          "type": "string"
        },
        "IsCommercialAddress": {
          "description": "Indicates whether the address is commercial, residential or none. Values of this field can be Y -Commercial address.N - Residential address. undefined for Null.",
          "type": "string"
        },
        "JobTitle": {
          "description": "The job title of the person.",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the person.",
          "type": "string"
        },
        "MiddleName": {
          "description": "The middle name of the person.",
          "type": "string"
        },
        "MobilePhone": {
          "description": "The mobile phone at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "OtherPhone": {
          "description": "The alternate phone number at which the person or a predesignated employee of the organization referred to in the address can be called.",
          "type": "string"
        },
        "PersonID": {
          "description": "The unique identifier for a person.",
          "type": "string"
        },
        "PersonInfoKey": {
          "description": "The primary key for the YFS_PERSON_INFO table.",
          "type": "string"
        },
        "PreferredShipAddress": {
          "description": "The preferred ship address over and above the address in this record. Pointer to another record of this type in this table.",
          "type": "string"
        },
        "State": {
          "description": "The state in the address.",
          "type": "string"
        },
        "Suffix": {
          "description": "The suffix for a person, such as Jr., or Sr.",
          "type": "string"
        },
        "TaxGeoCode": {
          "description": "The tax geo code for this location. Intended for future use.",
          "type": "string"
        },
        "Title": {
          "description": "The title for the person such as Ms., Mr., or Dr..",
          "type": "string"
        },
        "UseCount": {
          "description": "This field is currently not used.",
          "type": "string"
        },
        "VerificationStatus": {
          "description": "This field is currently not used.",
          "type": "string"
        },
        "ZipCode": {
          "description": "The zip code in the address.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Shipnode": {
      "properties": {
        "AcceptanceRequired": {
          "description": "This flag indicates whether acceptance is required by the ship node before processing orders for shipping.",
          "type": "string"
        },
        "ActivateFlag": {
          "description": "This flag indicates whether the ship node is active.",
          "type": "string"
        },
        "CanShipToAllNodes": {
          "description": "This flag indicates whether the node can ship to all node/node types.  Entries in YFS_NODE_CAN_SHIP_TO_NT table will be ignored if flag is Y.",
          "type": "string"
        },
        "CanShipToOtherAddresses": {
          "description": "This flag indicates whether the node can ship to other addresses.",
          "type": "string"
        },
        "ContactAddressKey": {
          "description": "The contact address that is associated with this ship node.",
          "type": "string"
        },
        "CurrentBolNumber": {
          "description": "The last generated BOL number.",
          "type": "string"
        },
        "DefaultDeclaredValue": {
          "description": "The default value the ship node may declare for its shipments.",
          "type": "string"
        },
        "Description": {
          "description": "the description of the ship node.",
          "type": "string"
        },
        "ExportLicenseExpDate": {
          "description": "The date by which an export license given to a ship node expires.",
          "type": "string"
        },
        "ExportLicenseNo": {
          "description": "The export license number given to the ship node.",
          "type": "string"
        },
        "ExportTaxpayerId": {
          "description": "The identifier of the tax payer for the ship node.",
          "type": "string"
        },
        "GenerateBolNumber": {
          "description": "This flag indicates whether the BOL number needs to be generated for this ship node.",
          "type": "string"
        },
        "IdentifiedByParentAs": {
          "description": "The store or distribution center identifier assigned by the parent organization.",
          "type": "string"
        },
        "InterfaceSubType": {
          "description": "A sub-classification of the interface type.",
          "type": "string"
        },
        "InterfaceType": {
          "description": "This field indicates the manner in which orders are passed to a ship node for servicing ( \"WMS_YANTRA\",\"YFX\",\"EVENTS\" ).",
          "type": "string"
        },
        "InventoryTracked": {
          "description": "This flag indicates whether the ship node tracks inventory. Valid values are 'Y' or 'N'. Default Value is 'Y'.",
          "type": "string"
        },
        "Inventorytype": {
          "description": "This field indicates whether the ship node tracks inventory. The value is defaulted to 'TRACK' if the flag InventoryTracked is set to 'Y' and it is defaulted to 'INFINITE' if flag InventoryTracked is set to 'N'.",
          "type": "string"
        },
        "IsItemBasedAllocationAllowed": {
          "description": "This flag indicates whether the node is allowed for Item-Based Allocation process.  Valid values: Y/N.  Default value: Y.",
          "type": "string"
        },
        "Latitude": {
          "description": "The latitude of this ship node.",
          "type": "string"
        },
        "Localecode": {
          "description": "The locale of the ship node.",
          "type": "string"
        },
        "Longitude": {
          "description": "The longitude of this ship node.",
          "type": "string"
        },
        "MaintainInventoryCost": {
          "description": "This flag indicates whether the ship node maintains inventory cost.",
          "type": "string"
        },
        "NodeType": {
          "description": "The type of the node.",
          "type": "string"
        },
        "OwnerKey": {
          "description": "The owner organization that is associated with this ship node.",
          "type": "string"
        },
        "OwnerType": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "PicklistType": {
          "description": "The type of pick-list that this ship node requires for picking.",
          "type": "string"
        },
        "ReceivingNode": {
          "description": "This flag indicates whether the ship node can perform receiving operations. This flag does not have any functionality. Reserved for future use.",
          "type": "string"
        },
        "RequiresChangeRequest": {
          "description": "This flag indicates whether the ship node requires change requests to manage order modifications after it is released to the node.",
          "type": "string"
        },
        "ReturnCenterFlag": {
          "description": "This flag indicates whether the ship node is a return center.",
          "type": "string"
        },
        "ReturnsNode": {
          "description": "This flag indicates whether the ship node can perform reverse logistic operations. This flag does not have any functionality. Reserved for future use.",
          "type": "string"
        },
        "ShipNode": {
          "description": "The unique identifier for the ship node.",
          "type": "string"
        },
        "ShipNodeAddressKey": {
          "description": "The address that is associated with this ship node.",
          "type": "string"
        },
        "ShipNodeClass": {
          "description": "The class of the ship node.",
          "type": "string"
        },
        "ShipNodePersonInfo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.ShipNodePersonInfo"
        },
        "ShipnodeKey": {
          "description": "The primary key for the YFS_SHIP_NODE table.",
          "type": "string"
        },
        "ShipnodeType": {
          "description": "The type of the ship node.",
          "type": "string"
        },
        "ShippingNode": {
          "description": "This flag indicates whether the ship node can perform shipping operations. This flag does not have any functionality. Reserved for future use.",
          "type": "string"
        },
        "SupplierKey": {
          "description": "The supplier who owns the ship node.",
          "type": "string"
        },
        "ThreePlNode": {
          "description": "This flag indicates whether the ship node is a 3PL node.",
          "type": "string"
        },
        "TimeDiff": {
          "description": "The time difference between the ship node and the place where the database is hosted from.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.SpecialService": {
      "properties": {
        "Action": {
          "type": "string"
        },
        "SpecialServicesCode": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.SpecialServices": {
      "properties": {
        "SpecialService": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.SpecialService"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.StopDeliveryRequest": {
      "properties": {
        "Comments": {
          "description": "Comments made in regards to this Stop Delivery Request.",
          "type": "string"
        },
        "RequestDate": {
          "description": "The date and time the stop request was made.",
          "type": "string"
        },
        "StopDeliveryRequestDetails": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.StopDeliveryRequestDetails"
        },
        "StopDeliveryRequestHeaderKey": {
          "description": "The primary key for the YFS_STOP_DEL_REQ_HDR table.",
          "type": "string"
        },
        "StopDeliveryRequestID": {
          "description": "The ID for this stop delivery request.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.StopDeliveryRequestDetail": {
      "properties": {
        "Comments": {
          "description": "Comments made in regards to this Stop Delivery Request Detail.",
          "type": "string"
        },
        "OrderLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLine"
        },
        "RequestedQty": {
          "description": "The quantity requested to stop delivery.",
          "type": "string"
        },
        "StopDeliveryRequestDetailKey": {
          "description": "The primary key for the YFS_STOP_DEL_REQ_DTL table.",
          "type": "string"
        },
        "StopDeliveryRequestDetailTranQuantity": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.StopDeliveryRequestDetailTranQuantity"
        },
        "SuccessfulQty": {
          "description": "The quantity that was successfully stopped.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.StopDeliveryRequestDetailTranQuantity": {
      "properties": {
        "RequestedQty": {
          "description": "The requested quantity in the transactional UOM\n\t\t\t\t\t\t\t\t\t\tfor this stop\n\t\t\t\t\t\t\t\t\t\tdelivery request detail.",
          "type": "string"
        },
        "SuccessfulQty": {
          "description": "The successful quantity in the transactional UOM\n\t\t\t\t\t\t\t\t\t\tfor this stop\n\t\t\t\t\t\t\t\t\t\tdelivery request detail.",
          "type": "string"
        },
        "TransactionalUOM": {
          "description": "UOM on which all the transactional quantities are\n\t\t\t\t\t\t\t\t\t\tspecified.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.StopDeliveryRequestDetails": {
      "properties": {
        "StopDeliveryRequestDetail": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.StopDeliveryRequestDetail"
          },
          "type": "array"
        },
        "TotalNumberOfRecords": {
          "description": "The total number of\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\telements returned.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.StopDeliveryRequests": {
      "properties": {
        "StopDeliveryRequest": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.StopDeliveryRequest"
          },
          "type": "array"
        },
        "TotalNumberOfRecords": {
          "description": "The total number of\n\t\t\t\t\t\t\n\t\t\t\t\t\telements returned.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.TaxSummary": {
      "properties": {
        "TaxSummaryDetail": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TaxSummaryDetail"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.TaxSummaryDetail": {
      "properties": {
        "InvoicedTax": {
          "description": "The amount of this tax which had been invoiced.",
          "type": "string"
        },
        "OverallTax": {
          "description": "The total amount of this tax.",
          "type": "string"
        },
        "RemainingTax": {
          "description": "The amount of this tax that has not been invoiced.",
          "type": "string"
        },
        "TaxName": {
          "description": "Tax name.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.Transaction": {
      "properties": {
        "AgentJavaClass": {
          "description": "The java class used for consuming work flow messages being sent to a pipeline.",
          "type": "string"
        },
        "BaseProcessTypeListenedTo": {
          "description": "The base process type that the transaction listens to for status changes that may be needed to apply status changes to other entities.",
          "type": "string"
        },
        "BaseTransactionKey": {
          "description": "The base transaction that is associated with this transaction.",
          "type": "string"
        },
        "ChainedDocumentType": {
          "description": "The chained document type.",
          "type": "string"
        },
        "DerivedDocumentType": {
          "description": "The derived document type.",
          "type": "string"
        },
        "DerivedFromAbstract": {
          "description": "This flag indicates whether the transaction is derived from an abstract transaction.",
          "type": "string"
        },
        "DropStatusFilter": {
          "description": "This field indicates how drop statuses will be filtered.",
          "type": "string"
        },
        "ExternallyTriggerable": {
          "description": "This flag indicates whether this transaction is externally triggerable.",
          "type": "string"
        },
        "ExternallyTriggered": {
          "description": "This flag indicates whether the transaction is externally triggered.",
          "type": "string"
        },
        "IsManual": {
          "description": "This flag indicates whether this is a manual transaction requiring human intervention.",
          "type": "string"
        },
        "ListenerType": {
          "description": "This field indicates the type of the listener transaction. Each process type to process type combination consistutes a different listener type.",
          "type": "string"
        },
        "OperationLevel": {
          "description": "This is a common code and application defined. This column indicates the level at which the transaction operates. In specific applications, the operation level can be assigned at either the header or at line level of the transaction. When the header level operation is used, all lines associated to the header will be also be changed. On the other hand, if the operation is defined at the line level, only the specified line will be changed and its associated header will not be affected.",
          "type": "string"
        },
        "OwnerKey": {
          "description": "The owner organization that is associated with this transaction.",
          "type": "string"
        },
        "PickStatusFilter": {
          "description": "This field indicates how pickup statuses will be filtered.",
          "type": "string"
        },
        "PreDefined": {
          "description": "This flag indicates whether the transaction is a predefined transaction.",
          "type": "string"
        },
        "ProcessTypeKey": {
          "description": "The process type that is associated with this transaction.",
          "type": "string"
        },
        "RequiresChainedDocType": {
          "description": "This flag indicates whether this transaction requires a chained document type.",
          "type": "string"
        },
        "RequiresDerivedDocType": {
          "description": "This field indicates whether derived document types are required.",
          "type": "string"
        },
        "SingleDropStatus": {
          "description": "This flag indicates whether this transaction can only have one drop status.",
          "type": "string"
        },
        "SpawnedProcessTypeKey": {
          "description": "The process type that this transaction spawns.",
          "type": "string"
        },
        "SpawnsPipeline": {
          "description": "This flag indicates whether a new type of process is spawned by this transaction.",
          "type": "string"
        },
        "SupportsOperationLevel": {
          "description": "This is a boolean that identifies whether a transaction supports operation level. For a non-derived user transaction, this is N. For a derived user transaction, the value is carried over from the abstract base transaction .",
          "type": "string"
        },
        "TaskQKeyType": {
          "description": "The type of tasks this transaction processes. This field is used by the workflow engine to determine if tasks needs be created for this transaction upon completion by other transaction.",
          "type": "string"
        },
        "TimeTriggerable": {
          "description": "This flag indicates whether this transaction is time triggerable.",
          "type": "string"
        },
        "TimeTriggered": {
          "description": "This flag indicates whether the transaction is time triggered.",
          "type": "string"
        },
        "TranSequence": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "Trangroup": {
          "description": "The group identifier for the transaction. This field can be used to better organize the transactions.",
          "type": "string"
        },
        "Tranid": {
          "description": "The unique identifier for a transaction.",
          "type": "string"
        },
        "Tranname": {
          "description": "The name of the transaction.",
          "type": "string"
        },
        "TransactionKey": {
          "description": "The primary key for the YFS_TRANSACTION table.",
          "type": "string"
        },
        "Trantype": {
          "description": "This field indicates the type of the transaction.",
          "type": "string"
        },
        "UserTaskFlowKey": {
          "description": "The identifier of the user task flow associated with a transaction.",
          "type": "string"
        },
        "UserTriggerable": {
          "description": "This flag indicates whether this transaction is user-triggerable.",
          "type": "string"
        },
        "WorksOffTaskQ": {
          "description": "this flag indicates whether a task queue record needs to be created for this transaction. Tasks are created if a document reaches the status picked by this transaction.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.TransactionApprovalStatus": {
      "properties": {
        "ApproverComments": {
          "description": "Place Holder to capture comments entered by the approver.",
          "type": "string"
        },
        "ApproverSequence": {
          "description": "The sequence of the approver.",
          "type": "string"
        },
        "ApproverUserID": {
          "description": "The UserID of the user who has approved or rejected the violation.",
          "type": "string"
        },
        "IsMandatory": {
          "description": "Indicator to determine if approval is mandatory based on the signature policy of the validation definition.",
          "type": "string"
        },
        "PreviousApproverSequence": {
          "description": "The sequence of the previous approver.",
          "type": "string"
        },
        "Status": {
          "description": "The status of the approval.",
          "type": "string"
        },
        "TransactionApprovalStatusKey": {
          "type": "string"
        },
        "TransactionViolation": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TransactionViolation"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.TransactionApprovalStatusList": {
      "properties": {
        "TotalNumberOfRecords": {
          "description": "Total number of Approval Statuses for an Approver.",
          "type": "string"
        },
        "TransactionApprovalStatus": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TransactionApprovalStatus"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.TransactionApprover": {
      "properties": {
        "ApproverUserGroupID": {
          "description": "The User Group that can approve the violation.",
          "type": "string"
        },
        "ApproverUserTeam": {
          "description": "The Team that can approve the violation.",
          "type": "string"
        },
        "DelegateUserID": {
          "description": "The UserID of the delegate that has been assigned to approve the violation on behalf on the main UserID.",
          "type": "string"
        },
        "TransactionApprovalStatusList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TransactionApprovalStatusList"
        },
        "TransactionApproverKey": {
          "description": "Primary Key attribute of YFS_TRANSACTION_APPROVER.",
          "type": "string"
        },
        "UserID": {
          "description": "The UserID of the user that can approve the violation.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.TransactionApproverList": {
      "properties": {
        "TotalNumberOfRecords": {
          "description": "Total number of Approvers for the Violation.",
          "type": "string"
        },
        "TransactionApprover": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TransactionApprover"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.TransactionInfo": {
      "properties": {
        "OrderHeaderKey": {
          "description": "Primary key for YFS_ORDER_HEADER",
          "type": "string"
        },
        "OrderLineKey": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.TransactionViolation": {
      "properties": {
        "ApprovalRuleID": {
          "description": "ID of Approval Rule that caused violation.",
          "type": "string"
        },
        "Domain": {
          "description": "Domain of the corresponding Validation.",
          "type": "string"
        },
        "MessageCode": {
          "description": "Message code to be displayed when approval rule is violated.",
          "type": "string"
        },
        "OrganizationCode": {
          "description": "Organization Code of org that owns the rule.",
          "type": "string"
        },
        "SequenceNumber": {
          "description": "Number to identify the violation sequence within a transaction.",
          "type": "string"
        },
        "Status": {
          "description": "The status of the violation.",
          "type": "string"
        },
        "TransactionInfo": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TransactionInfo"
        },
        "TransactionInfoID": {
          "description": "The Reference to the transaction that resulted in a violation.",
          "type": "string"
        },
        "TransactionViolationKey": {
          "description": "Primary Key attribute of YFS_TRANSACTION_VIOLATION.",
          "type": "string"
        },
        "TransactionViolationReferenceList": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TransactionViolationReferenceList"
        },
        "ValidationID": {
          "description": "The Validation that this the rule belongs to.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.TransactionViolationReference": {
      "properties": {
        "ReferenceName": {
          "description": "The identifier for the additional reference value.",
          "type": "string"
        },
        "ReferenceValue": {
          "description": "Value of the additional reference.",
          "type": "string"
        },
        "TransactionViolationReferenceKey": {
          "description": "Primary Key attribute of YFS_TRANSACTION_VIOLATION_REFERENCE.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.TransactionViolationReferenceList": {
      "properties": {
        "TotalNumberOfRecords": {
          "description": "Total number of References for a Violation",
          "type": "string"
        },
        "TransactionViolationReference": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.TransactionViolationReference"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.TransferFromOrder": {
      "properties": {
        "AllocationRuleID": {
          "description": "The identifier of the scheduling rule to be used while checking inventory availability.  If not passed, the allocation rule with the ID 'SYSTEM' for the enterprise is used. If the allocation rule with the ID 'SYSTEM' is not found, the allocation rule with the ID 'SYSTEM' for the enterprise 'DEFAULT' is used.",
          "type": "string"
        },
        "AuthorizationExpirationDate": {
          "description": "The smallest expiration date of currently valid expirations. This field is used by the system payment processing agents. Any transaction having a financial implication will set this date to current system date. This field is used as a trigger by payment processing agents to create charge and authorization reqeusts.",
          "type": "string"
        },
        "AuthorizedClient": {
          "description": "The owner channel of the order.",
          "type": "string"
        },
        "AutoCancelDate": {
          "description": "The date on which the order will automatically be cancelled. If not provided, it is defaulted as null on order creation. This date can be set or reset at any point in time by calling changeorder API.",
          "type": "string"
        },
        "BillToID": {
          "description": "The identifier of the bill to customer.  If a customer definition representing the buyer organization exists within the system, the BillToID can represent the CustomerID of the customer.  Otherwise, the BillToID can represent the PersonID of the bill to address or the BuyerOrganizationCode of the buyer organization.",
          "type": "string"
        },
        "BuyerOrganizationCode": {
          "description": "The buyer organization that is associated with this order. This must be a valid organization defined in the system.",
          "type": "string"
        },
        "BuyerUserId": {
          "description": "This is the User Id of the customer for which order is created. This field maps to User_Id field of YFS_Customer_Contact.",
          "type": "string"
        },
        "CarrierAccountNo": {
          "description": "The account number of the customer with the carrier.",
          "type": "string"
        },
        "CarrierServiceCode": {
          "description": "The carrier service code for this order.",
          "type": "string"
        },
        "ChainType": {
          "description": "Specifies the chaining type of the order.",
          "type": "string"
        },
        "ChargeActualFreightFlag": {
          "description": "This flag indicates whether the actual freight charges should be passed on to the customer. If set to 'Y', invoicing picks up charges from shipments and uses that to invoice the customer.",
          "type": "string"
        },
        "CustomerContactID": {
          "description": "This is the customer contact ID for the order. This field maps to contact ID field of YFS_Customer_Contact.",
          "type": "string"
        },
        "CustomerEMailID": {
          "description": "The E-mail ID of the customer.",
          "type": "string"
        },
        "CustomerPONo": {
          "description": "The PO number of the customer. For purchase orders, this can be used for storing the purchase order number of the purchasing system if that number is not already stored as part of the order number.",
          "type": "string"
        },
        "DefaultCustomerInformation": {
          "type": "string"
        },
        "DeliveryCode": {
          "description": "The organization that pays the freight charges. For example, SUPPLIER, ENTERPRISE, and MARKETPLACE. However, you could pass any other value which is a valid shipment charge type as understood by the carrier by which the shipment is transported. See YFS_SHIPMENT_CONTAINER.carrier_payment_type for additional information.",
          "type": "string"
        },
        "Division": {
          "description": "The order classification attribute. This field can be used for reporting purposes. Sterling Selling And Fulfillment Suite system has no logic based on this field.",
          "type": "string"
        },
        "DocumentType": {
          "description": "The document type that is associated with this order. For example, Sales Order document (0001), Planned Order document (0002), Return Order document (0003) , and Purchase Order document (0005). This field determines the order's fulfillment cycle and controls the inventory and payment updates performed on the order.",
          "type": "string"
        },
        "DraftOrderFlag": {
          "description": "This flag indicates whether the order is yet to be confirmed. Order lines can only be deleted from the system in draft stage. This flag is not applicable for Quotes.",
          "type": "string"
        },
        "DriverDate": {
          "description": "Date used to driver order processing. '01'\n\t\t\t\t\t\t\t\t\trepresents ReqShipDate, '02' represents ReqDeliveryDate.",
          "type": "string"
        },
        "EnteredBy": {
          "description": "The system or sales person who created the order.",
          "type": "string"
        },
        "EnterpriseCode": {
          "description": "The enterprise that is associated with this order.",
          "type": "string"
        },
        "EntryType": {
          "description": "The channel through which this order was created.",
          "type": "string"
        },
        "ExchangeType": {
          "description": "This field indicates the exchange type of the order. The payment processing logic is dependent on this attribute.",
          "type": "string"
        },
        "FreightTerms": {
          "description": "Indicates Freight Terms for the order.",
          "type": "string"
        },
        "HasChainedLines": {
          "type": "string"
        },
        "HasDeliveryLines": {
          "type": "string"
        },
        "HasProductLines": {
          "type": "string"
        },
        "HasServiceLines": {
          "type": "string"
        },
        "HoldFlag": {
          "type": "string"
        },
        "HoldReasonCode": {
          "description": "The reason code for putting the order on hold.",
          "type": "string"
        },
        "LevelOfService": {
          "description": "Indicates the level of service required for this order.  Default is Null.",
          "type": "string"
        },
        "MaxOrderStatus": {
          "description": "Maximum order status based on all records that\n\t\t\t\t\t\t\t\t\tbelong to an order.",
          "type": "string"
        },
        "MaxOrderStatusDesc": {
          "description": "Description of maximum order status based on all\n\t\t\t\t\t\t\t\t\trecords that belong to an order.",
          "type": "string"
        },
        "MinOrderStatus": {
          "description": "Minimum order status based on all records that\n\t\t\t\t\t\t\t\t\tbelong to an order.",
          "type": "string"
        },
        "MinOrderStatusDesc": {
          "description": "Description of minimum order status based on all\n\t\t\t\t\t\t\t\t\trecords that belong to an order.",
          "type": "string"
        },
        "MultipleStatusesExist": {
          "description": "If order is in more than one status then this flag\n\t\t\t\t\t\t\t\t\twill be returned as \"Y\".",
          "type": "string"
        },
        "NotificationReference": {
          "description": "This field provides details on notifications based on the notification type. For example, for notification type 'e-mail' this would be the e-mail address. This field is not used within the application.",
          "type": "string"
        },
        "NotificationType": {
          "description": "This field is not used within the application. It is published with events so that external decisions can be made based on it.",
          "type": "string"
        },
        "NotifyAfterShipmentFlag": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "OrderDate": {
          "description": "The date on which the order was taken. If not passed during order creation, it is defaulted to current system date.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The primary key for the YFS_ORDER_HEADER table.",
          "type": "string"
        },
        "OrderName": {
          "description": "The name given to the order.",
          "type": "string"
        },
        "OrderNo": {
          "description": "The number of the order, which can be passed during order creation or generated based on a system rule setting.",
          "type": "string"
        },
        "OrderPurpose": {
          "description": "This indicates what, if any, specific purpose this order was created for. The only valid value is 'EXCHANGE' which means the order is created for exchange purpose. But, the system may create an order with OrderPurpose of REFUND for internal use.",
          "type": "string"
        },
        "OrderType": {
          "description": "The order classification attribute. This field can be used for reporting purposes or to build conditions for modeling your business process. Sterling Selling And Fulfillment Suite system has no default logic based on this field.",
          "type": "string"
        },
        "OriginalTax": {
          "description": "Total tax amount at the time of the order creation.This attribute only reflects the header tax.This field is not updated later in the cycle and can be used to track changes made since the order creation.",
          "type": "string"
        },
        "OriginalTotalAmount": {
          "description": "The total amount at the time of the order creation. This field is not updated later in the cycle and can be used to track changes made since the order creation.",
          "type": "string"
        },
        "OtherCharges": {
          "description": "The sum of the other charges at the header level.",
          "type": "string"
        },
        "PaymentStatus": {
          "description": "The information about the payment status of the order.",
          "type": "string"
        },
        "PendingTransferIn": {
          "description": "The amount of funds available for the exchange order. This is the same as the total order amount of the return order.",
          "type": "string"
        },
        "PersonalizeCode": {
          "description": "The code that describes the personalization required for the order.",
          "type": "string"
        },
        "PriceProgramKey": {
          "description": "The price program that is associated with this order.",
          "type": "string"
        },
        "PriorityCode": {
          "description": "The priority code of the order. External logic can be built for prioritizing orders.",
          "type": "string"
        },
        "PriorityNumber": {
          "description": "The numeric priority code as opposed to alphanumeric field PRIORITY_CODE.",
          "type": "string"
        },
        "ProcessPaymentOnReturnOrder": {
          "description": "Indicates that payment methods should be copied\n\t\t\t\t\t\t\t\t\tonto\n\t\t\t\t\t\t\t\t\tthe return order and that refunds should be processed there, as\n\t\t\t\t\t\t\t\t\topposed to the original sales order. This is only valid for\n\t\t\t\t\t\t\t\t\treturn orders.",
          "type": "string"
        },
        "Purpose": {
          "description": "This field is passed out in the tax calculation user exits.",
          "type": "string"
        },
        "ReceivingNode": {
          "description": "The node an order is to be shipped to.",
          "type": "string"
        },
        "ReqCancelDate": {
          "description": "The requested cancel date. If this date is in the future, the order will be scheduled only up to this date. If this date is in the past, the order can be scheduled for shipping today as long as it has not been cancelled already. The order line level cancel date overrides this attribute.",
          "type": "string"
        },
        "ReqDeliveryDate": {
          "description": "The requested delivery date. This date is stamped on order lines (as requested delivery date) during order creation if no requested delivery date was passed at the order line level.",
          "type": "string"
        },
        "ReqShipDate": {
          "description": "The date the customer has requested the order to be shipped on. Based on the 'Driver Date' parameter of the document type, the ship date or delivery date will be calculated based on transit time calculations (if not passed at order creation).",
          "type": "string"
        },
        "ReturnByGiftRecipient": {
          "description": "This flag indicates whether the return was initiated by the gift recipient. This field is only used by return orders.",
          "type": "string"
        },
        "ReturnOrderHeaderKeyForExchange": {
          "description": "The return order header key for which this exchange order was created.",
          "type": "string"
        },
        "SCAC": {
          "description": "The carrier assigned to the order.",
          "type": "string"
        },
        "ScacAndService": {
          "description": "Value of SCAC and Service code.",
          "type": "string"
        },
        "ScacAndServiceKey": {
          "description": "Link to YFS_SCAC_AND_SERVICE table.",
          "type": "string"
        },
        "SearchCriteria1": {
          "description": "This field is provided for allowing custom searches. You can decide at implementation time what should be stored in this field.",
          "type": "string"
        },
        "SearchCriteria2": {
          "description": "This field is provided for allowing custom searches. You can decide at implementation time what should be stored in this field.",
          "type": "string"
        },
        "SellerOrganizationCode": {
          "description": "The seller organization that is associated with this order. This must be a valid organization defined in the system.",
          "type": "string"
        },
        "ShipToID": {
          "description": "The identifier of the ship to customer.  If a customer definition representing the buyer organization exists within the system, the ShipToID can represent the CustomerID of the customer.  Otherwise, the ShipToID can represent the PersonID of the ship to address or the receiving node of the order.",
          "type": "string"
        },
        "Status": {
          "description": "Status description of the order.",
          "type": "string"
        },
        "TaxExemptFlag": {
          "description": "This flag indicates whether the buyer is extempt from paying taxes.",
          "type": "string"
        },
        "TaxExemptionCertificate": {
          "description": "The buyer's tax exemption certificate.",
          "type": "string"
        },
        "TaxJurisdiction": {
          "description": "The tax jurisdiction of the buyer.",
          "type": "string"
        },
        "TaxPayerId": {
          "description": "The identifier of the buyer.",
          "type": "string"
        },
        "TermsCode": {
          "description": "The terms code of the order. This is passed on to the invoice and published with the invoice.",
          "type": "string"
        },
        "TotalAdjustmentAmount": {
          "description": "the sum of all the credit and debit memos issued against this order.",
          "type": "string"
        },
        "VendorID": {
          "description": "The seller's vendor identifier, as defined by the buyer.",
          "type": "string"
        },
        "isHistory": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.TransferToOrder": {
      "properties": {
        "AllocationRuleID": {
          "description": "The identifier of the scheduling rule to be used while checking inventory availability.  If not passed, the allocation rule with the ID 'SYSTEM' for the enterprise is used. If the allocation rule with the ID 'SYSTEM' is not found, the allocation rule with the ID 'SYSTEM' for the enterprise 'DEFAULT' is used.",
          "type": "string"
        },
        "AuthorizationExpirationDate": {
          "description": "The smallest expiration date of currently valid expirations. This field is used by the system payment processing agents. Any transaction having a financial implication will set this date to current system date. This field is used as a trigger by payment processing agents to create charge and authorization reqeusts.",
          "type": "string"
        },
        "AuthorizedClient": {
          "description": "The owner channel of the order.",
          "type": "string"
        },
        "AutoCancelDate": {
          "description": "The date on which the order will automatically be cancelled. If not provided, it is defaulted as null on order creation. This date can be set or reset at any point in time by calling changeorder API.",
          "type": "string"
        },
        "BillToID": {
          "description": "The identifier of the bill to customer.  If a customer definition representing the buyer organization exists within the system, the BillToID can represent the CustomerID of the customer.  Otherwise, the BillToID can represent the PersonID of the bill to address or the BuyerOrganizationCode of the buyer organization.",
          "type": "string"
        },
        "BuyerOrganizationCode": {
          "description": "The buyer organization that is associated with this order. This must be a valid organization defined in the system.",
          "type": "string"
        },
        "BuyerUserId": {
          "description": "This is the User Id of the customer for which order is created. This field maps to User_Id field of YFS_Customer_Contact.",
          "type": "string"
        },
        "CarrierAccountNo": {
          "description": "The account number of the customer with the carrier.",
          "type": "string"
        },
        "CarrierServiceCode": {
          "description": "The carrier service code for this order.",
          "type": "string"
        },
        "ChainType": {
          "description": "Specifies the chaining type of the order.",
          "type": "string"
        },
        "ChargeActualFreightFlag": {
          "description": "This flag indicates whether the actual freight charges should be passed on to the customer. If set to 'Y', invoicing picks up charges from shipments and uses that to invoice the customer.",
          "type": "string"
        },
        "CustomerContactID": {
          "description": "This is the customer contact ID for the order. This field maps to contact ID field of YFS_Customer_Contact.",
          "type": "string"
        },
        "CustomerEMailID": {
          "description": "The E-mail ID of the customer.",
          "type": "string"
        },
        "CustomerPONo": {
          "description": "The PO number of the customer. For purchase orders, this can be used for storing the purchase order number of the purchasing system if that number is not already stored as part of the order number.",
          "type": "string"
        },
        "DefaultCustomerInformation": {
          "type": "string"
        },
        "DeliveryCode": {
          "description": "The organization that pays the freight charges. For example, SUPPLIER, ENTERPRISE, and MARKETPLACE. However, you could pass any other value which is a valid shipment charge type as understood by the carrier by which the shipment is transported. See YFS_SHIPMENT_CONTAINER.carrier_payment_type for additional information.",
          "type": "string"
        },
        "Division": {
          "description": "The order classification attribute. This field can be used for reporting purposes. Sterling Selling And Fulfillment Suite system has no logic based on this field.",
          "type": "string"
        },
        "DocumentType": {
          "description": "The document type that is associated with this order. For example, Sales Order document (0001), Planned Order document (0002), Return Order document (0003) , and Purchase Order document (0005). This field determines the order's fulfillment cycle and controls the inventory and payment updates performed on the order.",
          "type": "string"
        },
        "DraftOrderFlag": {
          "description": "This flag indicates whether the order is yet to be confirmed. Order lines can only be deleted from the system in draft stage. This flag is not applicable for Quotes.",
          "type": "string"
        },
        "DriverDate": {
          "description": "Date used to driver order processing. '01'\n\t\t\t\t\t\t\t\t\trepresents ReqShipDate, '02' represents ReqDeliveryDate.",
          "type": "string"
        },
        "EnteredBy": {
          "description": "The system or sales person who created the order.",
          "type": "string"
        },
        "EnterpriseCode": {
          "description": "The enterprise that is associated with this order.",
          "type": "string"
        },
        "EntryType": {
          "description": "The channel through which this order was created.",
          "type": "string"
        },
        "ExchangeType": {
          "description": "This field indicates the exchange type of the order. The payment processing logic is dependent on this attribute.",
          "type": "string"
        },
        "FreightTerms": {
          "description": "Indicates Freight Terms for the order.",
          "type": "string"
        },
        "HasChainedLines": {
          "type": "string"
        },
        "HasDeliveryLines": {
          "type": "string"
        },
        "HasProductLines": {
          "type": "string"
        },
        "HasServiceLines": {
          "type": "string"
        },
        "HoldFlag": {
          "type": "string"
        },
        "HoldReasonCode": {
          "description": "The reason code for putting the order on hold.",
          "type": "string"
        },
        "LevelOfService": {
          "description": "Indicates the level of service required for this order.  Default is Null.",
          "type": "string"
        },
        "MaxOrderStatus": {
          "description": "Maximum order status based on all records that\n\t\t\t\t\t\t\t\t\tbelong to an order.",
          "type": "string"
        },
        "MaxOrderStatusDesc": {
          "description": "Description of maximum order status based on all\n\t\t\t\t\t\t\t\t\trecords that belong to an order.",
          "type": "string"
        },
        "MinOrderStatus": {
          "description": "Minimum order status based on all records that\n\t\t\t\t\t\t\t\t\tbelong to an order.",
          "type": "string"
        },
        "MinOrderStatusDesc": {
          "description": "Description of minimum order status based on all\n\t\t\t\t\t\t\t\t\trecords that belong to an order.",
          "type": "string"
        },
        "MultipleStatusesExist": {
          "description": "If order is in more than one status then this flag\n\t\t\t\t\t\t\t\t\twill be returned as \"Y\".",
          "type": "string"
        },
        "NotificationReference": {
          "description": "This field provides details on notifications based on the notification type. For example, for notification type 'e-mail' this would be the e-mail address. This field is not used within the application.",
          "type": "string"
        },
        "NotificationType": {
          "description": "This field is not used within the application. It is published with events so that external decisions can be made based on it.",
          "type": "string"
        },
        "NotifyAfterShipmentFlag": {
          "description": "This field is not currently used.",
          "type": "string"
        },
        "OrderDate": {
          "description": "The date on which the order was taken. If not passed during order creation, it is defaulted to current system date.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The primary key for the YFS_ORDER_HEADER table.",
          "type": "string"
        },
        "OrderName": {
          "description": "The name given to the order.",
          "type": "string"
        },
        "OrderNo": {
          "description": "The number of the order, which can be passed during order creation or generated based on a system rule setting.",
          "type": "string"
        },
        "OrderPurpose": {
          "description": "This indicates what, if any, specific purpose this order was created for. The only valid value is 'EXCHANGE' which means the order is created for exchange purpose. But, the system may create an order with OrderPurpose of REFUND for internal use.",
          "type": "string"
        },
        "OrderType": {
          "description": "The order classification attribute. This field can be used for reporting purposes or to build conditions for modeling your business process. Sterling Selling And Fulfillment Suite system has no default logic based on this field.",
          "type": "string"
        },
        "OriginalTax": {
          "description": "Total tax amount at the time of the order creation.This attribute only reflects the header tax.This field is not updated later in the cycle and can be used to track changes made since the order creation.",
          "type": "string"
        },
        "OriginalTotalAmount": {
          "description": "The total amount at the time of the order creation. This field is not updated later in the cycle and can be used to track changes made since the order creation.",
          "type": "string"
        },
        "OtherCharges": {
          "description": "The sum of the other charges at the header level.",
          "type": "string"
        },
        "PaymentStatus": {
          "description": "The information about the payment status of the order.",
          "type": "string"
        },
        "PendingTransferIn": {
          "description": "The amount of funds available for the exchange order. This is the same as the total order amount of the return order.",
          "type": "string"
        },
        "PersonalizeCode": {
          "description": "The code that describes the personalization required for the order.",
          "type": "string"
        },
        "PriceProgramKey": {
          "description": "The price program that is associated with this order.",
          "type": "string"
        },
        "PriorityCode": {
          "description": "The priority code of the order. External logic can be built for prioritizing orders.",
          "type": "string"
        },
        "PriorityNumber": {
          "description": "The numeric priority code as opposed to alphanumeric field PRIORITY_CODE.",
          "type": "string"
        },
        "ProcessPaymentOnReturnOrder": {
          "description": "Indicates that payment methods should be copied\n\t\t\t\t\t\t\t\t\tonto\n\t\t\t\t\t\t\t\t\tthe return order and that refunds should be processed there, as\n\t\t\t\t\t\t\t\t\topposed to the original sales order. This is only valid for\n\t\t\t\t\t\t\t\t\treturn orders.",
          "type": "string"
        },
        "Purpose": {
          "description": "This field is passed out in the tax calculation user exits.",
          "type": "string"
        },
        "ReceivingNode": {
          "description": "The node an order is to be shipped to.",
          "type": "string"
        },
        "ReqCancelDate": {
          "description": "The requested cancel date. If this date is in the future, the order will be scheduled only up to this date. If this date is in the past, the order can be scheduled for shipping today as long as it has not been cancelled already. The order line level cancel date overrides this attribute.",
          "type": "string"
        },
        "ReqDeliveryDate": {
          "description": "The requested delivery date. This date is stamped on order lines (as requested delivery date) during order creation if no requested delivery date was passed at the order line level.",
          "type": "string"
        },
        "ReqShipDate": {
          "description": "The date the customer has requested the order to be shipped on. Based on the 'Driver Date' parameter of the document type, the ship date or delivery date will be calculated based on transit time calculations (if not passed at order creation).",
          "type": "string"
        },
        "ReturnByGiftRecipient": {
          "description": "This flag indicates whether the return was initiated by the gift recipient. This field is only used by return orders.",
          "type": "string"
        },
        "ReturnOrderHeaderKeyForExchange": {
          "description": "The return order header key for which this exchange order was created.",
          "type": "string"
        },
        "SCAC": {
          "description": "The carrier assigned to the order.",
          "type": "string"
        },
        "ScacAndService": {
          "description": "Value of SCAC and Service code.",
          "type": "string"
        },
        "ScacAndServiceKey": {
          "description": "Link to YFS_SCAC_AND_SERVICE table.",
          "type": "string"
        },
        "SearchCriteria1": {
          "description": "This field is provided for allowing custom searches. You can decide at implementation time what should be stored in this field.",
          "type": "string"
        },
        "SearchCriteria2": {
          "description": "This field is provided for allowing custom searches. You can decide at implementation time what should be stored in this field.",
          "type": "string"
        },
        "SellerOrganizationCode": {
          "description": "The seller organization that is associated with this order. This must be a valid organization defined in the system.",
          "type": "string"
        },
        "ShipToID": {
          "description": "The identifier of the ship to customer.  If a customer definition representing the buyer organization exists within the system, the ShipToID can represent the CustomerID of the customer.  Otherwise, the ShipToID can represent the PersonID of the ship to address or the receiving node of the order.",
          "type": "string"
        },
        "Status": {
          "description": "Status description of the order.",
          "type": "string"
        },
        "TaxExemptFlag": {
          "description": "This flag indicates whether the buyer is extempt from paying taxes.",
          "type": "string"
        },
        "TaxExemptionCertificate": {
          "description": "The buyer's tax exemption certificate.",
          "type": "string"
        },
        "TaxJurisdiction": {
          "description": "The tax jurisdiction of the buyer.",
          "type": "string"
        },
        "TaxPayerId": {
          "description": "The identifier of the buyer.",
          "type": "string"
        },
        "TermsCode": {
          "description": "The terms code of the order. This is passed on to the invoice and published with the invoice.",
          "type": "string"
        },
        "TotalAdjustmentAmount": {
          "description": "the sum of all the credit and debit memos issued against this order.",
          "type": "string"
        },
        "VendorID": {
          "description": "The seller's vendor identifier, as defined by the buyer.",
          "type": "string"
        },
        "isHistory": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.UnprocessedLines": {
      "properties": {
        "OrderLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLine"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.User": {
      "properties": {
        "Username": {
          "description": "The name of the user.",
          "type": "string"
        },
        "Usertype": {
          "description": "This field indicates the user type.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.WorkOrder": {
      "properties": {
        "AdditionalRequestedQuantity": {
          "description": "The quantity for which the work order is created.",
          "type": "string"
        },
        "ApptStatusDescription": {
          "type": "string"
        },
        "CaseId": {
          "type": "string"
        },
        "ComputedRequestedQuantity": {
          "description": "The quantity for which the work order is created based on service lines.",
          "type": "string"
        },
        "CurrentApptSeq": {
          "type": "string"
        },
        "DelayAppointmentTaking": {
          "description": "This flag indicates whether the taking of appointment can be delayed or not.",
          "type": "string"
        },
        "DocumentType": {
          "description": "The document type for this work order.",
          "type": "string"
        },
        "EnterpriseCode": {
          "description": "The code of the enterprise to which the item or license plate belongs.",
          "type": "string"
        },
        "FinishNoLaterThan": {
          "description": "The date a task should not finish later than. Pass through fields to be stamped on each task.",
          "type": "string"
        },
        "HoldFlag": {
          "description": "This flag indicates whether the work order has any non-resolved hold type.",
          "type": "string"
        },
        "Instructions": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.Instructions"
        },
        "InvUpdateActivityCode": {
          "description": "The activity code against which inventory needs to be updated.",
          "type": "string"
        },
        "IsMultiApptRequired": {
          "description": "This flag indicates whether the work order can have multiple appointments.",
          "type": "string"
        },
        "IsPlanningComplete": {
          "description": "This flag indicates whether work order planning has been completed.",
          "type": "string"
        },
        "IsQuantityRequestedOverridden": {
          "description": "This flag indicates whether the requested quantity is overridden.",
          "type": "string"
        },
        "ItemID": {
          "description": "The item identifier for this work order.",
          "type": "string"
        },
        "LevelOfService": {
          "description": "Indicates the level of service required for this work order.  Default from corresponding order lines.",
          "type": "string"
        },
        "NextAlertTs": {
          "description": "This field indicates the next time the work order would be considered for monitoring.",
          "type": "string"
        },
        "NodeKey": {
          "description": "The node associated with this work order, where work orders would be executed.",
          "type": "string"
        },
        "OpenWorkOrderFlag": {
          "description": "This flag indicates whether the execution of the work order has ended.",
          "type": "string"
        },
        "OrderHeaderKey": {
          "description": "The order that is associated with this work order.",
          "type": "string"
        },
        "OrderLineKey": {
          "description": "The order line associated with this work order.",
          "type": "string"
        },
        "OrderNo": {
          "description": "The order number of the order with which the work order is associated.",
          "type": "string"
        },
        "PalletId": {
          "type": "string"
        },
        "PipeLineKey": {
          "description": "The pipeline associated with this work order. This is determined by the document type and several other key attributes of the work order.",
          "type": "string"
        },
        "PreCallStatus": {
          "description": "This field indicates the status of the pre-call process.",
          "type": "string"
        },
        "PreCallStatusDescription": {
          "type": "string"
        },
        "PreferredResourcePoolId": {
          "description": "The preferred resource pool.",
          "type": "string"
        },
        "PreferredServiceResourceId": {
          "description": "The preferred service resource.",
          "type": "string"
        },
        "Priority": {
          "description": "An integer priority. Requests will be processed in the order of this priority.",
          "type": "string"
        },
        "ProductAmount": {
          "description": "The total value of the product items on the work order.",
          "type": "string"
        },
        "ProductClass": {
          "description": "The product class of an item.",
          "type": "string"
        },
        "PromisedApptEndDate": {
          "description": "The promised end date of the appointment. Used in case of provided service work order.",
          "type": "string"
        },
        "PromisedApptStartDate": {
          "description": "The promised start date of the appointment. Used in case of provided service work order.",
          "type": "string"
        },
        "ProviderOrganizationCode": {
          "description": "The organization which provides services on the work order.  For PS work orders, this will be node's owner.",
          "type": "string"
        },
        "Purpose": {
          "description": "This field indicates the purpose for the work order.",
          "type": "string"
        },
        "QuantityAllocated": {
          "description": "The quantity that was allocated.",
          "type": "string"
        },
        "QuantityCompleted": {
          "description": "The quantity for which work order is completely confirmed.",
          "type": "string"
        },
        "QuantityReleased": {
          "description": "The quantity released.",
          "type": "string"
        },
        "QuantityRemoved": {
          "description": "The quantity removed due to exceptions.",
          "type": "string"
        },
        "QuantityRequested": {
          "description": "The quantity for which the work order is created.",
          "type": "string"
        },
        "ReasonCode": {
          "description": "The reason code indicating the reason for the work order to get cancelled.",
          "type": "string"
        },
        "ReasonCodeDescription": {
          "type": "string"
        },
        "ReasonText": {
          "description": "The reason text indicating the reason entered by user while cancelling the work order.",
          "type": "string"
        },
        "ReleaseAllowed": {
          "type": "string"
        },
        "Segment": {
          "description": "The segment to which the inventory involved in the work order belongs.",
          "type": "string"
        },
        "SegmentType": {
          "description": "This field indicates the segment type. Valid values are: - MTO : Made To Order - MTC : Made To Customer.",
          "type": "string"
        },
        "SellerOrganizationCode": {
          "description": "The seller organization for which the work order is placed.",
          "type": "string"
        },
        "SerialNo": {
          "description": "This field identifies a serial number for the serialized item involved in the work order.",
          "type": "string"
        },
        "ServiceAmount": {
          "description": "The total value of the service items on the work order.",
          "type": "string"
        },
        "ServiceComplexityLevel": {
          "description": "The service complexity level which indicates complexity of the work order, and is computed based on all service lines in the work order.",
          "type": "string"
        },
        "ServiceItemDescription": {
          "type": "string"
        },
        "ServiceItemGroupCode": {
          "description": "This field indicates the service item group on this work order.",
          "type": "string"
        },
        "ServiceItemID": {
          "description": "The identifier for the service item on this work order.",
          "type": "string"
        },
        "ServiceSupervisorId": {
          "description": "This field represents the supervisor responsible for this work order.This will be a valid user ID in the system. This user will belong to the node performing the work order.",
          "type": "string"
        },
        "ServiceUom": {
          "description": "The unit of measure for the service item.",
          "type": "string"
        },
        "ShipByDate": {
          "description": "The date before which a time-sensitive inventory must be shipped out.",
          "type": "string"
        },
        "ShipmentKey": {
          "description": "The shipment associated with this work order.",
          "type": "string"
        },
        "ShipmentNo": {
          "description": "The shipment number of the shipment with which the work order is associated.",
          "type": "string"
        },
        "StartNoEarlierThan": {
          "description": "The date a task should not start earlier than. Pass through fields to be stamped on each task.",
          "type": "string"
        },
        "Status": {
          "description": "The status of the work order.",
          "type": "string"
        },
        "StatusDate": {
          "description": "The date and time when the last status change took place.",
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "Timezone": {
          "description": "The time zone in which the work order will be executed.",
          "type": "string"
        },
        "TotalAmount": {
          "type": "string"
        },
        "TotalVolume": {
          "description": "Total volume of products being delivered.",
          "type": "string"
        },
        "TotalWeight": {
          "description": "Total weight of products being delivered.",
          "type": "string"
        },
        "Uom": {
          "description": "The unit of measure for the item.",
          "type": "string"
        },
        "VolumeUOM": {
          "description": "Volume Unit of Measure.",
          "type": "string"
        },
        "WeightUOM": {
          "description": "Weight Unit of Measure.",
          "type": "string"
        },
        "WorkOrderAppointments": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.WorkOrderAppointments"
        },
        "WorkOrderKey": {
          "description": "The primary key of the YFS_WORK_ORDER table.",
          "type": "string"
        },
        "WorkOrderNo": {
          "description": "The work order number. Identifies a work order within the context of a node and enterprise.",
          "type": "string"
        },
        "WorkOrderServiceLines": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.WorkOrderServiceLines"
        },
        "isHistory": {
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.WorkOrderAppointment": {
      "properties": {
        "AdditionalEquipmentUsed": {
          "description": "This field indicates items that were used, which were not originally requested.",
          "type": "string"
        },
        "AlertSales": {
          "description": "This field indicates that the sales person has to be notified and entered information is send to the sales person.",
          "type": "string"
        },
        "AlertScheduler": {
          "description": "This field indicates that the scheduler has to be notified and entered information is send to the scheduler.",
          "type": "string"
        },
        "AllocatedQuantity": {
          "description": "The capacity allocated for the service or delivery line.",
          "type": "string"
        },
        "ApptSeq": {
          "description": "This number denotes the position in the sequence when the current appointment would be executed.",
          "type": "string"
        },
        "ApptStatus": {
          "description": "The appointment status. Will be in synch with the service order line. Used in case of provided service work order.",
          "type": "string"
        },
        "AttentionRequired": {
          "description": "This flag indicates that some problems exist with work order and it has to be looked at.",
          "type": "string"
        },
        "ConsiderCurrentSlot": {
          "type": "string"
        },
        "ExecutionBy": {
          "description": "The technician executing the work order.",
          "type": "string"
        },
        "ExecutionComments": {
          "description": "The execution comments.",
          "type": "string"
        },
        "ExecutionDuration": {
          "description": "The amount of time took to perform the service.",
          "type": "string"
        },
        "ExecutionEndTime": {
          "description": "The last date when the execution of the service was attempted. This can correspond to either a successful or failed attempt.",
          "type": "string"
        },
        "ExecutionStartTime": {
          "description": "The last date when the execution of the service was attempted. This can correspond to either a successful or failed attempt.",
          "type": "string"
        },
        "ExpectedApptEndDate": {
          "description": "The expected end date of the appointment. Populated during route planning of provided service work order.",
          "type": "string"
        },
        "ExpectedApptStartDate": {
          "description": "The expected start date of the appointment.Populated during route planning of provided service work order.",
          "type": "string"
        },
        "IsRoutePlanningComplete": {
          "description": "This flag indicates whether the route planning has been completed and expected appointments dates and stop number were populated.",
          "type": "string"
        },
        "ItemsNotUsed": {
          "description": "This field indicates items that were returned back and were not used.",
          "type": "string"
        },
        "NonInventoryItemsReturned": {
          "description": "This field indicates special tools that were used and then returned.",
          "type": "string"
        },
        "PromisedApptEndDate": {
          "description": "The promised end date of the appointment. Used in case of provided service or delivery service work order.",
          "type": "string"
        },
        "PromisedApptStartDate": {
          "description": "The promised start date of the appointment. Used in case of provided service or delivery service work order.",
          "type": "string"
        },
        "RequestedQuantity": {
          "description": "The requested capacity for the service or delivery line.",
          "type": "string"
        },
        "RequestedVolume": {
          "type": "string"
        },
        "RequestedWeight": {
          "type": "string"
        },
        "ResourcePoolId": {
          "description": "The identifier for the resource pool associated with this work order appointment.",
          "type": "string"
        },
        "ServiceResourceId": {
          "description": "The identifier for the service resource associated with this work order appointment.",
          "type": "string"
        },
        "StopNumber": {
          "description": "The stop number assigned during route planning, indicating the order in which this appointemnt will be attempted during the route execution.",
          "type": "string"
        },
        "VehicleNumber": {
          "description": "This field indicates vehicle number that was used for job completion.",
          "type": "string"
        },
        "VehicleOdometerReading": {
          "description": "This field indicates odometer reading at the time of appointment completion.",
          "type": "string"
        },
        "VehicleServiceRequest": {
          "description": "This field indicates what were the problems with the vehicle that required service.",
          "type": "string"
        },
        "WorkOrderApptKey": {
          "description": "The primary key of the YFS_WORK_ORDER_APPT table.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.WorkOrderAppointments": {
      "properties": {
        "WorkOrderAppointment": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.WorkOrderAppointment"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.WorkOrderServiceLine": {
      "properties": {
        "CauseAppointmentChange": {
          "description": "Indicates that the addition or modification to this line requires the current work order appointment to be changed. If the flag is maintained internally, it will be set to Y when a new work order is created, this line is added to a work order without appointments, or an appointment is no longer available due to addition of this line.",
          "type": "string"
        },
        "HasChangedByThisTransaction": {
          "type": "string"
        },
        "IsComplete": {
          "description": "This flag indicates whether the service line is complete.",
          "type": "string"
        },
        "ItemDescription": {
          "type": "string"
        },
        "ItemGroupCode": {
          "description": "This field indicates the item group code. Valid values are: - PS : Provided Service - DS : Delivery Service.",
          "type": "string"
        },
        "ItemID": {
          "description": "The identifier of the service item.",
          "type": "string"
        },
        "ItemShortDescription": {
          "type": "string"
        },
        "LineNo": {
          "description": "The service line sequence number. Part of unique key.",
          "type": "string"
        },
        "OrderLine": {
          "$ref": "#/definitions/com.ibm.sterling.smcfs.order.OrderLine"
        },
        "QuantityRequired": {
          "description": "The required capacity of the associated service line.",
          "type": "string"
        },
        "Uom": {
          "description": "The unit of measure for the service item.",
          "type": "string"
        },
        "WorkOrderServiceLineKey": {
          "description": "The primary key for the YFS_WORK_ORDER_SERVICE_LINE table.",
          "type": "string"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.WorkOrderServiceLines": {
      "properties": {
        "WorkOrderServiceLine": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.WorkOrderServiceLine"
          },
          "type": "array"
        }
      }
    },
    "com.ibm.sterling.smcfs.order.WorkOrders": {
      "properties": {
        "NumberOfWorkOrders": {
          "description": "Number of work orders generated for this order line.",
          "type": "string"
        },
        "WorkOrder": {
          "items": {
            "$ref": "#/definitions/com.ibm.sterling.smcfs.order.WorkOrder"
          },
          "type": "array"
        }
      }
    }
  }
}